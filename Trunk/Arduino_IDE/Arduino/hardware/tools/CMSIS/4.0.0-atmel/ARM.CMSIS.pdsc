<?xml version="1.0" encoding="utf-8"?>

<package schemaVersion="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="PACK.xsd">
  <name>CMSIS</name>
  <description>Cortex Microcontroller Software Interface Standard (CMSIS) CORE, DSP, RTOS, Driver</description>
  <vendor>ARM</vendor>
  <!-- <license>CMSIS\CMSIS_END_USER_LICENCE_AGREEMENT.rtf</license> -->
  <url>http://www.keil.com/pack/</url>

  <taxonomy>
    <description Cclass="Board Support">Generic Interfaces for Evaluation and Development Boards</description>
    <description Cclass="CMSIS" doc="CMSIS\Documentation\General\html\index.html">Cortex Microcontroller Software Interface Components</description>
    <description Cclass="Device" doc="CMSIS\Documentation\Core\html\index.html">Startup, System Setup</description>
    <description Cclass="Drivers" doc="CMSIS\Documentation\Driver\html\index.html">Unified Device Drivers</description>
    <description Cclass="File System">File Drive Support and File System</description>
    <description Cclass="Network">Network Stack using IP descriptions</description>
    <description Cclass="USB">Universal Serial Bus Stack</description>
  </taxonomy>

  <releases>
    <release version="4.0.0">
      - CMSIS-Driver   2.00  Preliminary (incompatible update)
      - CMSIS-Pack     1.10  Preliminary
      - CMSIS-DSP      1.4.2 (see revision history for details)
      - CMSIS-Core     3.30  (see revision history for details)
      - CMSIS-RTOS RTX 4.74  (see revision history for details)
      - CMSIS-RTOS API 1.02  (unchanged)
      - CMSIS-SVD      1.10  (unchanged)
    </release>
    <release version="3.20.4">
      - CMSIS-RTOS 4.74 (see revision history for details)
      - PACK Extensions (Boards, Device Features, Flash Programming, Generators, Configuration Wizard). Schema version 1.1.
    </release>
    <release version="3.20.3">
      - CMSIS-Driver API Version 1.10 ARM prefix added (incompatible change)
      - CMSIS-RTOS 4.73 (see revision history for details)
    </release>
    <release version="3.20.2">
      - CMSIS-Pack documentation has been added
      - CMSIS-Drivers header and documentation have been added to PACK
      - CMSIS-CORE, CMSIS-DSP, CMSIS-RTOS API and CMSIS-SVD remain unchanged
    </release>
    <release version="3.20.1">
      - CMSIS-RTOS Keil RTX V4.72 has been added to PACK
      - CMSIS-CORE, CMSIS-DSP, CMSIS-RTOS API and CMSIS-SVD remain unchanged
    </release>
    <release version="3.20.0">
      The software portions that are deployed in the application program are now under a BSD license which allows usage
      of CMSIS components in any commercial or open source projects.  The Pack Description file Arm.CMSIS.pdsc describes the use cases
      The individual components have been update as listed below:
      - CMSIS-CORE adds functions for setting breakpoints, supports the latest GCC Compiler, and contains several corrections.
      - CMSIS-DSP library is optimized for more performance and contains several bug fixes.
      - CMSIS-RTOS API is extended with capabilities for short timeouts, Kernel initialization, and prepared for a C++ interface.
      - CMSIS-SVD is unchanged.
    </release>
  </releases>

  <devices>
    <!-- ******************************  Cortex-M0  ****************************** -->
    <family Dfamily="ARM Cortex M0" Dvendor="ARM:82">
      <device Dname="ARMCM0">
        <processor Dcore="Cortex-M0" DcoreVersion="r0p0" Dfpu="0" Dmpu="0" Dendian="Little-endian" Dclock="10000000"/>
        <compile   header="Device\ARM\ARMCM0\Include\ARMCM0.h"/>
        <debug     svd="Device\ARM\SVD\ARMCM0.svd"/>
        <algorithm name="Device\ARM\Flash\NEW_DEVICE.flm"               start="0x00000000"  size="0x00040000" default="1"/>
        <book      name="Device\ARM\Documents\cortex_m0_dgug.pdf"       title="Cortex-M4 Device Generic Users Guide"/>

        <description>
          The Cortex-M0 processor is an entry-level 32-bit ARM Cortex processor designed
          for a broad range of embedded applications. It offers significant benefits to developers,
          including:
          • simple, easy-to-use programmers model
          • highly efficient ultra-low power operation
          • excellent code density
          • deterministic, high-performance interrupt handling
          • upward compatibility with the rest of the Cortex-M processor family.
        </description>
      </device>
    </family>

    <!-- ******************************  Cortex-M0P  ****************************** -->
    <family Dfamily="ARM Cortex M0 plus" Dvendor="ARM:82">
      <device Dname="ARMCM0P">
        <processor Dcore="Cortex-M0+" DcoreVersion="r0p1" Dfpu="0" Dmpu="0" Dendian="Little-endian" Dclock="10000000"/>
        <compile   header="Device\ARM\ARMCM0plus\Include\ARMCM0plus.h"/>
        <debug     svd="Device\ARM\SVD\ARMCM0P.svd"/>
        <algorithm name="Device\ARM\Flash\NEW_DEVICE.flm"               start="0x00000000"  size="0x00040000" default="1"/>
        <book      name="Device\ARM\Documents\cortex_m0p_dgug.pdf"       title="Cortex-M4 Device Generic Users Guide"/>
        <description>
          The Cortex-M0+ processor is an entry-level 32-bit ARM Cortex processor designed
          for a broad range of embedded applications. It offers significant benefits to developers,
          including:
          • simple, easy-to-use programmers model
          • highly efficient ultra-low power operation
          • excellent code density
          • deterministic, high-performance interrupt handling
          • upward compatibility with the rest of the Cortex-M processor family.
        </description>
      </device>
    </family>

    <!-- ******************************  Cortex-M3  ****************************** -->
    <family Dfamily="ARM Cortex M3" Dvendor="ARM:82">
      <device Dname="ARMCM3">
        <processor Dcore="Cortex-M3" DcoreVersion="r2p1" Dfpu="0" Dmpu="0" Dendian="Little-endian" Dclock="10000000"/>
        <compile   header="Device\ARM\ARMCM3\Include\ARMCM3.h"/>
        <debug     svd="Device\ARM\SVD\ARMCM3.svd"/>
        <algorithm name="Device\ARM\Flash\NEW_DEVICE.flm"               start="0x00000000"  size="0x00040000" default="1"/>
        <book      name="Device\ARM\Documents\cortex_m3_dgug.pdf"       title="Cortex-M3 Device Generic Users Guide"/>
        <description>
          The Cortex-M3 processor is an entry-level 32-bit ARM Cortex processor designed
          for a broad range of embedded applications. It offers significant benefits to developers,
          including:
          • simple, easy-to-use programmers model
          • highly efficient ultra-low power operation
          • excellent code density
          • deterministic, high-performance interrupt handling
          • upward compatibility with the rest of the Cortex-M processor family.
        </description>
      </device>
    </family>

    <!-- ******************************  Cortex-M4  ****************************** -->
    <family Dfamily="ARM Cortex M4" Dvendor="ARM:82">
      <device Dname="ARMCM4">
        <processor Dcore="Cortex-M4" DcoreVersion="r0p1" Dfpu="1" Dmpu="0" Dendian="Little-endian" Dclock="10000000"/>
        <compile   header="Device\ARM\ARMCM4\Include\ARMCM4.h"/>
        <debug     svd="Device\ARM\SVD\ARMCM4.svd"/>
        <algorithm name="Device\ARM\Flash\NEW_DEVICE.flm"               start="0x00000000"  size="0x00040000" default="1"/>
        <book      name="Device\ARM\Documents\cortex_m4_dgug.pdf"       title="Cortex-M4 Device Generic Users Guide"/>
        <description>
          The Cortex-M4 processor is an entry-level 32-bit ARM Cortex processor designed
          for a broad range of embedded applications. It offers significant benefits to developers,
          including:
          • simple, easy-to-use programmers model
          • highly efficient ultra-low power operation
          • excellent code density
          • deterministic, high-performance interrupt handling
          • upward compatibility with the rest of the Cortex-M processor family.
        </description>
      </device>
    </family>


    <!-- ******************************  ARMSC000  ****************************** -->
    <family Dfamily="ARM SC000" Dvendor="ARM:82">
      <device Dname="ARMSC000">
        <processor Dcore="SC000" DcoreVersion="r0p1" Dfpu="0" Dmpu="0" Dendian="Little-endian" Dclock="10000000"/>
        <compile   header="Device\ARM\ARMSC000\Include\ARMSC000.h"/>
        <debug     svd="Device\ARM\SVD\ARMSC000.svd"/>
        <algorithm name="Device\ARM\Flash\NEW_DEVICE.flm"               start="0x00000000"  size="0x00040000" default="1"/>
        <description>
          The ARM SC000 processor is an entry-level 32-bit ARM Cortex processor designed
          for a broad range of secure embedded applications. It offers significant benefits to developers,
          including:
          • simple, easy-to-use programmers model
          • highly efficient ultra-low power operation
          • excellent code density
          • deterministic, high-performance interrupt handling
        </description>
      </device>
    </family>


    <!-- ******************************  ARMSC300  ****************************** -->
    <family Dfamily="ARM SC300" Dvendor="ARM:82">
      <device Dname="ARMSC300">
        <processor Dcore="SC300" DcoreVersion="r0p1" Dfpu="0" Dmpu="0" Dendian="Little-endian" Dclock="10000000"/>
        <compile   header="Device\ARM\ARMSC300\Include\ARMSC300.h"/>
        <debug     svd="Device\ARM\SVD\ARMSC300.svd"/>
        <algorithm name="Device\ARM\Flash\NEW_DEVICE.flm"               start="0x00000000"  size="0x00040000" default="1"/>

        <description>
          The ARM SC300 processor is an entry-level 32-bit ARM Cortex processor designed
          for a broad range of secure embedded applications. It offers significant benefits to developers,
          including:
          • simple, easy-to-use programmers model
          • highly efficient ultra-low power operation
          • excellent code density
          • deterministic, high-performance interrupt handling
        </description>
      </device>
    </family>

  </devices>


  <apis>
    <!-- CMSIS-RTOS API -->
    <api Cclass="CMSIS" Cgroup="RTOS" Capiversion="1.0" exclusive="0">
      <description>CMSIS-RTOS API for Cortex-M, SC000, and SC300</description>
      <files>
        <file category="doc" name="CMSIS\Documentation\RTOS\html\index.html"/>
      </files>
    </api>
    <api Cclass="Drivers" Cgroup="UART" Capiversion="2.00" exclusive="0">
        <description>UART Driver API for Cortex-M</description>
        <files>
          <file category="doc" name="CMSIS\Documentation\Driver\html\group__usart__interface__gr.html" />
          <file category="header" name="CMSIS\Driver\Include\Driver_USART.h" />
        </files>
      </api>
    <api Cclass="Drivers" Cgroup="SPI" Capiversion="2.00" exclusive="0">
        <description>SPI Driver API for Cortex-M</description>
        <files>
          <file category="doc" name="CMSIS\Documentation\Driver\html\group__spi__interface__gr.html" />
          <file category="header" name="CMSIS\Driver\Include\Driver_SPI.h" />
        </files>
      </api>
    <api Cclass="Drivers" Cgroup="I2C" Capiversion="2.00" exclusive="0">
        <description>I2C Driver API for Cortex-M</description>
        <files>
          <file category="doc" name="CMSIS\Documentation\Driver\html\group__i2c__interface__gr.html"/>
          <file category="header" name="CMSIS\Driver\Include\Driver_I2C.h" />
        </files>
      </api>
    <api Cclass="Drivers" Cgroup="MCI" Capiversion="2.00" exclusive="0">
        <description>MCI Driver API for Cortex-M</description>
        <files>
          <file category="doc" name="CMSIS\Documentation\Driver\html\group__mci__interface__gr.html" />
          <file category="header" name="CMSIS\Driver\Include\Driver_MCI.h" />
        </files>
      </api>
    <api Cclass="Drivers" Cgroup="NAND" Capiversion="2.00" exclusive="0">
        <description>NAND Flash Driver API for Cortex-M</description>
        <files>
          <file category="doc" name="CMSIS\Documentation\Driver\html\group__mci__interface__gr.html" />
          <file category="header" name="CMSIS\Driver\Include\Driver_NAND.h" />
        </files>
      </api>
    <api Cclass="Drivers" Cgroup="NOR" Capiversion="2.00" exclusive="0">
        <description>NOR Flash Driver API for Cortex-M</description>
        <files>
          <file category="doc" name="CMSIS\Documentation\Driver\html\group__nor__interface__gr.html" />
          <file category="header" name="CMSIS\Driver\Include\Driver_NOR.h" />
        </files>
      </api>
    <api Cclass="Drivers" Cgroup="Ethernet" Capiversion="2.00" exclusive="0">
        <description>Ethernet MAC and PHY Driver API for Cortex-M</description>
        <files>
          <file category="doc" name="CMSIS\Documentation\Driver\html\group__eth__interface__gr.html" />
          <file category="header" name="CMSIS\Driver\Include\Driver_ETH_MAC.h" />
          <file category="header" name="CMSIS\Driver\Include\Driver_ETH_PHY.h" />
        </files>
      </api>
    <api Cclass="Drivers" Cgroup="Ethernet MAC" Capiversion="2.00" exclusive="0">
        <description>Ethernet MAC Driver API for Cortex-M</description>
        <files>
          <file category="doc" name="CMSIS\Documentation\Driver\html\group__eth__mac__interface__gr.html" />
          <file category="header" name="CMSIS\Driver\Include\Driver_ETH_MAC.h" />
        </files>
      </api>
    <api Cclass="Drivers" Cgroup="Ethernet PHY" Capiversion="2.00" exclusive="0">
        <description>Ethernet PHY Driver API for Cortex-M</description>
        <files>
          <file category="doc" name="CMSIS\Documentation\Driver\html\group__eth__phy__interface__gr.html" />
          <file category="header" name="CMSIS\Driver\Include\Driver_ETH_PHY.h" />
        </files>
      </api>
    <api Cclass="Drivers" Cgroup="USB Device" Capiversion="2.00" exclusive="0">
        <description>USB Device Driver API for Cortex-M</description>
        <files>
          <file category="doc" name="CMSIS\Documentation\Driver\html\group__usbd__interface__gr.html" />
          <file category="header" name="CMSIS\Driver\Include\Driver_USBD.h" />
        </files>
      </api>
    <api Cclass="Drivers" Cgroup="USB Host" Capiversion="2.00" exclusive="0">
        <description>USB Host Driver API for Cortex-M</description>
        <files>
          <file category="doc" name="CMSIS\Documentation\Driver\html\group__usbh__interface__gr.html" />
          <file category="header" name="CMSIS\Driver\Include\Driver_USBH.h" />
        </files>
      </api>
  </apis>

  <!-- conditions are dependency rules that can apply to a component or an individual file -->
  <conditions>
    <condition id="Is ARM Compiler">
      <require Tcompiler="ARMCC"/>
    </condition>
               
    <condition id="Cortex-M Device">
      <description>Cortex-M processor based device: one of CM0, CM0+, CM3, CM4, SC000, SC3000</description>
      <accept Dcore="Cortex-M0"/>
      <accept Dcore="Cortex-M0+"/>
      <accept Dcore="Cortex-M3"/>
      <accept Dcore="Cortex-M4"/>
      <accept Dcore="SC000"/>
      <accept Dcore="SC300"/>
    </condition>

    <condition id="Cortex-M CMSIS Device">
      <description>ARM Cortex-M device</description>
      <accept Dname="ARMCM0"/>
      <accept Dname="ARMCM0+"/>
      <accept Dname="ARMCM3"/>
      <accept Dname="ARMCM4"/>
      <accept Dname="ARMSC000"/>
      <accept Dname="ARMSC300"/>
    </condition>

    <condition id="CMSIS Core">
      <description>CMSIS CORE processor and device specific Startup files</description>
      <require condition="Cortex-M Device"/>
      <require Cclass="Device" Cgroup="Startup"/>
    </condition>

    <condition id="ARMCM0">
      <!-- conditions selecting Devices -->
      <description>Generic ARM Cortex-M0 device</description>
      <require Dvendor="ARM:82" Dname="ARMCM0"/>
    </condition>

    <condition id="ARMCM0+">
      <description>Generic ARM Cortex-M0+ device</description>
      <require Dvendor="ARM:82" Dname="ARMCM0P"/>
    </condition>

    <condition id="ARMCM3">
      <description>Generic ARM Cortex-M3 device</description>
      <require Dvendor="ARM:82" Dname="ARMCM3"/>
    </condition>

    <condition id="ARMCM4">
      <description>Generic ARM Cortex-M4 device</description>
      <require Dvendor="ARM:82" Dname="ARMCM4"/>
    </condition>

    <condition id="ARMSC000">
      <description>Generic ARM SC000 device</description>
      <require Dvendor="ARM:82" Dname="ARMSC000"/>
    </condition>

    <condition id="ARMSC300">
      <description>Generic ARM SC300 device</description>
      <require Dvendor="ARM:82" Dname="ARMSC300"/>
    </condition>

    <condition id="CMSIS DSP">
      <description>CMSIS DSP Library is for ARM Cortex-M Devices only and is prebuild for one of the compilers ARMCC, GCC, G++ or IAR</description>
      <require condition="Cortex-M Device"/>
      <accept Tcompiler="GCC"/>
      <accept Tcompiler="G++"/>
      <accept Tcompiler="ARMCC"/>
      <accept Tcompiler="IAR"/>
    </condition>

    <condition id="CM0_LE_ARMCC">
      <description>Cortex-M0 or Cortex-M0+ or SC000 processor based device in little endian mode for the ARM Compiler</description>
      <accept Dcore="Cortex-M0"/>
      <accept Dcore="Cortex-M0+"/>
      <accept Dcore="SC000"/>
      <require Dendian="Little-endian"/>
      <require Tcompiler="ARMCC"/>
    </condition>

    <condition id="CM0_BE_ARMCC">
      <description>Cortex-M0 or Cortex-M0+ or SC000 processor based device in big endian mode for the ARM Compiler</description>
      <accept Dcore="Cortex-M0"/>
      <accept Dcore="Cortex-M0+"/>
      <accept Dcore="SC000"/>
      <require Dendian="Big-endian"/>
      <require Tcompiler="ARMCC"/>
    </condition>

    <condition id="CM3_LE_ARMCC">
      <description>Cortex-M3 or SC300 processor based device in little endian mode for the ARM Compiler</description>
      <accept Dcore="Cortex-M3"/>
      <accept Dcore="SC300"/>
      <require Dendian="Little-endian"/>
      <require Tcompiler="ARMCC"/>
    </condition>

    <condition id="CM3_BE_ARMCC">
      <description>Cortex-M3 or SC300 processor based device in big endian mode for the ARM Compiler</description>
      <accept Dcore="Cortex-M3"/>
      <accept Dcore="SC300"/>
      <require Dendian="Big-endian"/>
      <require Tcompiler="ARMCC"/>
    </condition>

    <condition id="CM4_LE_ARMCC">
      <description>Cortex-M4 processor based device in little endian mode for the ARM Compiler</description>
      <require Dcore="Cortex-M4" Dfpu="NO_FPU" Dendian="Little-endian"/>
      <require Tcompiler="ARMCC"/>
    </condition>

    <condition id="CM4_BE_ARMCC">
      <description>Cortex-M4 processor based device in big endian mode for the ARM Compiler</description>
      <require Dcore="Cortex-M4" Dfpu="NO_FPU" Dendian="Big-endian"/>
      <require Tcompiler="ARMCC"/>
    </condition>

    <condition id="CM4F_LE_ARMCC">
      <description>Cortex-M4 processor based device using Floating Point Unit in little endian mode for the ARM Compiler</description>
      <require Dcore="Cortex-M4" Dfpu="FPU" Dendian="Little-endian"/>
      <deny Dvendor="Infineon:7" Dname="XMC4*"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    
    <!-- XMC 4000 Series devices from Infineon require a special library -->
    <condition id="CM4F_LE_ARMCC_IFX">
      <description>Cortex-M4 processor based device using Floating Point Unit in little endian mode for the ARM Compiler and Infineon devices</description>
      <require Dcore="Cortex-M4" Dfpu="FPU" Dendian="Little-endian" Dvendor="Infineon:7" Dname="XMC4*"/>
      <require Tcompiler="ARMCC"/>
    </condition>

    <condition id="CM4F_BE_ARMCC">
      <description>Cortex-M4 processor based device using Floating Point Unit in big endian mode for the ARM Compiler</description>
      <require Dcore="Cortex-M4" Dfpu="FPU" Dendian="Big-endian"/>
      <require Tcompiler="ARMCC"/>
    </condition>

    <condition id="CM0_LE_GCC">
      <description>Cortex-M0 or Cortex-M0+ or SC000 processor based device in little endian mode for the GCC Compiler</description>
      <accept Dcore="Cortex-M0"/>
      <accept Dcore="Cortex-M0+"/>
      <accept Dcore="SC000"/>
      <require Dendian="Little-endian"/>
      <require Tcompiler="GCC"/>
    </condition>

    <condition id="CM3_LE_GCC">
      <description>Cortex-M3 or SC300 processor based device in little endian mode for the GCC Compiler</description>
      <accept Dcore="Cortex-M3"/>
      <accept Dcore="SC300"/>
      <require Dendian="Little-endian"/>
      <require Tcompiler="GCC"/>
    </condition>

    <condition id="CM4_LE_GCC">
      <description>Cortex-M4 processor based device in little endian mode for the GCC Compiler</description>
      <require Dcore="Cortex-M4" Dfpu="NO_FPU" Dendian="Little-endian"/>
      <require Tcompiler="GCC"/>
    </condition>

    <condition id="CM4F_LE_GCC">
      <description>Cortex-M4 processor based device using Floating Point Unit in little endian mode for the GCC Compiler</description>
      <require Dcore="Cortex-M4" Dfpu="FPU" Dendian="Little-endian"/>
      <deny Dvendor="Infineon:7" Dname="XMC4*"/>
      <require Tcompiler="GCC"/>
    </condition>

    <!-- XMC 4000 Series devices from Infineon require a special library -->
    <condition id="CM4F_LE_GCC_IFX">
      <description>Cortex-M4 processor based device using Floating Point Unit in little endian mode for the IAR Compiler and Infineon devices</description>
      <require Dcore="Cortex-M4" Dfpu="FPU" Dendian="Little-endian" Dvendor="Infineon:7" Dname="XMC4*"/>
      <require Tcompiler="GCC"/>
    </condition>

    <!-- G++ compiler -->
    <condition id="CM0_LE_G++">
      <description>Cortex-M0 or Cortex-M0+ or SC000 processor based device in little endian mode for the G++ Compiler</description>
      <accept Dcore="Cortex-M0"/>
      <accept Dcore="Cortex-M0+"/>
      <accept Dcore="SC000"/>
      <require Dendian="Little-endian"/>
      <require Tcompiler="G++"/>
    </condition>

    <condition id="CM3_LE_G++">
      <description>Cortex-M3 or SC300 processor based device in little endian mode for the G++ Compiler</description>
      <accept Dcore="Cortex-M3"/>
      <accept Dcore="SC300"/>
      <require Dendian="Little-endian"/>
      <require Tcompiler="G++"/>
    </condition>

    <condition id="CM4_LE_G++">
      <description>Cortex-M4 processor based device in little endian mode for the G++ Compiler</description>
      <require Dcore="Cortex-M4" Dfpu="NO_FPU" Dendian="Little-endian"/>
      <require Tcompiler="G++"/>
    </condition>

    <condition id="CM4F_LE_G++">
      <description>Cortex-M4 processor based device using Floating Point Unit in little endian mode for the G++ Compiler</description>
      <require Dcore="Cortex-M4" Dfpu="FPU" Dendian="Little-endian"/>
      <require Tcompiler="G++"/>      
    </condition>

    <condition id="CM0_LE_IAR">
      <description>Cortex-M0 or Cortex-M0+ or SC000 processor based device in little endian mode for the ARM Compiler</description>
      <accept Dcore="Cortex-M0"/>
      <accept Dcore="Cortex-M0+"/>
      <accept Dcore="SC000"/>
      <require Dendian="Little-endian"/>
      <require Tcompiler="IAR"/>
    </condition>

    <condition id="CM0_BE_IAR">
      <description>Cortex-M0 or Cortex-M0+ or SC000 processor based device in big endian mode for the ARM Compiler</description>
      <accept Dcore="Cortex-M0"/>
      <accept Dcore="Cortex-M0+"/>
      <accept Dcore="SC000"/>
      <require Dendian="Big-endian"/>
      <require Tcompiler="IAR"/>
    </condition>

    <condition id="CM3_LE_IAR">
      <description>Cortex-M3 or SC300 processor based device in little endian mode for the ARM Compiler</description>
      <accept Dcore="Cortex-M3"/>
      <accept Dcore="SC300"/>
      <require Dendian="Little-endian"/>
      <require Tcompiler="IAR"/>
    </condition>

    <condition id="CM3_BE_IAR">
      <description>Cortex-M3 or SC300 processor based device in big endian mode for the ARM Compiler</description>
      <accept Dcore="Cortex-M3"/>
      <accept Dcore="SC300"/>
      <require Dendian="Big-endian"/>
      <require Tcompiler="IAR"/>
    </condition>

    <condition id="CM4_LE_IAR">
      <description>Cortex-M4 processor based device in little endian mode for the ARM Compiler</description>
      <require Dcore="Cortex-M4" Dfpu="NO_FPU" Dendian="Little-endian"/>
      <require Tcompiler="IAR"/>
    </condition>

    <condition id="CM4_BE_IAR">
      <description>Cortex-M4 processor based device in big endian mode for the ARM Compiler</description>
      <require Dcore="Cortex-M4" Dfpu="NO_FPU" Dendian="Big-endian"/>
      <require Tcompiler="IAR"/>
    </condition>

    <condition id="CM4F_LE_IAR">
      <description>Cortex-M4 processor based device using Floating Point Unit in little endian mode for the ARM Compiler</description>
      <require Dcore="Cortex-M4" Dfpu="FPU" Dendian="Little-endian"/>
      <require Tcompiler="IAR"/>
    </condition>

    <condition id="CM4F_BE_IAR">
      <description>Cortex-M4 processor based device using Floating Point Unit in big endian mode for the ARM Compiler</description>
      <require Dcore="Cortex-M4" Dfpu="FPU" Dendian="Big-endian"/>
      <require Tcompiler="IAR"/>
    </condition>
  </conditions>
  
  <components>
    <!-- CMSIS-Core component -->
    <component Cclass="CMSIS" Cgroup="CORE" Cversion="3.30.0" condition="CMSIS Core">
      <description>CMSIS-CORE for Cortex-M, SC000, and SC300</description>
      <files>
        <!-- RTX templates -->
        <file category="source" attr="template" name="CMSIS\UserCodeTemplates\ITM_Retarget.c" select="CMSIS-CORE 'ITM Printf Debug'" condition="Is ARM Compiler"/>
        <!-- CPU independent -->
        <file category="doc"     name="CMSIS\Documentation\Core\html\index.html"/>
        <file category="include" name="CMSIS\Include\"/>
      </files>
    </component>

    <!-- CMSIS-Startup component -->
    <component Cclass="Device" Cgroup="Startup" Cversion="1.0.0" condition="Cortex-M CMSIS Device">
      <!-- Cversion is necessary -->
      <description>System and Startup for Generic ARM Cortex-Mx devices</description>
      <files>
        <!--  include folder -->
        <file category="header" name="Device\ARM\ARMCM0\Include\ARMCM0.h"                                   condition="ARMCM0"/>
        <file category="header" name="Device\ARM\ARMCM0plus\Include\ARMCM0plus.h"                           condition="ARMCM0+"/>
        <file category="header" name="Device\ARM\ARMCM3\Include\ARMCM3.h"                                   condition="ARMCM3"/>
        <file category="header" name="Device\ARM\ARMCM4\Include\ARMCM4.h"                                   condition="ARMCM4"/>
        <file category="header" name="Device\ARM\ARMSC000\Include\ARMSC000.h"                               condition="ARMSC000"/>
        <file category="header" name="Device\ARM\ARMSC300\Include\ARMSC300.h"                               condition="ARMSC300"/>

        <!-- include path for system header not required, as the device header is specified for device -->
        <!-- startup files -->
        <file category="source" name="Device\ARM\ARMCM0\Source\ARM\startup_ARMCM0.s"          version="1.0.0" attr="config" condition="ARMCM0"/>
        <file category="source" name="Device\ARM\ARMCM0plus\Source\ARM\startup_ARMCM0plus.s"  version="1.0.0" attr="config" condition="ARMCM0+"/>
        <file category="source" name="Device\ARM\ARMCM3\Source\ARM\startup_ARMCM3.s"          version="1.0.0" attr="config" condition="ARMCM3"/>
        <file category="source" name="Device\ARM\ARMCM4\Source\ARM\startup_ARMCM4.s"          version="1.0.0" attr="config" condition="ARMCM4"/>
        <file category="source" name="Device\ARM\ARMSC000\Source\ARM\startup_ARMSC000.s"      version="1.0.0" attr="config" condition="ARMSC000"/>
        <file category="source" name="Device\ARM\ARMSC300\Source\ARM\startup_ARMSC300.s"      version="1.0.0" attr="config" condition="ARMSC300"/>

        <!-- system file -->
        <file category="source" name="Device\ARM\ARMCM0\Source\system_ARMCM0.c"               version="1.0.0" attr="config" condition="ARMCM0"/>
        <file category="source" name="Device\ARM\ARMCM0plus\Source\system_ARMCM0plus.c"       version="1.0.0" attr="config" condition="ARMCM0+"/>
        <file category="source" name="Device\ARM\ARMCM3\Source\system_ARMCM3.c"               version="1.0.0" attr="config" condition="ARMCM3"/>
        <file category="source" name="Device\ARM\ARMCM4\Source\system_ARMCM4.c"               version="1.0.0" attr="config" condition="ARMCM4"/>
        <file category="source" name="Device\ARM\ARMSC000\Source\system_ARMSC000.c"           version="1.0.0" attr="config" condition="ARMSC000"/>
        <file category="source" name="Device\ARM\ARMSC300\Source\system_ARMSC300.c"           version="1.0.0" attr="config" condition="ARMSC300"/>
      </files>
    </component>


    <!-- CMSIS-DSP component -->
    <component Cclass="CMSIS" Cgroup="DSP" Cversion="1.4.2" condition="CMSIS DSP">
      <description>CMSIS-DSP Library for Cortex-M, SC000, and SC300</description>
      <files>
        <!-- CPU independent -->
        <file category="doc" name="CMSIS\Documentation\DSP\html\index.html"/>
        <!-- <file category="header" name="CMSIS\Include\arm_common_tables.h"/> -->
        <file category="header" name="CMSIS\Include\arm_math.h"/>
        <!-- CPU and Compiler dependent -->
        <!-- ARMCC -->
        <file category="library" condition="CM0_LE_ARMCC"  name="CMSIS\Lib\ARM\arm_cortexM0l_math.lib" src="CMSIS\DSP_Lib\Source\ARM"/>
        <file category="library" condition="CM0_BE_ARMCC"  name="CMSIS\Lib\ARM\arm_cortexM0b_math.lib" src="CMSIS\DSP_Lib\Source\ARM"/>
        <file category="library" condition="CM3_LE_ARMCC"  name="CMSIS\Lib\ARM\arm_cortexM3l_math.lib" src="CMSIS\DSP_Lib\Source\ARM"/>
        <file category="library" condition="CM3_BE_ARMCC"  name="CMSIS\Lib\ARM\arm_cortexM3b_math.lib" src="CMSIS\DSP_Lib\Source\ARM"/>
        <file category="library" condition="CM4_LE_ARMCC"  name="CMSIS\Lib\ARM\arm_cortexM4l_math.lib" src="CMSIS\DSP_Lib\Source\ARM"/>
        <file category="library" condition="CM4_BE_ARMCC"  name="CMSIS\Lib\ARM\arm_cortexM4b_math.lib" src="CMSIS\DSP_Lib\Source\ARM"/>
        <file category="library" condition="CM4F_LE_ARMCC" name="CMSIS\Lib\ARM\arm_cortexM4lf_math.lib" src="CMSIS\DSP_Lib\Source\ARM"/>
        <file category="library" condition="CM4F_BE_ARMCC" name="CMSIS\Lib\ARM\arm_cortexM4bf_math.lib" src="CMSIS\DSP_Lib\Source\ARM"/>

        <!-- GCC -->
        <file category="library" condition="CM0_LE_GCC"    name="CMSIS\Lib\GCC\libarm_cortexM0l_math.a" src="CMSIS\DSP_Lib\Source\GCC"/>
        <file category="library" condition="CM3_LE_GCC"    name="CMSIS\Lib\GCC\libarm_cortexM3l_math.a" src="CMSIS\DSP_Lib\Source\GCC"/>
        <file category="library" condition="CM4_LE_GCC"    name="CMSIS\Lib\GCC\libarm_cortexM4l_math.a" src="CMSIS\DSP_Lib\Source\GCC"/>
        <file category="library" condition="CM4F_LE_GCC"   name="CMSIS\Lib\GCC\libarm_cortexM4lf_math.a" src="CMSIS\DSP_Lib\Source\GCC"/>
        <!-- G++ -->
        <file category="library" condition="CM0_LE_G++"    name="CMSIS\Lib\G++\libarm_cortexM0l_math.a" src="CMSIS\DSP_Lib\Source\G++"/>
        <file category="library" condition="CM3_LE_G++"    name="CMSIS\Lib\G++\libarm_cortexM3l_math.a" src="CMSIS\DSP_Lib\Source\G++"/>
        <file category="library" condition="CM4_LE_G++"    name="CMSIS\Lib\G++\libarm_cortexM4l_math.a" src="CMSIS\DSP_Lib\Source\G++"/>
        <file category="library" condition="CM4F_LE_G++"   name="CMSIS\Lib\G++\libarm_cortexM4lf_math.a" src="CMSIS\DSP_Lib\Source\G++"/>
      </files>
    </component>

    <!-- CMSIS-RTOS Keil RTX component -->
    <component Cclass="CMSIS" Cgroup="RTOS" Csub="Keil RTX" Cversion="4.74.0" condition="CMSIS Core">
      <description>CMSIS-RTOS RTX implementation for Cortex-M, SC000, and SC300</description>
      <RTE_Components_h>
        <!-- the following content goes into file 'RTE_Components.h' -->
        #define RTE_RTOS_RTX                    /* CMSIS-RTOS Keil RTX */
      </RTE_Components_h>
      <files>
        <!-- CPU independent -->
        <file category="doc" name="CMSIS_RTX\Doc\index.html"/>
        <file category="header" name="CMSIS_RTX\INC\cmsis_os.h"/>
        <file category="source" attr="config"   name="CMSIS_RTX\Templates\RTX_Conf_CM.c" version="4.70"/>
        
        <!-- RTX templates -->
        <file category="header" attr="template" name="CMSIS_RTX\UserCodeTemplates\osObjects.h" select="CMSIS-RTOS 'main' function"/>
        <file category="source" attr="template" name="CMSIS_RTX\UserCodeTemplates\main.c"      select="CMSIS-RTOS 'main' function"/>
        <file category="source" attr="template" name="CMSIS_RTX\UserCodeTemplates\MailQueue.c" select="CMSIS-RTOS Mail Queue"/>
        <file category="source" attr="template" name="CMSIS_RTX\UserCodeTemplates\MemPool.c"   select="CMSIS-RTOS Memory Pool"/>
        <file category="source" attr="template" name="CMSIS_RTX\UserCodeTemplates\MsgQueue.c"  select="CMSIS-RTOS Message Queue"/>
        <file category="source" attr="template" name="CMSIS_RTX\UserCodeTemplates\Mutex.c"     select="CMSIS-RTOS Mutex"/>
        <file category="source" attr="template" name="CMSIS_RTX\UserCodeTemplates\Semaphore.c" select="CMSIS-RTOS Semaphore"/>
        <file category="source" attr="template" name="CMSIS_RTX\UserCodeTemplates\Thread.c"    select="CMSIS-RTOS Thread"/>
        
        <!-- CPU and Compiler dependent -->
        <!-- ARMCC -->
        <file category="library" condition="CM0_LE_ARMCC"  name="CMSIS_RTX\Lib\ARM\RTX_CM0.lib"   src="CMSIS_RTX\SRC\ARM"/>
        <file category="library" condition="CM0_BE_ARMCC"  name="CMSIS_RTX\Lib\ARM\RTX_CM0_B.lib" src="CMSIS_RTX\SRC\ARM"/>
        <file category="library" condition="CM3_LE_ARMCC"  name="CMSIS_RTX\Lib\ARM\RTX_CM3.lib"   src="CMSIS_RTX\SRC\ARM"/>
        <file category="library" condition="CM3_BE_ARMCC"  name="CMSIS_RTX\Lib\ARM\RTX_CM3_B.lib" src="CMSIS_RTX\SRC\ARM"/>
        <file category="library" condition="CM4_LE_ARMCC"  name="CMSIS_RTX\Lib\ARM\RTX_CM3.lib"   src="CMSIS_RTX\SRC\ARM"/>
        <file category="library" condition="CM4_BE_ARMCC"  name="CMSIS_RTX\Lib\ARM\RTX_CM3_B.lib" src="CMSIS_RTX\SRC\ARM"/>
        <file category="library" condition="CM4F_LE_ARMCC" name="CMSIS_RTX\Lib\ARM\RTX_CM4.lib"   src="CMSIS_RTX\SRC\ARM"/>
        <file category="library" condition="CM4F_BE_ARMCC" name="CMSIS_RTX\Lib\ARM\RTX_CM4_B.lib" src="CMSIS_RTX\SRC\ARM"/>
        <file category="library" condition="CM4F_LE_ARMCC_IFX" name="CMSIS_RTX\Lib\ARM\RTX_CM4_IFX.lib" src="CMSIS\DSP_Lib\Source\ARM"/>
        <!-- GCC -->
        <file category="library" condition="CM0_LE_GCC"  name="CMSIS_RTX\Lib\GCC\libRTX_CM0.a" src="CMSIS_RTX\SRC\GCC"/>
        <file category="library" condition="CM3_LE_GCC"  name="CMSIS_RTX\Lib\GCC\libRTX_CM3.a" src="CMSIS_RTX\SRC\GCC"/>
        <file category="library" condition="CM4_LE_GCC"  name="CMSIS_RTX\Lib\GCC\libRTX_CM3.a" src="CMSIS_RTX\SRC\GCC"/>
        <file category="library" condition="CM4F_LE_GCC" name="CMSIS_RTX\Lib\GCC\libRTX_CM4.a" src="CMSIS_RTX\SRC\GCC"/>
        <file category="library" condition="CM4F_LE_GCC_IFX" name="CMSIS_RTX\Lib\GCC\libRTX_CM4_IFX.a" src="CMSIS\DSP_Lib\Source\GCC"/>
        <!-- IAR -->
        <file category="library" condition="CM0_LE_IAR"  name="CMSIS_RTX\Lib\IAR\RTX_CM0.a"   src="CMSIS_RTX\SRC\IAR"/>
        <file category="library" condition="CM0_BE_IAR"  name="CMSIS_RTX\Lib\IAR\RTX_CM0_B.a" src="CMSIS_RTX\SRC\IAR"/>
        <file category="library" condition="CM3_LE_IAR"  name="CMSIS_RTX\Lib\IAR\RTX_CM3.a"   src="CMSIS_RTX\SRC\IAR"/>
        <file category="library" condition="CM3_BE_IAR"  name="CMSIS_RTX\Lib\IAR\RTX_CM3_B.a" src="CMSIS_RTX\SRC\IAR"/>
        <file category="library" condition="CM4_LE_IAR"  name="CMSIS_RTX\Lib\IAR\RTX_CM3.a"   src="CMSIS_RTX\SRC\IAR"/>
        <file category="library" condition="CM4_BE_IAR"  name="CMSIS_RTX\Lib\IAR\RTX_CM3_B.a" src="CMSIS_RTX\SRC\IAR"/>
        <file category="library" condition="CM4F_LE_IAR" name="CMSIS_RTX\Lib\IAR\RTX_CM4.a"   src="CMSIS_RTX\SRC\IAR"/>
        <file category="library" condition="CM4F_BE_IAR" name="CMSIS_RTX\Lib\IAR\RTX_CM4_B.a" src="CMSIS_RTX\SRC\IAR"/>
      </files>
    </component>
  </components>
</package>
