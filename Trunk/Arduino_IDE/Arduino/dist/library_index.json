{
  "libraries": [
    {
      "name": "Audio",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows playing audio files from an SD card. For Arduino DUE only.",
      "paragraph": "With this library you can use the Arduino Due DAC outputs to play audio files.\u003cbr /\u003eThe audio files must be in the raw .wav format.",
      "website": "http://arduino.cc/en/Reference/Audio",
      "category": "Signal Input/Output",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Audio-1.0.0.zip",
      "archiveFileName": "Audio-1.0.0.zip",
      "size": 6751,
      "checksum": "SHA-256:307c2954d4f4f8c4361574fb10d57b4978f48de0d9fc694df36d7377321c12c7"
    },
    {
      "name": "Audio",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows playing audio files from an SD card. For Arduino DUE only.",
      "paragraph": "With this library you can use the Arduino Due DAC outputs to play audio files.\u003cbr /\u003eThe audio files must be in the raw .wav format.",
      "website": "http://arduino.cc/en/Reference/Audio",
      "category": "Signal Input/Output",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Audio-1.0.1.zip",
      "archiveFileName": "Audio-1.0.1.zip",
      "size": 6709,
      "checksum": "SHA-256:5732fa3d49f73464bddf3cc314c4a2333e9b07967f05900a39daaf7819c44c9e"
    },
    {
      "name": "Audio",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows playing audio files from an SD card. For Arduino DUE only.",
      "paragraph": "With this library you can use the Arduino Due DAC outputs to play audio files.\u003cbr /\u003eThe audio files must be in the raw .wav format.",
      "website": "http://arduino.cc/en/Reference/Audio",
      "category": "Signal Input/Output",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Audio-1.0.2.zip",
      "archiveFileName": "Audio-1.0.2.zip",
      "size": 6713,
      "checksum": "SHA-256:d74a30a6cae92452f48936a5a5d12d8e9a66df4d5c85be1464f69a164e0d51a6"
    },
    {
      "name": "Audio",
      "version": "1.0.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows playing audio files from an SD card. For Arduino DUE only.",
      "paragraph": "With this library you can use the Arduino Due DAC outputs to play audio files.\u003cbr /\u003eThe audio files must be in the raw .wav format.",
      "website": "http://www.arduino.cc/en/Reference/Audio",
      "category": "Signal Input/Output",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Audio-1.0.3.zip",
      "archiveFileName": "Audio-1.0.3.zip",
      "size": 6725,
      "checksum": "SHA-256:df86f91b8ddf9dcf433ac4f0f72352865cbc0ec495c81f8ef712e60a629d5439"
    },
    {
      "name": "Audio",
      "version": "1.0.4",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows playing audio files from an SD card. For Arduino DUE only.",
      "paragraph": "With this library you can use the Arduino Due DAC outputs to play audio files.\u003cbr /\u003eThe audio files must be in the raw .wav format.",
      "website": "http://www.arduino.cc/en/Reference/Audio",
      "category": "Signal Input/Output",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Audio-1.0.4.zip",
      "archiveFileName": "Audio-1.0.4.zip",
      "size": 6723,
      "checksum": "SHA-256:0192fadf0160776ad3e290f56ae01dea1ba947b6e90585345cd935fc42a91681"
    },
    {
      "name": "Audio",
      "version": "1.0.5",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows playing audio files from an SD card. For Arduino DUE only.",
      "paragraph": "With this library you can use the Arduino Due DAC outputs to play audio files.\u003cbr /\u003eThe audio files must be in the raw .wav format.",
      "website": "http://www.arduino.cc/en/Reference/Audio",
      "category": "Signal Input/Output",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Audio-1.0.5.zip",
      "archiveFileName": "Audio-1.0.5.zip",
      "size": 6726,
      "checksum": "SHA-256:7857cba53762e0219ce0320d17649098a7b445d81ee2a0f38e8af52e1ff67745"
    },
    {
      "name": "AudioZero",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows playing audio files from an SD card. For Arduino Zero only.",
      "paragraph": "With this library you can use the Arduino Zero DAC outputs to play audio files.\u003cbr /\u003eThe audio files must be in the raw .wav format.",
      "website": "http://arduino.cc/en/Reference/Audio",
      "category": "Signal Input/Output",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/AudioZero-1.0.1.zip",
      "archiveFileName": "AudioZero-1.0.1.zip",
      "size": 4923,
      "checksum": "SHA-256:d0f08c9f2917c3a26fb6c976a204c3a927e8493505de03811385f468e08cf6ba"
    },
    {
      "name": "AudioZero",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows playing audio files from an SD card. For Arduino Zero only.",
      "paragraph": "With this library you can use the Arduino Zero DAC outputs to play audio files.\u003cbr /\u003eThe audio files must be in the raw .wav format.",
      "website": "http://arduino.cc/en/Reference/Audio",
      "category": "Signal Input/Output",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/AudioZero-1.0.0.zip",
      "archiveFileName": "AudioZero-1.0.0.zip",
      "size": 4960,
      "checksum": "SHA-256:68193376fb97f3a87069ed9e772760f755ed689d2c24b7df4db8efb17bae37c8"
    },
    {
      "name": "AudioZero",
      "version": "1.1.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows playing audio files from an SD card. For Arduino Zero and MKR1000 only.",
      "paragraph": "With this library you can use the Arduino Zero ort MKR1000 DAC output (A0) to play audio files.\u003cbr /\u003eThe audio files must be in the raw .wav format.",
      "website": "http://arduino.cc/en/Reference/Audio",
      "category": "Signal Input/Output",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/AudioZero-1.1.1.zip",
      "archiveFileName": "AudioZero-1.1.1.zip",
      "size": 4949,
      "checksum": "SHA-256:05492f24eb2b1b792c736a3faac975eeec734036604151e300823a02ec352708"
    },
    {
      "name": "Bridge",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Bridge-1.0.0.zip",
      "archiveFileName": "Bridge-1.0.0.zip",
      "size": 79941,
      "checksum": "SHA-256:b30b4beebbfef3e191055375a80a6a96cc600fd61691f1297fe1fd48e175fd85"
    },
    {
      "name": "Bridge",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Bridge-1.0.1.zip",
      "archiveFileName": "Bridge-1.0.1.zip",
      "size": 79959,
      "checksum": "SHA-256:2dd0bcaaa2dc7ef10f22cd6eb5154845e341ee799bce7229c414731daa65a2aa"
    },
    {
      "name": "Bridge",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Bridge-1.0.2.zip",
      "archiveFileName": "Bridge-1.0.2.zip",
      "size": 79962,
      "checksum": "SHA-256:b1803cc17056d050ccc5ac2837c522a460a84259043c89a038b4146071197886"
    },
    {
      "name": "Bridge",
      "version": "1.0.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Bridge-1.0.3.zip",
      "archiveFileName": "Bridge-1.0.3.zip",
      "size": 80005,
      "checksum": "SHA-256:deb75f0e1dd61b8ea6f0d05a99efb6ae86325279856f028d92c6b7c2c6f1f84e"
    },
    {
      "name": "Bridge",
      "version": "1.0.4",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Bridge-1.0.4.zip",
      "archiveFileName": "Bridge-1.0.4.zip",
      "size": 80022,
      "checksum": "SHA-256:f1b21de043f9bc08a5383be9ebc48e23bec92a6b38cc3ea11eb5d090ed1956c2"
    },
    {
      "name": "Bridge",
      "version": "1.0.5",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://www.arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Bridge-1.0.5.zip",
      "archiveFileName": "Bridge-1.0.5.zip",
      "size": 80073,
      "checksum": "SHA-256:2ef0849c500c6db8d990746c4c22ebc33c60213befc4363a15d0bd8bcf6d95a0"
    },
    {
      "name": "Bridge",
      "version": "1.0.6",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://www.arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Bridge-1.0.6.zip",
      "archiveFileName": "Bridge-1.0.6.zip",
      "size": 80080,
      "checksum": "SHA-256:b2703c834d980b5c5ed25e1687c8ced3a0b11ce9f3e8bbf24d08551355fb6d18"
    },
    {
      "name": "Bridge",
      "version": "1.0.7",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://www.arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Bridge-1.0.7.zip",
      "archiveFileName": "Bridge-1.0.7.zip",
      "size": 80825,
      "checksum": "SHA-256:f06c3660a871d61e1f09b9f7fda713fe90a670c1d100eabdceab333c59ddcb5e"
    },
    {
      "name": "Bridge",
      "version": "1.1.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://www.arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Bridge-1.1.0.zip",
      "archiveFileName": "Bridge-1.1.0.zip",
      "size": 58950,
      "checksum": "SHA-256:b97e30a8f3b80ae26deaa76c165bee0baff6d30aba8235ab0a259ace4e58ec41"
    },
    {
      "name": "Bridge",
      "version": "1.6.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the AVR. For Arduino Yún and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://www.arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Bridge-1.6.0.zip",
      "archiveFileName": "Bridge-1.6.0.zip",
      "size": 59588,
      "checksum": "SHA-256:0bf36ea42f0d42a94a6b93561b8039b1d29c221ddc8dfd344b22c7cfbfc66f41"
    },
    {
      "name": "Bridge",
      "version": "1.6.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the microcontroller. For Arduino/Genuino Yún, Yún Shield and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://www.arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Bridge-1.6.1.zip",
      "archiveFileName": "Bridge-1.6.1.zip",
      "size": 61326,
      "checksum": "SHA-256:c806d688bb840af389cbd340b3ab37cb6ed0116c10f1f067d268f43fd7fec166"
    },
    {
      "name": "Esplora",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Grants easy access to the various sensors and actuators of the Esplora. For Arduino Esplora only.",
      "paragraph": "The sensors available on the board are:2-Axis analog joystick with center push-button,4 push-buttons,microphone, light sensor, temperature sensor, 3-axis accelerometer, 2 TinkerKit input connectors.\u003c/br\u003eThe actuators available on the board are: bright RGB LED, piezo buzzer, 2 TinkerKit output connectors.",
      "website": "http://arduino.cc/en/Reference/EsploraLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Esplora-1.0.0.zip",
      "archiveFileName": "Esplora-1.0.0.zip",
      "size": 19793,
      "checksum": "SHA-256:2890ace3ba57aede325ee1ada8462f28f346274ccdb60fd1bcccb69fda5a5b2c"
    },
    {
      "name": "Esplora",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Grants easy access to the various sensors and actuators of the Esplora. For Arduino Esplora only.",
      "paragraph": "The sensors available on the board are:2-Axis analog joystick with center push-button,4 push-buttons,microphone, light sensor, temperature sensor, 3-axis accelerometer, 2 TinkerKit input connectors.\u003c/br\u003eThe actuators available on the board are: bright RGB LED, piezo buzzer, 2 TinkerKit output connectors.",
      "website": "http://arduino.cc/en/Reference/EsploraLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Esplora-1.0.1.zip",
      "archiveFileName": "Esplora-1.0.1.zip",
      "size": 19793,
      "checksum": "SHA-256:476ae313a12aee5359841fdb9126345a4eda15ff2c5acb11badc85868737007f"
    },
    {
      "name": "Esplora",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Grants easy access to the various sensors and actuators of the Esplora. For Arduino Esplora only.",
      "paragraph": "The sensors available on the board are:2-Axis analog joystick with center push-button,4 push-buttons,microphone, light sensor, temperature sensor, 3-axis accelerometer, 2 TinkerKit input connectors.\u003c/br\u003eThe actuators available on the board are: bright RGB LED, piezo buzzer, 2 TinkerKit output connectors.",
      "website": "http://arduino.cc/en/Reference/EsploraLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Esplora-1.0.2.zip",
      "archiveFileName": "Esplora-1.0.2.zip",
      "size": 19787,
      "checksum": "SHA-256:e18579cdf2aa4bd7b3858428e30275ba5f1fe1a900ff21e532bebc7a20ccf4bd"
    },
    {
      "name": "Esplora",
      "version": "1.0.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Grants easy access to the various sensors and actuators of the Esplora. For Arduino Esplora only.",
      "paragraph": "The sensors available on the board are:2-Axis analog joystick with center push-button,4 push-buttons,microphone, light sensor, temperature sensor, 3-axis accelerometer, 2 TinkerKit input connectors.\u003c/br\u003eThe actuators available on the board are: bright RGB LED, piezo buzzer, 2 TinkerKit output connectors.",
      "website": "http://arduino.cc/en/Reference/EsploraLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Esplora-1.0.3.zip",
      "archiveFileName": "Esplora-1.0.3.zip",
      "size": 19795,
      "checksum": "SHA-256:e752bd1e15fd882920b4adb0f43ffb85e472fe244ed9f113bbe0732f736b239c"
    },
    {
      "name": "Esplora",
      "version": "1.0.4",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Grants easy access to the various sensors and actuators of the Esplora. For Arduino Esplora only.",
      "paragraph": "The sensors available on the board are:2-Axis analog joystick with center push-button,4 push-buttons,microphone, light sensor, temperature sensor, 3-axis accelerometer, 2 TinkerKit input connectors.\u003c/br\u003eThe actuators available on the board are: bright RGB LED, piezo buzzer, 2 TinkerKit output connectors.",
      "website": "http://www.arduino.cc/en/Reference/EsploraLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Esplora-1.0.4.zip",
      "archiveFileName": "Esplora-1.0.4.zip",
      "size": 19803,
      "checksum": "SHA-256:c1329da7e38a61573e71ae5054b35be3d8fa3baded9772d0b5b33a4b1cd87517"
    },
    {
      "name": "Ethernet",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "http://arduino.cc/en/Reference/Ethernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Ethernet-1.0.0.zip",
      "archiveFileName": "Ethernet-1.0.0.zip",
      "size": 47713,
      "checksum": "SHA-256:2b167052121d10748e0b48fcd57055424a699522c584f203369d92391eb4f009"
    },
    {
      "name": "Ethernet",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "http://arduino.cc/en/Reference/Ethernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Ethernet-1.0.1.zip",
      "archiveFileName": "Ethernet-1.0.1.zip",
      "size": 47701,
      "checksum": "SHA-256:317bd908593de73c8d8dad87ce0f5fda00b376d5e9e01c644a5245efab446bb4"
    },
    {
      "name": "Ethernet",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "http://arduino.cc/en/Reference/Ethernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Ethernet-1.0.2.zip",
      "archiveFileName": "Ethernet-1.0.2.zip",
      "size": 47573,
      "checksum": "SHA-256:f1c9a8d455fc47c323175e400a0e602006f1c28f2ca047a7baa68f49b3b4f182"
    },
    {
      "name": "Ethernet",
      "version": "1.0.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "http://www.arduino.cc/en/Reference/Ethernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Ethernet-1.0.3.zip",
      "archiveFileName": "Ethernet-1.0.3.zip",
      "size": 47581,
      "checksum": "SHA-256:489aba3baec3449608895f8e681e649003d295c80d17ecb5c8596dec2ae74df7"
    },
    {
      "name": "Ethernet",
      "version": "1.0.4",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "http://www.arduino.cc/en/Reference/Ethernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Ethernet-1.0.4.zip",
      "archiveFileName": "Ethernet-1.0.4.zip",
      "size": 47632,
      "checksum": "SHA-256:2538081280132e886d3c784bc84b68bc439016728c7f093f5b0952c0d31bd927"
    },
    {
      "name": "Ethernet",
      "version": "1.0.5",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "http://www.arduino.cc/en/Reference/Ethernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Ethernet-1.0.5.zip",
      "archiveFileName": "Ethernet-1.0.5.zip",
      "size": 47780,
      "checksum": "SHA-256:0384fdc401689d6c0662c2a0bf13c9c2d6ee64b850eefb326c3ee517c7dabb03"
    },
    {
      "name": "Ethernet",
      "version": "1.1.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "http://www.arduino.cc/en/Reference/Ethernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Ethernet-1.1.0.zip",
      "archiveFileName": "Ethernet-1.1.0.zip",
      "size": 48058,
      "checksum": "SHA-256:409a3cf9fbf3e633f56a6a654ba5d12147103ec439de2bca46efecf0f3f15f0b"
    },
    {
      "name": "Ethernet",
      "version": "1.1.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "http://www.arduino.cc/en/Reference/Ethernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Ethernet-1.1.1.zip",
      "archiveFileName": "Ethernet-1.1.1.zip",
      "size": 48092,
      "checksum": "SHA-256:788bbf9d87fe38fd5dfd7aa27bd1091a5e1d43e728b688bdb74f2261bad02236"
    },
    {
      "name": "Firmata",
      "version": "2.3.6",
      "author": "Firmata Developers",
      "maintainer": "Firmata Developers \u003cfirmata-devel@lists.sourceforge.net\u003e",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "http://firmata.org",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Firmata-2.3.6.zip",
      "archiveFileName": "Firmata-2.3.6.zip",
      "size": 56660,
      "checksum": "SHA-256:c6b707600155f335bd1d97e34b7bb8375890c3093f71f1a35db8db1827cfbed2"
    },
    {
      "name": "Firmata",
      "version": "2.3.7",
      "author": "Firmata Developers",
      "maintainer": "Firmata Developers \u003cfirmata-devel@lists.sourceforge.net\u003e",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "http://firmata.org",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Firmata-2.3.7.zip",
      "archiveFileName": "Firmata-2.3.7.zip",
      "size": 56686,
      "checksum": "SHA-256:2ee016f6064c03489d92b2c4226424dd108f3990a4951873309cd93bca9f1ef4"
    },
    {
      "name": "Firmata",
      "version": "2.3.8",
      "author": "Firmata Developers",
      "maintainer": "Firmata Developers \u003cfirmata-devel@lists.sourceforge.net\u003e",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "http://firmata.org",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Firmata-2.3.8.zip",
      "archiveFileName": "Firmata-2.3.8.zip",
      "size": 56688,
      "checksum": "SHA-256:6e500de3ca52e0e92bbb6bd570dcee457f769734e31aa988faea98608ed8f04b"
    },
    {
      "name": "Firmata",
      "version": "2.5.0",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/arduino",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "https://github.com/firmata/arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/firmata/Firmata-2.5.0.zip",
      "archiveFileName": "Firmata-2.5.0.zip",
      "size": 142832,
      "checksum": "SHA-256:9022cbca5ea999458bc19fb19edd047cb1c77105f3b5775c8a26774882c07609"
    },
    {
      "name": "Firmata",
      "version": "2.5.1",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/arduino",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "https://github.com/firmata/arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/firmata/Firmata-2.5.1.zip",
      "archiveFileName": "Firmata-2.5.1.zip",
      "size": 144402,
      "checksum": "SHA-256:c2245e411789b17a52b8b96c806b4d1779a7c5a6fc343eaf08dea8e1e18f5d14"
    },
    {
      "name": "Firmata",
      "version": "2.5.2",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/arduino",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "https://github.com/firmata/arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/firmata/Firmata-2.5.2.zip",
      "archiveFileName": "Firmata-2.5.2.zip",
      "size": 174152,
      "checksum": "SHA-256:bee3e965bcbb7286a8097f42b1de19a357106c8bd90e4942ed4bdbb6350f140b"
    },
    {
      "name": "Firmata",
      "version": "2.4.2",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/arduino",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "https://github.com/firmata/arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/firmata/Firmata-2.4.2.zip",
      "archiveFileName": "Firmata-2.4.2.zip",
      "size": 70579,
      "checksum": "SHA-256:29407a8a0f59e3e6da16e437d7b0521c842784b5b21642723d4062b56648e1a7"
    },
    {
      "name": "Firmata",
      "version": "2.4.0",
      "author": "Firmata Developers",
      "maintainer": "Firmata Developers \u003cfirmata-devel@lists.sourceforge.net\u003e",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "http://firmata.org",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/firmata/Firmata-2.4.0.zip",
      "archiveFileName": "Firmata-2.4.0.zip",
      "size": 69427,
      "checksum": "SHA-256:78d6342d60c73a03bea46ebebca18d1dd29d266a4b0038a407841c4b9e7bb022"
    },
    {
      "name": "Firmata",
      "version": "2.4.1",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/arduino",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "https://github.com/firmata/arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/firmata/Firmata-2.4.1.zip",
      "archiveFileName": "Firmata-2.4.1.zip",
      "size": 70527,
      "checksum": "SHA-256:4ea66f073a731bdea2154220ad803a077ba2310a902af12f6f6490edd50a6ab9"
    },
    {
      "name": "Firmata",
      "version": "2.4.3",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/arduino",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "https://github.com/firmata/arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/firmata/Firmata-2.4.3.zip",
      "archiveFileName": "Firmata-2.4.3.zip",
      "size": 81806,
      "checksum": "SHA-256:2b18a74874e6d91b0eae51aad77e6eed848351ca23d29c5db999af48121e8b13"
    },
    {
      "name": "Firmata",
      "version": "2.4.4",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/arduino",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "https://github.com/firmata/arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/firmata/Firmata-2.4.4.zip",
      "archiveFileName": "Firmata-2.4.4.zip",
      "size": 98950,
      "checksum": "SHA-256:11cf2fe9d34e65f4005981e7a533de28165fe9fee2c54f5c7e9f83abf048295f"
    },
    {
      "name": "GSM",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables GSM/GRPS network connection using the Arduino GSM Shield. For all Arduino boards BUT Arduino DUE.",
      "paragraph": "Use this library to make/receive voice calls, to send and receive SMS with the Quectel M10 GSM module.\u003c/br\u003eThis library also allows you to connect to internet through the GPRS networks. You can either use web Clients and Servers.\u003c/br\u003e",
      "website": "http://arduino.cc/en/Reference/GSM",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/GSM-1.0.0.zip",
      "archiveFileName": "GSM-1.0.0.zip",
      "size": 127061,
      "checksum": "SHA-256:48df1eae79083e82bbf696ddeaa4abc2bd91edb0e3dfbad63e80df767436f937"
    },
    {
      "name": "GSM",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables GSM/GRPS network connection using the Arduino GSM Shield. For all Arduino boards BUT Arduino DUE.",
      "paragraph": "Use this library to make/receive voice calls, to send and receive SMS with the Quectel M10 GSM module.\u003c/br\u003eThis library also allows you to connect to internet through the GPRS networks. You can either use web Clients and Servers.\u003c/br\u003e",
      "website": "http://arduino.cc/en/Reference/GSM",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/GSM-1.0.1.zip",
      "archiveFileName": "GSM-1.0.1.zip",
      "size": 127060,
      "checksum": "SHA-256:cffc5701e582fb005d36e516c508cae8638de5db7998534a42408b528c6ca7da"
    },
    {
      "name": "GSM",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables GSM/GRPS network connection using the Arduino GSM Shield. For all Arduino boards BUT Arduino DUE.",
      "paragraph": "Use this library to make/receive voice calls, to send and receive SMS with the Quectel M10 GSM module.\u003c/br\u003eThis library also allows you to connect to internet through the GPRS networks. You can either use web Clients and Servers.\u003c/br\u003e",
      "website": "http://arduino.cc/en/Reference/GSM",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/GSM-1.0.2.zip",
      "archiveFileName": "GSM-1.0.2.zip",
      "size": 146472,
      "checksum": "SHA-256:4614d0562cf4112e6190beb65d71d0ea60688acdce5e342aacce60c87877a7e0"
    },
    {
      "name": "GSM",
      "version": "1.0.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables GSM/GRPS network connection using the Arduino GSM Shield. For all Arduino boards BUT Arduino DUE.",
      "paragraph": "Use this library to make/receive voice calls, to send and receive SMS with the Quectel M10 GSM module.\u003c/br\u003eThis library also allows you to connect to internet through the GPRS networks. You can either use web Clients and Servers.\u003c/br\u003e",
      "website": "http://arduino.cc/en/Reference/GSM",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/GSM-1.0.3.zip",
      "archiveFileName": "GSM-1.0.3.zip",
      "size": 146513,
      "checksum": "SHA-256:8f833c6e1b11941eb6627dccb251cc9038dbd6338d1344d8f85cb7a146902179"
    },
    {
      "name": "GSM",
      "version": "1.0.4",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables GSM/GRPS network connection using the Arduino GSM Shield. For all Arduino boards BUT Arduino DUE.",
      "paragraph": "Use this library to make/receive voice calls, to send and receive SMS with the Quectel M10 GSM module.\u003c/br\u003eThis library also allows you to connect to internet through the GPRS networks. You can either use web Clients and Servers.\u003c/br\u003e",
      "website": "http://www.arduino.cc/en/Reference/GSM",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/GSM-1.0.4.zip",
      "archiveFileName": "GSM-1.0.4.zip",
      "size": 146555,
      "checksum": "SHA-256:b36c8676e3cb47c16b2719fb16c40c6ecf3304cdbf3314670cc3ac630cfb6663"
    },
    {
      "name": "GSM",
      "version": "1.0.5",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables GSM/GRPS network connection using the Arduino GSM Shield. For all Arduino boards BUT Arduino DUE.",
      "paragraph": "Use this library to make/receive voice calls, to send and receive SMS with the Quectel M10 GSM module.\u003c/br\u003eThis library also allows you to connect to internet through the GPRS networks. You can either use web Clients and Servers.\u003c/br\u003e",
      "website": "http://www.arduino.cc/en/Reference/GSM",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/GSM-1.0.5.zip",
      "archiveFileName": "GSM-1.0.5.zip",
      "size": 146465,
      "checksum": "SHA-256:920343d1b89352bdaf5ba32b7eac95cdcefb07ba3fe55d9cd72bc1060db290e6"
    },
    {
      "name": "LiquidCrystal",
      "version": "1.0.0",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows communication with alphanumerical liquid crystal displays (LCDs). For all Arduino boards.",
      "paragraph": "This library allows an Arduino board to control LiquidCrystal displays (LCDs) based on the Hitachi HD44780 (or a compatible) chipset, which is found on most text-based LCDs. The library works with in either 4 or 8 bit mode (i.e. using 4 or 8 data lines in addition to the rs, enable, and, optionally, the rw control lines).",
      "website": "http://arduino.cc/en/Reference/LiquidCrystal",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/LiquidCrystal-1.0.0.zip",
      "archiveFileName": "LiquidCrystal-1.0.0.zip",
      "size": 15956,
      "checksum": "SHA-256:360cbcd7ff4de1decfe3011cf2754e78f7a7ae2517d848dcb5889b6e28bebc3a"
    },
    {
      "name": "LiquidCrystal",
      "version": "1.0.1",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows communication with alphanumerical liquid crystal displays (LCDs). For all Arduino boards.",
      "paragraph": "This library allows an Arduino board to control LiquidCrystal displays (LCDs) based on the Hitachi HD44780 (or a compatible) chipset, which is found on most text-based LCDs. The library works with in either 4 or 8 bit mode (i.e. using 4 or 8 data lines in addition to the rs, enable, and, optionally, the rw control lines).",
      "website": "http://arduino.cc/en/Reference/LiquidCrystal",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/LiquidCrystal-1.0.1.zip",
      "archiveFileName": "LiquidCrystal-1.0.1.zip",
      "size": 15952,
      "checksum": "SHA-256:28ce130c27b5034b233a5b8d9abef290384bb90e4d71234dd789745622cdfb42"
    },
    {
      "name": "LiquidCrystal",
      "version": "1.0.2",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows communication with alphanumerical liquid crystal displays (LCDs). For all Arduino boards.",
      "paragraph": "This library allows an Arduino board to control LiquidCrystal displays (LCDs) based on the Hitachi HD44780 (or a compatible) chipset, which is found on most text-based LCDs. The library works with in either 4 or 8 bit mode (i.e. using 4 or 8 data lines in addition to the rs, enable, and, optionally, the rw control lines).",
      "website": "http://www.arduino.cc/en/Reference/LiquidCrystal",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/LiquidCrystal-1.0.2.zip",
      "archiveFileName": "LiquidCrystal-1.0.2.zip",
      "size": 16030,
      "checksum": "SHA-256:0f020527e02f2976ab728ded6f99ec05d7cdabb8fcc568d5eae4b63bc75cd7de"
    },
    {
      "name": "LiquidCrystal",
      "version": "1.0.3",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows communication with alphanumerical liquid crystal displays (LCDs). For all Arduino boards.",
      "paragraph": "This library allows an Arduino board to control LiquidCrystal displays (LCDs) based on the Hitachi HD44780 (or a compatible) chipset, which is found on most text-based LCDs. The library works with in either 4 or 8 bit mode (i.e. using 4 or 8 data lines in addition to the rs, enable, and, optionally, the rw control lines).",
      "website": "http://www.arduino.cc/en/Reference/LiquidCrystal",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/LiquidCrystal-1.0.3.zip",
      "archiveFileName": "LiquidCrystal-1.0.3.zip",
      "size": 16022,
      "checksum": "SHA-256:5ee29f0eb379d7bbfd0fff8e8be266b2ab7723fc604f0d961c21bf490d18a349"
    },
    {
      "name": "LiquidCrystal",
      "version": "1.0.4",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows communication with alphanumerical liquid crystal displays (LCDs). For all Arduino boards.",
      "paragraph": "This library allows an Arduino board to control LiquidCrystal displays (LCDs) based on the Hitachi HD44780 (or a compatible) chipset, which is found on most text-based LCDs. The library works with in either 4 or 8 bit mode (i.e. using 4 or 8 data lines in addition to the rs, enable, and, optionally, the rw control lines).",
      "website": "http://www.arduino.cc/en/Reference/LiquidCrystal",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/LiquidCrystal-1.0.4.zip",
      "archiveFileName": "LiquidCrystal-1.0.4.zip",
      "size": 16056,
      "checksum": "SHA-256:9695a3c11500040dc56787e8dd2c0b1115d1dba4dd805f330e1f511e9e2022bd"
    },
    {
      "name": "Robot Control",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables easy access to the controls of the Arduino Robot Control board. For Arduino Robot only.",
      "paragraph": "The Arduino robot is made by two independent boards. The Control Board is the top board of the Arduino Robot, with this library you can easily write sketches to control the robot.",
      "website": "http://arduino.cc/en/Reference/RobotLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Robot_Control-1.0.0.zip",
      "archiveFileName": "Robot_Control-1.0.0.zip",
      "size": 108192,
      "checksum": "SHA-256:5a65b72deead69887e69900849f512a555ded1d8ab46d81255e27f435222a950"
    },
    {
      "name": "Robot Control",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables easy access to the controls of the Arduino Robot Control board. For Arduino Robot only.",
      "paragraph": "The Arduino robot is made by two independent boards. The Control Board is the top board of the Arduino Robot, with this library you can easily write sketches to control the robot.",
      "website": "http://arduino.cc/en/Reference/RobotLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Robot_Control-1.0.1.zip",
      "archiveFileName": "Robot_Control-1.0.1.zip",
      "size": 108247,
      "checksum": "SHA-256:af54f6e30ef3da6390062c2b69bb0892988d619f23a5bd6bb14161cdcecfb41f"
    },
    {
      "name": "Robot Control",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables easy access to the controls of the Arduino Robot Control board. For Arduino Robot only.",
      "paragraph": "The Arduino robot is made by two independent boards. The Control Board is the top board of the Arduino Robot, with this library you can easily write sketches to control the robot.",
      "website": "http://www.arduino.cc/en/Reference/RobotLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Robot_Control-1.0.2.zip",
      "archiveFileName": "Robot_Control-1.0.2.zip",
      "size": 108252,
      "checksum": "SHA-256:b2cdc7ed13dbf86e1060a6e69534aa71a9196ce52ff274ec79dbd2cfeac1abe7"
    },
    {
      "name": "Robot IR Remote",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows controlling the Arduino Robot via an IR remote control. For Arduino Robot only.",
      "website": "https://github.com/shirriff/Arduino-IRremote",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Robot_IR_Remote-1.0.0.zip",
      "archiveFileName": "Robot_IR_Remote-1.0.0.zip",
      "size": 22185,
      "checksum": "SHA-256:8468f36618dd75dccf2dedb8cdb4683356ca479e5dc39db7f3405b9d3838139e"
    },
    {
      "name": "Robot IR Remote",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows controlling the Arduino Robot via an IR remote control. For Arduino Robot only.",
      "website": "https://github.com/shirriff/Arduino-IRremote",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Robot_IR_Remote-1.0.1.zip",
      "archiveFileName": "Robot_IR_Remote-1.0.1.zip",
      "size": 22264,
      "checksum": "SHA-256:6240a8a9ab44cc0754e9f4e5635e0588d8582e779d02d6f2401ce03f863157ab"
    },
    {
      "name": "Robot IR Remote",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows controlling the Arduino Robot via an IR remote control. For Arduino Robot only.",
      "website": "https://github.com/shirriff/Arduino-IRremote",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Robot_IR_Remote-1.0.2.zip",
      "archiveFileName": "Robot_IR_Remote-1.0.2.zip",
      "size": 22266,
      "checksum": "SHA-256:1ec0f91357201b1d9788d8298bb73488d7f5a10763c60a689f709c68d10712bf"
    },
    {
      "name": "Robot Motor",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables easy access to the motors of the Arduino Robot Motor board. For Arduino Robot only.",
      "website": "http://arduino.cc/en/Reference/RobotLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Robot_Motor-1.0.0.zip",
      "archiveFileName": "Robot_Motor-1.0.0.zip",
      "size": 11216,
      "checksum": "SHA-256:5a7f7621dd7646629aa61209376e33d1c453d01e595d5839061b40c298bbd15f"
    },
    {
      "name": "Robot Motor",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables easy access to the motors of the Arduino Robot Motor board. For Arduino Robot only.",
      "website": "http://arduino.cc/en/Reference/RobotLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Robot_Motor-1.0.1.zip",
      "archiveFileName": "Robot_Motor-1.0.1.zip",
      "size": 11805,
      "checksum": "SHA-256:042e0c8d07ec7512766776f902974082e2a12afc470213e0555cbdb1308e4e58"
    },
    {
      "name": "Robot Motor",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables easy access to the motors of the Arduino Robot Motor board. For Arduino Robot only.",
      "website": "http://www.arduino.cc/en/Reference/RobotLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Robot_Motor-1.0.2.zip",
      "archiveFileName": "Robot_Motor-1.0.2.zip",
      "size": 11812,
      "checksum": "SHA-256:2bb48bb0fc6b0081e3622f78c1cf59f20ba86f76aa444c1984b24d6120d7b252"
    },
    {
      "name": "RTCZero",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/RTCZero-1.0.0.zip",
      "archiveFileName": "RTCZero-1.0.0.zip",
      "size": 4840,
      "checksum": "SHA-256:093cce20e38239405b7b65aa6b7f769ce5a66f935bf8be0911eea76c077254bd"
    },
    {
      "name": "RTCZero",
      "version": "1.1.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/RTCZero-1.1.0.zip",
      "archiveFileName": "RTCZero-1.1.0.zip",
      "size": 5625,
      "checksum": "SHA-256:076e124c40ee3dc796aa3bee2244fca2f738388d785470198fc502f9e89af69d"
    },
    {
      "name": "RTCZero",
      "version": "1.1.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/RTCZero-1.1.1.zip",
      "archiveFileName": "RTCZero-1.1.1.zip",
      "size": 6461,
      "checksum": "SHA-256:941a9e9441c7d4fc9c0c8f58c254e5c158faaba4c52c15e19a253e90f22f7d59"
    },
    {
      "name": "RTCZero",
      "version": "1.2.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/RTCZero-1.2.0.zip",
      "archiveFileName": "RTCZero-1.2.0.zip",
      "size": 6318,
      "checksum": "SHA-256:0e90c619036b8a21676ab37866f759fef35110023780eb81a006ab6fd78daf3c"
    },
    {
      "name": "RTCZero",
      "version": "1.3.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/RTCZero-1.3.0.zip",
      "archiveFileName": "RTCZero-1.3.0.zip",
      "size": 7130,
      "checksum": "SHA-256:768139f911838467049b71e50ead9bccce473519f91d91151478496af78959ad"
    },
    {
      "name": "RTCZero",
      "version": "1.3.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/RTCZero-1.3.1.zip",
      "archiveFileName": "RTCZero-1.3.1.zip",
      "size": 7118,
      "checksum": "SHA-256:8417d91b0ed37201aad84f28d923f8768055f744ce73c85ed3316fe8deb09e4e"
    },
    {
      "name": "RTCZero",
      "version": "1.4.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/RTCZero-1.4.0.zip",
      "archiveFileName": "RTCZero-1.4.0.zip",
      "size": 7850,
      "checksum": "SHA-256:c71b09c2ecc27737c05ff713db6d15a8a80089859b3ede885c5238b0a616bac8"
    },
    {
      "name": "RTCZero",
      "version": "1.4.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/RTCZero-1.4.1.zip",
      "archiveFileName": "RTCZero-1.4.1.zip",
      "size": 8301,
      "checksum": "SHA-256:3a424bbc8f1fea5b0ae5653acef9b3126cfcb120f84f78a84680894d94f81668"
    },
    {
      "name": "RTCZero",
      "version": "1.4.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero and MKR1000 only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero or MKR1000 in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/RTCZero-1.4.2.zip",
      "archiveFileName": "RTCZero-1.4.2.zip",
      "size": 8324,
      "checksum": "SHA-256:57620f9da8f2edd066e541b182b354dc62fc6010a96aaf634a8fe7c914c8bc25"
    },
    {
      "name": "RTCZero",
      "version": "1.4.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero and MKR1000 only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero or MKR1000 in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTCZero",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/RTCZero-1.4.3.zip",
      "archiveFileName": "RTCZero-1.4.3.zip",
      "size": 8518,
      "checksum": "SHA-256:c2b36c9745aa1237dd34125a799c59cf21b39b7ef8bce29182452c4ff305b1ba"
    },
    {
      "name": "Scheduler",
      "version": "0.4.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows multiple tasks to run at the same time, without interrupting each other. For Arduino DUE only.",
      "paragraph": "The Scheduler library enables the Arduino Due to run multiple functions at the same time. This allows tasks to happen without interrupting each other.\u003c/br\u003eThis is a cooperative scheduler in that the CPU switches from one task to another. The library includes methods for passing control between tasks.",
      "website": "http://arduino.cc/en/Reference/Scheduler",
      "category": "Other",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Scheduler-0.4.0.zip",
      "archiveFileName": "Scheduler-0.4.0.zip",
      "size": 4753,
      "checksum": "SHA-256:0be2a7b0b84982be4179f2815e3e43f3706ff1f636a00720411e83729c21a5bf"
    },
    {
      "name": "Scheduler",
      "version": "0.4.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows multiple tasks to run at the same time, without interrupting each other. For Arduino DUE only.",
      "paragraph": "The Scheduler library enables the Arduino Due to run multiple functions at the same time. This allows tasks to happen without interrupting each other.\u003c/br\u003eThis is a cooperative scheduler in that the CPU switches from one task to another. The library includes methods for passing control between tasks.",
      "website": "http://arduino.cc/en/Reference/Scheduler",
      "category": "Other",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Scheduler-0.4.1.zip",
      "archiveFileName": "Scheduler-0.4.1.zip",
      "size": 4692,
      "checksum": "SHA-256:fbdbbb84cac1186c51154a32454b1f139fe6c5a6af7990f936a508bc955def66"
    },
    {
      "name": "Scheduler",
      "version": "0.4.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows multiple tasks to run at the same time, without interrupting each other. For Arduino DUE only.",
      "paragraph": "The Scheduler library enables the Arduino Due to run multiple functions at the same time. This allows tasks to happen without interrupting each other.\u003c/br\u003eThis is a cooperative scheduler in that the CPU switches from one task to another. The library includes methods for passing control between tasks.",
      "website": "http://www.arduino.cc/en/Reference/Scheduler",
      "category": "Other",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Scheduler-0.4.3.zip",
      "archiveFileName": "Scheduler-0.4.3.zip",
      "size": 4701,
      "checksum": "SHA-256:ed199a275f0b4fcddac1362dc90a408c31a452dbabcc8bcd662064420f018846"
    },
    {
      "name": "Scheduler",
      "version": "0.4.4",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows multiple tasks to run at the same time, without interrupting each other. For Arduino sam and samd architectures only (Due, Zero...).",
      "paragraph": "The Scheduler library enables the Arduino to run multiple functions at the same time. This allows tasks to happen without interrupting each other.\u003c/br\u003eThis is a cooperative scheduler in that the CPU switches from one task to another. The library includes methods for passing control between tasks.",
      "website": "http://www.arduino.cc/en/Reference/Scheduler",
      "category": "Other",
      "architectures": [
        "sam",
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Scheduler-0.4.4.zip",
      "archiveFileName": "Scheduler-0.4.4.zip",
      "size": 5109,
      "checksum": "SHA-256:5b686afc080eb036ad52c0a85022842fbeffcfe6505113a8f625d7f204598b9f"
    },
    {
      "name": "SD",
      "version": "1.0.0",
      "author": "Arduino, SparkFun",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables reading and writing on SD cards. For all Arduino boards.",
      "paragraph": "Once an SD memory card is connected to the SPI interfare of the Arduino board you are enabled to create files and read/write on them. You can also move through directories on the SD card.",
      "website": "http://arduino.cc/en/Reference/SD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/SD-1.0.0.zip",
      "archiveFileName": "SD-1.0.0.zip",
      "size": 59623,
      "checksum": "SHA-256:99e4741a5d04bf61f547f4a98cc65f7f196ee2b824b9fe57689c135741015eeb"
    },
    {
      "name": "SD",
      "version": "1.0.1",
      "author": "Arduino, SparkFun",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables reading and writing on SD cards. For all Arduino boards.",
      "paragraph": "Once an SD memory card is connected to the SPI interfare of the Arduino board you are enabled to create files and read/write on them. You can also move through directories on the SD card.",
      "website": "http://arduino.cc/en/Reference/SD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/SD-1.0.1.zip",
      "archiveFileName": "SD-1.0.1.zip",
      "size": 59622,
      "checksum": "SHA-256:39fdddba93cddec4882d36e6b574d7edfce1a47757921c388713e8776bba36e2"
    },
    {
      "name": "SD",
      "version": "1.0.3",
      "author": "Arduino, SparkFun",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables reading and writing on SD cards. For all Arduino boards.",
      "paragraph": "Once an SD memory card is connected to the SPI interfare of the Arduino board you are enabled to create files and read/write on them. You can also move through directories on the SD card.",
      "website": "http://arduino.cc/en/Reference/SD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/SD-1.0.3.zip",
      "archiveFileName": "SD-1.0.3.zip",
      "size": 58584,
      "checksum": "SHA-256:4e6f4335b5336cfaa34ae9bdbc9cde8cc9ba68df1c5d234e2773c4e055dde252"
    },
    {
      "name": "SD",
      "version": "1.0.4",
      "author": "Arduino, SparkFun",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables reading and writing on SD cards. For all Arduino boards.",
      "paragraph": "Once an SD memory card is connected to the SPI interfare of the Arduino board you are enabled to create files and read/write on them. You can also move through directories on the SD card.",
      "website": "http://arduino.cc/en/Reference/SD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/SD-1.0.4.zip",
      "archiveFileName": "SD-1.0.4.zip",
      "size": 58587,
      "checksum": "SHA-256:10e5cacff47c6433ff1e68046ff0ad378708311f25ae30b6db9a442ffcd66cf4"
    },
    {
      "name": "SD",
      "version": "1.0.5",
      "author": "Arduino, SparkFun",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables reading and writing on SD cards. For all Arduino boards.",
      "paragraph": "Once an SD memory card is connected to the SPI interfare of the Arduino board you are enabled to create files and read/write on them. You can also move through directories on the SD card.",
      "website": "http://www.arduino.cc/en/Reference/SD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/SD-1.0.5.zip",
      "archiveFileName": "SD-1.0.5.zip",
      "size": 58665,
      "checksum": "SHA-256:c1afad5c6da3b5eb79cd5d282e75149e18e443a2e1bd46979f84044a2b46e8cc"
    },
    {
      "name": "SD",
      "version": "1.0.6",
      "author": "Arduino, SparkFun",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables reading and writing on SD cards. For all Arduino boards.",
      "paragraph": "Once an SD memory card is connected to the SPI interfare of the Arduino board you are enabled to create files and read/write on them. You can also move through directories on the SD card.",
      "website": "http://www.arduino.cc/en/Reference/SD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/SD-1.0.6.zip",
      "archiveFileName": "SD-1.0.6.zip",
      "size": 58901,
      "checksum": "SHA-256:dcf28cfb88dd348a891d74a3f8e85ba674dc7c7934aded8c4ba901c99825bbe5"
    },
    {
      "name": "Servo",
      "version": "1.0.0",
      "author": "Michael Margolis, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of servo motors. For all Arduino boards.",
      "paragraph": "This library can control a great number of servos.\u003cbr /\u003eIt makes careful use of timers: the library can control 12 servos using only 1 timer.\u003cbr /\u003eOn the Arduino Due you can control up to 60 servos.\u003cbr /\u003e",
      "website": "http://arduino.cc/en/Reference/Servo",
      "category": "Device Control",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Servo-1.0.0.zip",
      "archiveFileName": "Servo-1.0.0.zip",
      "size": 13910,
      "checksum": "SHA-256:c641df78b7b25c4aff3efa10fa92312deb08e65678b01a1c29145dc4297fdd3a"
    },
    {
      "name": "Servo",
      "version": "1.0.1",
      "author": "Michael Margolis, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of servo motors. For all Arduino boards.",
      "paragraph": "This library can control a great number of servos.\u003cbr /\u003eIt makes careful use of timers: the library can control 12 servos using only 1 timer.\u003cbr /\u003eOn the Arduino Due you can control up to 60 servos.\u003cbr /\u003e",
      "website": "http://arduino.cc/en/Reference/Servo",
      "category": "Device Control",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Servo-1.0.1.zip",
      "archiveFileName": "Servo-1.0.1.zip",
      "size": 13937,
      "checksum": "SHA-256:28c67fcd98a41ad25ca3eb02bf5531dc7754e85d56d97fb65452eb98dd97d853"
    },
    {
      "name": "Servo",
      "version": "1.0.2",
      "author": "Michael Margolis, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of servo motors. For all Arduino boards.",
      "paragraph": "This library can control a great number of servos.\u003cbr /\u003eIt makes careful use of timers: the library can control 12 servos using only 1 timer.\u003cbr /\u003eOn the Arduino Due you can control up to 60 servos.\u003cbr /\u003e",
      "website": "http://arduino.cc/en/Reference/Servo",
      "category": "Device Control",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Servo-1.0.2.zip",
      "archiveFileName": "Servo-1.0.2.zip",
      "size": 13939,
      "checksum": "SHA-256:4f1fe3977c3abb4d8903322d2c1b0b5f3ca9a0208d51d3a06af5f7736d1b8a1b"
    },
    {
      "name": "Servo",
      "version": "1.0.3",
      "author": "Michael Margolis, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of servo motors. For all Arduino boards.",
      "paragraph": "This library can control a great number of servos.\u003cbr /\u003eIt makes careful use of timers: the library can control 12 servos using only 1 timer.\u003cbr /\u003eOn the Arduino Due you can control up to 60 servos.\u003cbr /\u003e",
      "website": "http://www.arduino.cc/en/Reference/Servo",
      "category": "Device Control",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Servo-1.0.3.zip",
      "archiveFileName": "Servo-1.0.3.zip",
      "size": 13952,
      "checksum": "SHA-256:4c74db85961f26f14834b2014e95444ec0c8c85c3b812640db0dc65881234b82"
    },
    {
      "name": "Servo",
      "version": "1.1.0",
      "author": "Michael Margolis, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of servo motors. For all Arduino boards.",
      "paragraph": "This library can control a great number of servos.\u003cbr /\u003eIt makes careful use of timers: the library can control 12 servos using only 1 timer.\u003cbr /\u003eOn the Arduino Due you can control up to 60 servos.\u003cbr /\u003e",
      "website": "http://www.arduino.cc/en/Reference/Servo",
      "category": "Device Control",
      "architectures": [
        "avr",
        "sam",
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Servo-1.1.0.zip",
      "archiveFileName": "Servo-1.1.0.zip",
      "size": 18665,
      "checksum": "SHA-256:7f1d0324a106e7120d1ffaa0f264e7ed6a312f6bc33610139a8bc305485d62d5"
    },
    {
      "name": "Servo",
      "version": "1.1.1",
      "author": "Michael Margolis, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of servo motors. For all Arduino boards.",
      "paragraph": "This library can control a great number of servos.\u003cbr /\u003eIt makes careful use of timers: the library can control 12 servos using only 1 timer.\u003cbr /\u003eOn the Arduino Due you can control up to 60 servos.\u003cbr /\u003e",
      "website": "http://www.arduino.cc/en/Reference/Servo",
      "category": "Device Control",
      "architectures": [
        "avr",
        "sam",
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Servo-1.1.1.zip",
      "archiveFileName": "Servo-1.1.1.zip",
      "size": 18640,
      "checksum": "SHA-256:2c58c050fa363fa529eda5bc0549fc230da94ec6f8ae6a919801e5af92d018f6"
    },
    {
      "name": "SpacebrewYun",
      "version": "1.0.0",
      "author": "Julio Terra",
      "maintainer": "Julio Terra \u003cjulioterra@gmail.com\u003e",
      "sentence": "Enables the communication between interactive objects using WebSockets. For Arduino Yún only.",
      "paragraph": "This library was developed to enable you to easily connect the Arduino Yún to Spacebrew. To learn more about Spacebrew visit Spacebrew.cc",
      "website": "https://github.com/julioterra/yunSpacebrew",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/SpacebrewYun-1.0.0.zip",
      "archiveFileName": "SpacebrewYun-1.0.0.zip",
      "size": 5772,
      "checksum": "SHA-256:4989dcf1a2843e7be43822f25ce9494060324b6bf75054463daf92bf572f9aa3"
    },
    {
      "name": "Stepper",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of stepper motors. For all Arduino boards.",
      "paragraph": "This library allows you to control unipolar or bipolar stepper motors. To use it you will need a stepper motor, and the appropriate hardware to control it.",
      "website": "http://arduino.cc/en/Reference/Stepper",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Stepper-1.0.0.zip",
      "archiveFileName": "Stepper-1.0.0.zip",
      "size": 7715,
      "checksum": "SHA-256:cdadcb0cca284d2cc29d9ca29ca6070d61fd42f05b548722c2e6e512c17de10c"
    },
    {
      "name": "Stepper",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of stepper motors. For all Arduino boards.",
      "paragraph": "This library allows you to control unipolar or bipolar stepper motors. To use it you will need a stepper motor, and the appropriate hardware to control it.",
      "website": "http://arduino.cc/en/Reference/Stepper",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Stepper-1.0.1.zip",
      "archiveFileName": "Stepper-1.0.1.zip",
      "size": 8463,
      "checksum": "SHA-256:3ccb653274a0482f21eae53c63332e5b6601f62bc97035904e998197fb2a2e73"
    },
    {
      "name": "Stepper",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of stepper motors. For all Arduino boards.",
      "paragraph": "This library allows you to control unipolar or bipolar stepper motors. To use it you will need a stepper motor, and the appropriate hardware to control it.",
      "website": "http://arduino.cc/en/Reference/Stepper",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Stepper-1.0.2.zip",
      "archiveFileName": "Stepper-1.0.2.zip",
      "size": 8467,
      "checksum": "SHA-256:5c68edf26ef138e01d3813b66f5ef8233f115f13605e64c0076bb1c1147c505a"
    },
    {
      "name": "Stepper",
      "version": "1.1.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of stepper motors. For all Arduino boards.",
      "paragraph": "This library allows you to control unipolar or bipolar stepper motors. To use it you will need a stepper motor, and the appropriate hardware to control it.",
      "website": "http://www.arduino.cc/en/Reference/Stepper",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Stepper-1.1.1.zip",
      "archiveFileName": "Stepper-1.1.1.zip",
      "size": 9064,
      "checksum": "SHA-256:ec4c47fc61f34836115f8ef53ab74739f60fd6270ea05567aa2fc6b37e8f9879"
    },
    {
      "name": "Stepper",
      "version": "1.1.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of stepper motors. For all Arduino boards.",
      "paragraph": "This library allows you to control unipolar or bipolar stepper motors. To use it you will need a stepper motor, and the appropriate hardware to control it.",
      "website": "http://www.arduino.cc/en/Reference/Stepper",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Stepper-1.1.2.zip",
      "archiveFileName": "Stepper-1.1.2.zip",
      "size": 9033,
      "checksum": "SHA-256:7e5c608c467f933d85ba6447fdf76802e46aa6c251b5d20833590f77bb05b2b1"
    },
    {
      "name": "TFT",
      "version": "1.0.0",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows drawing text, images, and shapes on the Arduino TFT graphical display. For all Arduino boards.",
      "paragraph": "This library is compatible with most of the TFT display based on the ST7735 chipset",
      "website": "http://arduino.cc/en/Reference/TFTLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/TFT-1.0.0.zip",
      "archiveFileName": "TFT-1.0.0.zip",
      "size": 43633,
      "checksum": "SHA-256:1579257fdcdd4cf104585785794a135ffba4f785e3e7b4c7f6a75357746016a6"
    },
    {
      "name": "TFT",
      "version": "1.0.1",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows drawing text, images, and shapes on the Arduino TFT graphical display. For all Arduino boards.",
      "paragraph": "This library is compatible with most of the TFT display based on the ST7735 chipset",
      "website": "http://arduino.cc/en/Reference/TFTLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/TFT-1.0.1.zip",
      "archiveFileName": "TFT-1.0.1.zip",
      "size": 45175,
      "checksum": "SHA-256:027142d2a448f2eb11ec8ef7e470dd910a3483fc6a4572c2591459ce19c2d309"
    },
    {
      "name": "TFT",
      "version": "1.0.2",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows drawing text, images, and shapes on the Arduino TFT graphical display. For all Arduino boards.",
      "paragraph": "This library is compatible with most of the TFT display based on the ST7735 chipset",
      "website": "http://arduino.cc/en/Reference/TFTLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/TFT-1.0.2.zip",
      "archiveFileName": "TFT-1.0.2.zip",
      "size": 45183,
      "checksum": "SHA-256:172a143bce664d10fa6b9eeb1ce284e7278126d96e5d4badb86e4a66040b6204"
    },
    {
      "name": "TFT",
      "version": "1.0.3",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows drawing text, images, and shapes on the Arduino TFT graphical display. For all Arduino boards.",
      "paragraph": "This library is compatible with most of the TFT display based on the ST7735 chipset",
      "website": "http://www.arduino.cc/en/Reference/TFTLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/TFT-1.0.3.zip",
      "archiveFileName": "TFT-1.0.3.zip",
      "size": 45239,
      "checksum": "SHA-256:b99cbf319f6b68d73507f66f8e44d37fe7fcd15d9b3c032ed036d672a1b37496"
    },
    {
      "name": "TFT",
      "version": "1.0.4",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows drawing text, images, and shapes on the Arduino TFT graphical display. For all Arduino boards.",
      "paragraph": "This library is compatible with most of the TFT display based on the ST7735 chipset",
      "website": "http://www.arduino.cc/en/Reference/TFTLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/TFT-1.0.4.zip",
      "archiveFileName": "TFT-1.0.4.zip",
      "size": 45380,
      "checksum": "SHA-256:c4b582710bd9a8c013b4e98cdddfed5c73dd599daef8f6b5dccb98efce2d2442"
    },
    {
      "name": "TFT",
      "version": "1.0.5",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows drawing text, images, and shapes on the Arduino TFT graphical display. For all Arduino boards.",
      "paragraph": "This library is compatible with most of the TFT display based on the ST7735 chipset",
      "website": "http://www.arduino.cc/en/Reference/TFTLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/TFT-1.0.5.zip",
      "archiveFileName": "TFT-1.0.5.zip",
      "size": 45414,
      "checksum": "SHA-256:d1b74acd6455361f4356c9ca9dcc4435011af77dc4208861b115c03e9b1659a5"
    },
    {
      "name": "USBHost",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows the communication with USB peripherals like mice, keyboards, and thumbdrives. For Arduino DUE only.",
      "paragraph": "The USBHost library allows an Arduino Due board to appear as a USB host, enabling it to communicate with peripherals like USB mice and keyboards. USBHost does not support devices that are connected through USB hubs. This includes some keyboards that have an internal hub.",
      "website": "http://arduino.cc/en/Reference/USBHost",
      "category": "Device Control",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/USBHost-1.0.0.zip",
      "archiveFileName": "USBHost-1.0.0.zip",
      "size": 54904,
      "checksum": "SHA-256:1bf40971eb3c060128e5ae5a391bcaeb3141e4cd270e270d3beba0ef1cacf503"
    },
    {
      "name": "USBHost",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows the communication with USB peripherals like mice, keyboards, and thumbdrives. For Arduino DUE only.",
      "paragraph": "The USBHost library allows an Arduino Due board to appear as a USB host, enabling it to communicate with peripherals like USB mice and keyboards. USBHost does not support devices that are connected through USB hubs. This includes some keyboards that have an internal hub.",
      "website": "http://arduino.cc/en/Reference/USBHost",
      "category": "Device Control",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/USBHost-1.0.1.zip",
      "archiveFileName": "USBHost-1.0.1.zip",
      "size": 54937,
      "checksum": "SHA-256:195d47aabdb1bf6c2c4284f254343314076a99fa8ecb1ebaf6eb81d60e4d24a8"
    },
    {
      "name": "USBHost",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows the communication with USB peripherals like mice, keyboards, and thumbdrives. For Arduino DUE only.",
      "paragraph": "The USBHost library allows an Arduino Due board to appear as a USB host, enabling it to communicate with peripherals like USB mice and keyboards. USBHost does not support devices that are connected through USB hubs. This includes some keyboards that have an internal hub.",
      "website": "http://arduino.cc/en/Reference/USBHost",
      "category": "Device Control",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/USBHost-1.0.2.zip",
      "archiveFileName": "USBHost-1.0.2.zip",
      "size": 54960,
      "checksum": "SHA-256:a0bb952ad4e661e4a00e98c581275195900a606259b8cd0ec8c94cfb179d1422"
    },
    {
      "name": "USBHost",
      "version": "1.0.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows the communication with USB peripherals like mice, keyboards, and thumbdrives. For Arduino DUE only.",
      "paragraph": "The USBHost library allows an Arduino Due board to appear as a USB host, enabling it to communicate with peripherals like USB mice and keyboards. USBHost does not support devices that are connected through USB hubs. This includes some keyboards that have an internal hub.",
      "website": "http://www.arduino.cc/en/Reference/USBHost",
      "category": "Device Control",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/USBHost-1.0.3.zip",
      "archiveFileName": "USBHost-1.0.3.zip",
      "size": 54973,
      "checksum": "SHA-256:5e78ea29b66655393e308be647b5de695bc5dfdce6e024073492e8f6895ad4c3"
    },
    {
      "name": "USBHost",
      "version": "1.0.4",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows the communication with USB peripherals like mice, keyboards, and thumbdrives. For Arduino DUE only.",
      "paragraph": "The USBHost library allows an Arduino Due board to appear as a USB host, enabling it to communicate with peripherals like USB mice and keyboards. USBHost does not support devices that are connected through USB hubs. This includes some keyboards that have an internal hub.",
      "website": "http://www.arduino.cc/en/Reference/USBHost",
      "category": "Device Control",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/USBHost-1.0.4.zip",
      "archiveFileName": "USBHost-1.0.4.zip",
      "size": 54966,
      "checksum": "SHA-256:656633836ee540759d350921b2bda83e453fa6da0b3a12b2ffe628ffd554479e"
    },
    {
      "name": "USBHost",
      "version": "1.0.5",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows the communication with USB peripherals like mice, keyboards, and thumbdrives.",
      "paragraph": "The USBHost library allows an Arduino Due board to appear as a USB host, enabling it to communicate with peripherals like USB mice and keyboards. USBHost does not support devices that are connected through USB hubs. This includes some keyboards that have an internal hub.",
      "website": "http://www.arduino.cc/en/Reference/USBHost",
      "category": "Device Control",
      "architectures": [
        "sam"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/USBHost-1.0.5.zip",
      "archiveFileName": "USBHost-1.0.5.zip",
      "size": 54954,
      "checksum": "SHA-256:a9eba45b3e28a91e92117c99f4a50b535ae44d0234ce9bc0c1e73a985250515e"
    },
    {
      "name": "WiFi",
      "version": "1.2.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino WiFi shield. For all Arduino boards.",
      "paragraph": "With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP. The library can also manage DNS.",
      "website": "http://arduino.cc/en/Reference/WiFi",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/WiFi-1.2.0.zip",
      "archiveFileName": "WiFi-1.2.0.zip",
      "size": 5320648,
      "checksum": "SHA-256:1e6468bb4aca70e523e3336993e9c269f19b1d66f99053909e954ecedf5532aa"
    },
    {
      "name": "WiFi",
      "version": "1.2.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino WiFi shield. For all Arduino boards.",
      "paragraph": "With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP. The library can also manage DNS.",
      "website": "http://arduino.cc/en/Reference/WiFi",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/WiFi-1.2.1.zip",
      "archiveFileName": "WiFi-1.2.1.zip",
      "size": 5320641,
      "checksum": "SHA-256:145cdf74035d7c14ac2b68978330515323b1fe99aaffa1bec45a8186633c67eb"
    },
    {
      "name": "WiFi",
      "version": "1.2.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino WiFi shield. For all Arduino boards.",
      "paragraph": "With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP. The library can also manage DNS.",
      "website": "http://arduino.cc/en/Reference/WiFi",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/WiFi-1.2.2.zip",
      "archiveFileName": "WiFi-1.2.2.zip",
      "size": 5320749,
      "checksum": "SHA-256:e3b2566a66da79341d4f29dd63191139ba8224758dbd80813e063095c67562d0"
    },
    {
      "name": "WiFi",
      "version": "1.2.3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino WiFi shield. For all Arduino boards.",
      "paragraph": "With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP. The library can also manage DNS.",
      "website": "http://arduino.cc/en/Reference/WiFi",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/WiFi-1.2.3.zip",
      "archiveFileName": "WiFi-1.2.3.zip",
      "size": 5320779,
      "checksum": "SHA-256:af41a56674910b22a81ceb40553f5da1307d03577db153fce01f34d3335c9813"
    },
    {
      "name": "WiFi",
      "version": "1.2.4",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino WiFi shield. For all Arduino boards.",
      "paragraph": "With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP. The library can also manage DNS.",
      "website": "http://www.arduino.cc/en/Reference/WiFi",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/WiFi-1.2.4.zip",
      "archiveFileName": "WiFi-1.2.4.zip",
      "size": 5320786,
      "checksum": "SHA-256:e829c989cccef3455cc62c6e0d4215d569db22dd309dd20f9956fe70157a4105"
    },
    {
      "name": "WiFi",
      "version": "1.2.5",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino WiFi shield. For all Arduino boards.",
      "paragraph": "With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP. The library can also manage DNS.",
      "website": "http://www.arduino.cc/en/Reference/WiFi",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/WiFi-1.2.5.zip",
      "archiveFileName": "WiFi-1.2.5.zip",
      "size": 5320814,
      "checksum": "SHA-256:2b076025f80291b235de4e97586cef95304a1210b9142ca45acf1dc6a53f4a7b"
    },
    {
      "name": "WiFi",
      "version": "1.2.6",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino WiFi shield. For all Arduino boards.",
      "paragraph": "With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP. The library can also manage DNS.",
      "website": "http://www.arduino.cc/en/Reference/WiFi",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino",
        "Retired"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/WiFi-1.2.6.zip",
      "archiveFileName": "WiFi-1.2.6.zip",
      "size": 5320852,
      "checksum": "SHA-256:8a3f71b45d58de52784cc9ee319dc782994e4674b18a0353cb234995e53e963e"
    },
    {
      "name": "WiFi101",
      "version": "0.5.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for the Arduino Wifi Shield 101",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/WiFi101-0.5.0.zip",
      "archiveFileName": "WiFi101-0.5.0.zip",
      "size": 173914,
      "checksum": "SHA-256:28123da4cf13aaa5fd4c707d892e172b371e2b58702713840bf5191e78b70b0d"
    },
    {
      "name": "WiFi101",
      "version": "0.5.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for the Arduino Wifi Shield 101",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/WiFi101-0.5.1.zip",
      "archiveFileName": "WiFi101-0.5.1.zip",
      "size": 173398,
      "checksum": "SHA-256:de20f5c94ce3d03189f6cb509bdc0b4684b370d5266d546d48e5a123212d14cc"
    },
    {
      "name": "WiFi101",
      "version": "0.6.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for the Arduino Wifi Shield 101",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/WiFi101-0.6.0.zip",
      "archiveFileName": "WiFi101-0.6.0.zip",
      "size": 175613,
      "checksum": "SHA-256:45766ab7f01b0f761aa9faed360112f6430e17e0ab14dc5db3cecb9319051deb"
    },
    {
      "name": "WiFi101",
      "version": "0.7.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for the Arduino/Genuino Wifi Shield 101 and MKR1000 boards",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/WiFi101-0.7.0.zip",
      "archiveFileName": "WiFi101-0.7.0.zip",
      "size": 195582,
      "checksum": "SHA-256:39bcce532a01a2b7355654a7d24e8d58ff3758bf1f4c12276657bb2b533cd3c3"
    },
    {
      "name": "WiFi101",
      "version": "0.8.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for ATMEL WINC1500 module (used on Arduino/Genuino Wifi Shield 101 and MKR1000 boards)",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/WiFi101-0.8.0.zip",
      "archiveFileName": "WiFi101-0.8.0.zip",
      "size": 197812,
      "checksum": "SHA-256:f983f7747cf26df37a71d1cc9eb31aa3dbb571ddfa8b4f7dd05327aca2304915"
    },
    {
      "name": "Mouse",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows an Arduino board with USB capabilites to act as a Mouse. For Leonardo/Micro only",
      "paragraph": "This library plugs on the HID library. Can be used with or without other HID-based libraries (Keyboard, Gamepad etc)",
      "website": "http://www.arduino.cc/en/Reference/Mouse",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Mouse-1.0.0.zip",
      "archiveFileName": "Mouse-1.0.0.zip",
      "size": 3847,
      "checksum": "SHA-256:b27e41c5ebd34d008c770524d1ff2b66463cef48ca4f718aca7b763d9ec2d892"
    },
    {
      "name": "Mouse",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows an Arduino/Genuino board with USB capabilites to act as a Mouse.",
      "paragraph": "This library plugs on the HID library. Can be used with or without other HID-based libraries (Keyboard, Gamepad etc)",
      "website": "http://www.arduino.cc/en/Reference/Mouse",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Mouse-1.0.1.zip",
      "archiveFileName": "Mouse-1.0.1.zip",
      "size": 3835,
      "checksum": "SHA-256:8c7b4c5df2bc671273a8e83a607f128272b049a0a94b1b58431aa79992ec2cc4"
    },
    {
      "name": "Keyboard",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows an Arduino board with USB capabilites to act as a Keyboard. For Leonardo/Micro only",
      "paragraph": "This library plugs on the HID library. It can be used with or without other HID-based libraries (Mouse, Gamepad etc)",
      "website": "http://www.arduino.cc/en/Reference/Keyboard",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Keyboard-1.0.0.zip",
      "archiveFileName": "Keyboard-1.0.0.zip",
      "size": 5538,
      "checksum": "SHA-256:52c8726658dcfc4df72d82ea233b3d58eb8fad5642bbbe62f85e81bffdc767d9"
    },
    {
      "name": "Keyboard",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows an Arduino/Genuino board with USB capabilites to act as a Keyboard.",
      "paragraph": "This library plugs on the HID library. It can be used with or without other HID-based libraries (Mouse, Gamepad etc)",
      "website": "http://www.arduino.cc/en/Reference/Keyboard",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Keyboard-1.0.1.zip",
      "archiveFileName": "Keyboard-1.0.1.zip",
      "size": 5526,
      "checksum": "SHA-256:5c666fbcb5b96bbac4b70f467d437574ee6c36cf4ca35a0cb5aa8fc83e4e534c"
    },
    {
      "name": "AzureIoT",
      "version": "0.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Azure IoT library for the Arduino. For Arduino MKR1000 or Zero and WiFi Shield 101 only.",
      "paragraph": "Arduino port of the Azure IoT C device SDK. Allows you to use your Arduino with the Azure IoT Hub.",
      "website": "https://github.com/arduino-libraries/AzureIoT",
      "category": "Communication",
      "architectures": [
        "samd"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/AzureIoT-0.0.0.zip",
      "archiveFileName": "AzureIoT-0.0.0.zip",
      "size": 274034,
      "checksum": "SHA-256:368ac17d2fd049d3092512c3e031f8dfe66cc25d1c0275e3ac2280d51abc2f06"
    },
    {
      "name": "AzureIoT",
      "version": "0.1.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Azure IoT library for Arduino. For the Arduino MKR1000 or Zero and WiFi Shield 101 only.",
      "paragraph": "Arduino port of the Azure IoT C device SDK. It allows you to use your Arduino with the Azure IoT Hub.",
      "website": "https://github.com/arduino-libraries/AzureIoT",
      "category": "Communication",
      "architectures": [
        "samd"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/AzureIoT-0.1.0.zip",
      "archiveFileName": "AzureIoT-0.1.0.zip",
      "size": 289094,
      "checksum": "SHA-256:7ba2527dca98344d0373af7758c6cd47992aab81e37b08892e35d90e2b2e0bba"
    },
    {
      "name": "AudioFrequencyMeter",
      "version": "1.0.1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Get the fundamental pitch of an audio signal",
      "paragraph": "Allows the Arduino Zero and MKR1000 to sample a generic input audio signal and get the fundamental pitch",
      "website": "http://www.arduino.cc/en/Reference/AudioFrequencyMeter",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/AudioFrequencyMeter-1.0.1.zip",
      "archiveFileName": "AudioFrequencyMeter-1.0.1.zip",
      "size": 7302,
      "checksum": "SHA-256:d158d956457032285e33cb0f93e048c767c596c21509b2d397ec0a7e965ccc27"
    },
    {
      "name": "AudioFrequencyMeter",
      "version": "1.0.2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Get the fundamental pitch of an audio signal",
      "paragraph": "Allows the Arduino Zero and MKR1000 to sample a generic input audio signal and get the fundamental pitch",
      "website": "http://www.arduino.cc/en/Reference/AudioFrequencyMeter",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/AudioFrequencyMeter-1.0.2.zip",
      "archiveFileName": "AudioFrequencyMeter-1.0.2.zip",
      "size": 7226,
      "checksum": "SHA-256:45cf812bcb5628f37782bb1ffd34094c60cd574c3b681a6369781775940d5049"
    },
    {
      "name": "Madgwick",
      "version": "1.0.0",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Helpers for MadgwickAHRS algorithm",
      "paragraph": "This library wraps the official implementation of MadgwickAHRS algorithm to get orientation of an object based on accelerometer and gyroscope readings",
      "website": "http://arduino.cc/en/Reference/XXXXXX",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Madgwick-1.0.0.zip",
      "archiveFileName": "Madgwick-1.0.0.zip",
      "size": 4503,
      "checksum": "SHA-256:7a1a2ab82023fd735021aac6529302dfcbba6eab714f7112a554f0e91dd19a12"
    },
    {
      "name": "MIDIUSB",
      "version": "1.0.0",
      "author": "Gary Grewal, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows an Arduino board with USB capabilites to act as a MIDI instrument over USB. For Leonardo/Micro only",
      "website": "http://www.arduino.cc/en/Reference/MIDIUSB",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/MIDIUSB-1.0.0.zip",
      "archiveFileName": "MIDIUSB-1.0.0.zip",
      "size": 10614,
      "checksum": "SHA-256:16b939f2c1eb32001e2a863d48333882a2354e3dd6c8b9c217e3dbecb90aac7a"
    },
    {
      "name": "MIDIUSB",
      "version": "1.0.1",
      "author": "Gary Grewal, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows an Arduino board with USB capabilites to act as a MIDI instrument over USB.",
      "website": "http://www.arduino.cc/en/Reference/MIDIUSB",
      "category": "Device Control",
      "architectures": [
        "avr",
        "sam",
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/MIDIUSB-1.0.1.zip",
      "archiveFileName": "MIDIUSB-1.0.1.zip",
      "size": 10637,
      "checksum": "SHA-256:46fa514d07e01a8ec95e48d2e2d9399ad658271bd84c7ce24aaf074e261fd75f"
    },
    {
      "name": "MIDIUSB",
      "version": "1.0.2",
      "author": "Gary Grewal, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows an Arduino board with USB capabilites to act as a MIDI instrument over USB.",
      "website": "http://www.arduino.cc/en/Reference/MIDIUSB",
      "category": "Device Control",
      "architectures": [
        "avr",
        "sam",
        "samd"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/MIDIUSB-1.0.2.zip",
      "archiveFileName": "MIDIUSB-1.0.2.zip",
      "size": 10642,
      "checksum": "SHA-256:066df98a2b7007a80c7c1a209831962e77d88925fedf9c60f5ad1ec1b217b238"
    },
    {
      "name": "Windows Virtual Shields for Arduino",
      "version": "1.1.0",
      "author": "Windows Developer Program for IoT \u003cwdpIoT@microsoft.com\u003e",
      "maintainer": "Windows Developer Program for IoT \u003cwdpIoT@microsoft.com\u003e",
      "sentence": "Windows Virtual Shields for Arduino allows an Arduino to communicate and control Windows devices running open-source Windows Universal Application.",
      "paragraph": "Windows Virtual Shields for Arduino allows an Arduino to communicate with an open-source Windows Universal Application running on all Windows 10 devices, primarily focusing on Windows Phones. The library exposes the Windows Phones's sensors and capabilities to the an Arduino Sketch.",
      "website": "https://windowsondevices.com",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/ms-iot/Windows_Virtual_Shields_for_Arduino-1.1.0.zip",
      "archiveFileName": "Windows_Virtual_Shields_for_Arduino-1.1.0.zip",
      "size": 1210024,
      "checksum": "SHA-256:16bafedd2cad3110f6f42f00710b433d81bb459032e96160baa4553f9b35a780"
    },
    {
      "name": "EducationShield",
      "version": "0.9.2",
      "author": "David Cuartielles",
      "maintainer": "David Cuartielles",
      "sentence": "Library used for the completion of all the projects related to CTC",
      "paragraph": "Is intended to be used with the Education Shield provided in the CTC kit. It presents the neccesary functions to interact with 3 and 4 pin connectors used in many sensors and actuators. Furthermore, it includes the functionality of SD-Card Reader and audio jack.",
      "website": "http://kreatech.verkstad.cc/en/course-literature/education-shield/",
      "category": "Education",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduinoverkstad/EducationShield-0.9.2.zip",
      "archiveFileName": "EducationShield-0.9.2.zip",
      "size": 103775,
      "checksum": "SHA-256:446cf851451356db6bca043236ecf0a099a3dd0e7e72d1a232204bf02487520e"
    },
    {
      "name": "EducationShield",
      "version": "1.0.0",
      "author": "David Cuartielles",
      "maintainer": "David Cuartielles",
      "sentence": "Library used for the completion of all the projects related to CTC",
      "paragraph": "Is intended to be used with the Education Shield provided in the CTC kit. It presents the neccesary functions to interact with 3 and 4 pin connectors used in many sensors and actuators. Furthermore, it includes the functionality of SD-Card Reader and audio jack.",
      "website": "http://kreatech.verkstad.cc/en/course-literature/education-shield/",
      "category": "Education",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduinoverkstad/EducationShield-1.0.0.zip",
      "archiveFileName": "EducationShield-1.0.0.zip",
      "size": 103324,
      "checksum": "SHA-256:69da89ecd9358a5714f596e37e5899ccc28730a59b8b379fe8b5fe1a67c716a7"
    },
    {
      "name": "EducationShield",
      "version": "1.0.1",
      "author": "David Cuartielles",
      "maintainer": "David Cuartielles",
      "sentence": "Library used for the completion of all the projects related to CTC",
      "paragraph": "Is intended to be used with the Education Shield provided in the CTC kit. It presents the neccesary functions to interact with 3 and 4 pin connectors used in many sensors and actuators. Furthermore, it includes the functionality of SD-Card Reader and audio jack.",
      "website": "http://kreatech.verkstad.cc/en/course-literature/education-shield/",
      "category": "Education",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduinoverkstad/EducationShield-1.0.1.zip",
      "archiveFileName": "EducationShield-1.0.1.zip",
      "size": 103775,
      "checksum": "SHA-256:01df759546fd4369bb5dd59774a1a637430ff6b963357455f45f633869a9ffa6"
    },
    {
      "name": "EducationShield",
      "version": "1.1.1",
      "author": "Arduino Verkstad",
      "maintainer": "Xun Yang",
      "sentence": "Library used for the completion of all the projects related to CTC",
      "paragraph": "Is intended to be used with the Education Shield provided in the CTC kit. It presents the neccesary functions to interact with 3 and 4 pin connectors used in many sensors and actuators.",
      "website": "http://kreatech.verkstad.cc/en/course-literature/education-shield/",
      "category": "Other",
      "architectures": [
        "avr",
        "arc32"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduinoverkstad/EducationShield-1.1.1.zip",
      "archiveFileName": "EducationShield-1.1.1.zip",
      "size": 110936,
      "checksum": "SHA-256:9f8a352d863e1cf364ce49492c35ac35049dfaf9fd7952590ee03a283773cf10"
    },
    {
      "name": "Svante",
      "version": "0.0.1",
      "author": "Xun Yang, Clara Leivas",
      "maintainer": "Xun Yang",
      "sentence": "Library used for the Svante workshops",
      "paragraph": "Is intended to be used with the Svante robot produced for Arduino Verkstad in Malmo(Sweden)",
      "website": "https://github.com/arduinoverkstad/Svante-Workshop",
      "category": "Robotics",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduinoverkstad/Svante-0.0.1.zip",
      "archiveFileName": "Svante-0.0.1.zip",
      "size": 42898,
      "checksum": "SHA-256:e8d3c864d6fd3f7b859e1670a10a8a42f3eb36bb7378c982ba3908a71fb09841"
    },
    {
      "name": "Svante",
      "version": "0.0.3",
      "author": "Xun Yang, Clara Leivas",
      "maintainer": "Xun Yang",
      "sentence": "Library used for the Svante workshops",
      "paragraph": "Is intended to be used with the Svante robot produced for Arduino Verkstad in Malmo(Sweden)",
      "website": "https://github.com/arduinoverkstad/Svante-Workshop",
      "category": "Robotics",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduinoverkstad/Svante-0.0.3.zip",
      "archiveFileName": "Svante-0.0.3.zip",
      "size": 42855,
      "checksum": "SHA-256:116fd6df37fae97e90453bae4ba27a8c4c7ce69c829c4088aeb6c1fae4ecf558"
    },
    {
      "name": "Temboo",
      "version": "1.1.0",
      "author": "Temboo",
      "maintainer": "Temboo \u003csupport@temboo.com\u003e",
      "sentence": "This library enables calls to Temboo, a platform that connects Arduino boards to 100+ APIs, databases, code utilities and more.",
      "paragraph": "Use this library to connect your Arduino board to Temboo, making it simple to interact with a vast array of web-based resources and services.",
      "website": "http://www.temboo.com/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Temboo-1.1.0.zip",
      "archiveFileName": "Temboo-1.1.0.zip",
      "size": 36118,
      "checksum": "SHA-256:b60c19d1baf278a9763c280cc87727bdbbcb2bfc7c308421a89066a785b84e12"
    },
    {
      "name": "Temboo",
      "version": "1.1.1",
      "author": "Temboo",
      "maintainer": "Temboo \u003csupport@temboo.com\u003e",
      "sentence": "This library enables calls to Temboo, a platform that connects Arduino boards to 100+ APIs, databases, code utilities and more.",
      "paragraph": "Use this library to connect your Arduino board to Temboo, making it simple to interact with a vast array of web-based resources and services.",
      "website": "http://www.temboo.com/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Temboo-1.1.1.zip",
      "archiveFileName": "Temboo-1.1.1.zip",
      "size": 36115,
      "checksum": "SHA-256:46e1be403e44b9153c8c52a580d43ec8d2bf76a080dcaa09f042d3dabe98d340"
    },
    {
      "name": "Temboo",
      "version": "1.1.2",
      "author": "Temboo",
      "maintainer": "Temboo \u003csupport@temboo.com\u003e",
      "sentence": "This library enables calls to Temboo, a platform that connects Arduino boards to 100+ APIs, databases, code utilities and more.",
      "paragraph": "Use this library to connect your Arduino board to Temboo, making it simple to interact with a vast array of web-based resources and services.",
      "website": "http://www.temboo.com/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Temboo-1.1.2.zip",
      "archiveFileName": "Temboo-1.1.2.zip",
      "size": 36306,
      "checksum": "SHA-256:f9e54ab2c257ab2c606399881eb45f600f7d217f656129551291bad750e85ea1"
    },
    {
      "name": "Temboo",
      "version": "1.1.3",
      "author": "Temboo",
      "maintainer": "Temboo \u003csupport@temboo.com\u003e",
      "sentence": "This library enables calls to Temboo, a platform that connects Arduino boards to 100+ APIs, databases, code utilities and more.",
      "paragraph": "Use this library to connect your Arduino board to Temboo, making it simple to interact with a vast array of web-based resources and services.",
      "website": "http://www.temboo.com/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Temboo-1.1.3.zip",
      "archiveFileName": "Temboo-1.1.3.zip",
      "size": 114070,
      "checksum": "SHA-256:62dd1a179675e109ebb39009643e88781e63bf856ffe2270c03b5f60e80b451e"
    },
    {
      "name": "Temboo",
      "version": "1.1.4",
      "author": "Temboo",
      "maintainer": "Temboo \u003csupport@temboo.com\u003e",
      "sentence": "This library enables calls to Temboo, a platform that connects Arduino boards to 100+ APIs, databases, code utilities and more.",
      "paragraph": "Use this library to connect your Arduino board to Temboo, making it simple to interact with a vast array of web-based resources and services.",
      "website": "http://www.temboo.com/arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ],
      "url": "http://downloads.arduino.cc/libraries/arduino-libraries/Temboo-1.1.4.zip",
      "archiveFileName": "Temboo-1.1.4.zip",
      "size": 140449,
      "checksum": "SHA-256:08ca2394a6bee13f5cc8b46d96fadd89b4c9f29b83e605d587d9207e2509b61e"
    },
    {
      "name": "Adafruit ADS1X15",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for TI's ADS1015: 12-bit Differential or Single-Ended ADC with PGA and Comparator",
      "paragraph": "Driver for TI's ADS1015: 12-bit Differential or Single-Ended ADC with PGA and Comparator",
      "website": "https://github.com/adafruit/Adafruit_ADS1X15",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_ADS1X15-1.0.0.zip",
      "archiveFileName": "Adafruit_ADS1X15-1.0.0.zip",
      "size": 8870,
      "checksum": "SHA-256:685cbaa119c86f9962c4a61d19cdeb3672050a2897548953b896313f4f79fb3f"
    },
    {
      "name": "Adafruit ADXL345",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified driver for the ADXL345 Accelerometer",
      "paragraph": "Unified driver for the ADXL345 Accelerometer",
      "website": "https://github.com/adafruit/Adafruit_ADXL345",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_ADXL345-1.0.0.zip",
      "archiveFileName": "Adafruit_ADXL345-1.0.0.zip",
      "size": 8282,
      "checksum": "SHA-256:5b548e2992987afd09a35af3f7b38c130d425a825dd89edd9062aa8a85c697a8"
    },
    {
      "name": "Adafruit AHRS",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "AHRS (Altitude and Heading Reference System) for Adafruit's 9DOF and 10DOF breakouts",
      "paragraph": "AHRS (Altitude and Heading Reference System) for Adafruit's 9DOF and 10DOF breakouts",
      "website": "https://github.com/adafruit/Adafruit_AHRS",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_AHRS-1.0.0.zip",
      "archiveFileName": "Adafruit_AHRS-1.0.0.zip",
      "size": 802071,
      "checksum": "SHA-256:fe534c2be1145cecc16cc4a760cd0c9222c3096206b265d9e6f850a0caf35b3f"
    },
    {
      "name": "Adafruit AM2315",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library code for AM2315 sensors",
      "paragraph": "Library code for AM2315 sensors",
      "website": "https://github.com/adafruit/Adafruit_AM2315",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_AM2315-1.0.0.zip",
      "archiveFileName": "Adafruit_AM2315-1.0.0.zip",
      "size": 4071,
      "checksum": "SHA-256:ca472b40a2351398d61d6f9445be7f5365d6a18f624e3827afcaf8c04384ccf3"
    },
    {
      "name": "Adafruit AM2315",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library code for AM2315 sensors",
      "paragraph": "Library code for AM2315 sensors",
      "website": "https://github.com/adafruit/Adafruit_AM2315",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_AM2315-1.0.1.zip",
      "archiveFileName": "Adafruit_AM2315-1.0.1.zip",
      "size": 4092,
      "checksum": "SHA-256:063162d79a675563eec68cb19653e20bd6ee55bbe85a8217977f8dd7607605ad"
    },
    {
      "name": "Adafruit BLEFirmata",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Modified Firmata code to work with Adafruit's nRF8001 Breakout",
      "paragraph": "Modified Firmata code to work with Adafruit's nRF8001 Breakout",
      "website": "https://github.com/adafruit/Adafruit_BLEFirmata",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BLEFirmata-1.0.0.zip",
      "archiveFileName": "Adafruit_BLEFirmata-1.0.0.zip",
      "size": 42811,
      "checksum": "SHA-256:29a2a1b93ac51cb4b76c646d5c35d05ad13aae7cbfc8f4fb91a89a8d1e985c58"
    },
    {
      "name": "Adafruit BMP085 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A powerful but easy to use BMP085/BMP180 Library",
      "paragraph": "A powerful but easy to use BMP085/BMP180 Library",
      "website": "https://github.com/adafruit/Adafruit-BMP085-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BMP085_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_BMP085_Library-1.0.0.zip",
      "size": 5857,
      "checksum": "SHA-256:b45f70071a020734d94b52fa7bd392c7a7a10491f6dff78842e96c936b88d55e"
    },
    {
      "name": "Adafruit BMP085 Unified",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor driver for Adafruit's BMP085 \u0026 BMP180 breakouts",
      "paragraph": "Unified sensor driver for Adafruit's BMP085 \u0026 BMP180 breakouts",
      "website": "https://github.com/adafruit/Adafruit_BMP085_Unified",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BMP085_Unified-1.0.0.zip",
      "archiveFileName": "Adafruit_BMP085_Unified-1.0.0.zip",
      "size": 8716,
      "checksum": "SHA-256:c1c8e3dcdc6410f67f5c00a9ed84d8c31341cfaca244803d8af02d2003330333"
    },
    {
      "name": "Adafruit BMP183 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Non-Unified BMP library",
      "paragraph": "Non-Unified BMP library",
      "website": "https://github.com/adafruit/Adafruit_BMP183_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BMP183_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_BMP183_Library-1.0.0.zip",
      "size": 6613,
      "checksum": "SHA-256:73e2b9b3d4375abf85764ee8e4e9c4d7ea1a312414e0d7ad3802e47249e2f332"
    },
    {
      "name": "Adafruit BMP183 Unified Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the BMP183 sensors in the Adafruit shop",
      "paragraph": "Arduino library for the BMP183 sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit_BMP183_Unified_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BMP183_Unified_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_BMP183_Unified_Library-1.0.0.zip",
      "size": 8642,
      "checksum": "SHA-256:e1b28d0f2d3d956120f73613c4b18d63d6d28267171672f5d67d8acb9973c23d"
    },
    {
      "name": "Adafruit CAP1188 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Adafruit CAP1188 8-Channel Capacitive Touch Sensor Breakout",
      "paragraph": "Arduino library for the Adafruit CAP1188 8-Channel Capacitive Touch Sensor Breakout",
      "website": "https://github.com/adafruit/Adafruit_CAP1188_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_CAP1188_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_CAP1188_Library-1.0.0.zip",
      "size": 5261,
      "checksum": "SHA-256:4a5eed8862c205cc312313e98efc5d3e08181750a1c55e4c1f8fb7d2a9001b98"
    },
    {
      "name": "Adafruit CC3000 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library code for Adafruit's CC3000 WiFi breakouts.",
      "paragraph": "The CC3000 allows an Arduino to connect to a WiFi network and access the internet.  See more at: https://learn.adafruit.com/adafruit-cc3000-wifi/",
      "website": "https://github.com/adafruit/Adafruit_CC3000_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_CC3000_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_CC3000_Library-1.0.0.zip",
      "size": 243906,
      "checksum": "SHA-256:f7c78ce7828263e3092938d56e12ec9cd66fb9f213771f35577bca1346aef84b"
    },
    {
      "name": "Adafruit CC3000 Library",
      "version": "1.0.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library code for Adafruit's CC3000 WiFi breakouts.",
      "paragraph": "The CC3000 allows an Arduino to connect to a WiFi network and access the internet.  See more at: https://learn.adafruit.com/adafruit-cc3000-wifi/",
      "website": "https://github.com/adafruit/Adafruit_CC3000_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_CC3000_Library-1.0.3.zip",
      "archiveFileName": "Adafruit_CC3000_Library-1.0.3.zip",
      "size": 244780,
      "checksum": "SHA-256:177e015cc91f5ccb5b2db00052401a087378f76790f675950fe670f056334bee"
    },
    {
      "name": "Adafruit DHT Unified",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor library version of the DHT humidity and temperature sensor Arduino library.",
      "paragraph": "Unified sensor library version of the DHT humidity and temperature sensor Arduino library.",
      "website": "https://github.com/adafruit/Adafruit_DHT_Unified",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_DHT_Unified-1.0.0.zip",
      "archiveFileName": "Adafruit_DHT_Unified-1.0.0.zip",
      "size": 6751,
      "checksum": "SHA-256:ef9d8836e7759447633fc461307fb9a8efd3042418efdfabdf69c0051fe2db6d"
    },
    {
      "name": "Adafruit DotStar",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit DotStar LED Library",
      "paragraph": "Adafruit DotStar LED Library",
      "website": "https://github.com/adafruit/Adafruit_DotStar",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_DotStar-1.0.0.zip",
      "archiveFileName": "Adafruit_DotStar-1.0.0.zip",
      "size": 21115,
      "checksum": "SHA-256:63f1a7f2de42bb2609a811745354af455cceb3a62fbba2e339e8fe0f69c1b361"
    },
    {
      "name": "Adafruit DotStar",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit DotStar LED Library",
      "paragraph": "Adafruit DotStar LED Library",
      "website": "https://github.com/adafruit/Adafruit_DotStar",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_DotStar-1.0.1.zip",
      "archiveFileName": "Adafruit_DotStar-1.0.1.zip",
      "size": 21397,
      "checksum": "SHA-256:caaeb4c75b66426c4b8a277bbdca4f779397fbc8964fae5d1c79bff3d3b8be1e"
    },
    {
      "name": "Adafruit DRV2605 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for Adafruit DRV2605L Hapic Controller Breakout",
      "paragraph": "Arduino library for Adafruit DRV2605L Hapic Controller Breakout",
      "website": "https://github.com/adafruit/Adafruit_DRV2605_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_DRV2605_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_DRV2605_Library-1.0.0.zip",
      "size": 4328,
      "checksum": "SHA-256:4d17a38d569a2dc7a78092a2e938567124c6d37b3dedc5c3ca7922e350904a2b"
    },
    {
      "name": "Adafruit ESP8266",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Example code for ESP8266 chipset",
      "paragraph": "Example code for ESP8266 chipset",
      "website": "https://github.com/adafruit/Adafruit_ESP8266",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_ESP8266-1.0.0.zip",
      "archiveFileName": "Adafruit_ESP8266-1.0.0.zip",
      "size": 10362,
      "checksum": "SHA-256:9ca95ddc0cc36e0ae7de466817fc6ea440dc6cdb3e5eeaa9ba1d6f839790d414"
    },
    {
      "name": "Adafruit Fingerprint Sensor Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for interfacing to the fingerprint sensor in the Adafruit shop",
      "paragraph": "Arduino library for interfacing to the fingerprint sensor in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit-Fingerprint-Sensor-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_Fingerprint_Sensor_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_Fingerprint_Sensor_Library-1.0.0.zip",
      "size": 2394769,
      "checksum": "SHA-256:1f01fe6d2fc112825b694c5b032dbb9c28a1ce4b0d412037b0ea3c17522f978a"
    },
    {
      "name": "Adafruit Flora Pixel Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino Library for Adafruit Flora Pixels",
      "paragraph": "Arduino Library for Adafruit Flora Pixels",
      "website": "https://github.com/adafruit/Adafruit-Flora-Pixel-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_Flora_Pixel_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_Flora_Pixel_Library-1.0.0.zip",
      "size": 4378,
      "checksum": "SHA-256:a5d13a58d9d46f2a81e027089db0df15f0f1617d335ba702063817af49e45913"
    },
    {
      "name": "Adafruit FONA Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Adafruit FONA",
      "paragraph": "Arduino library for the Adafruit FONA",
      "website": "https://github.com/adafruit/Adafruit_FONA_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_FONA_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_FONA_Library-1.0.0.zip",
      "size": 16216,
      "checksum": "SHA-256:dad53e1827ecb8de73197584e96ba7a753fb7aa74d13e42bcd60b62d46928480"
    },
    {
      "name": "Adafruit FONA Library",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Adafruit FONA",
      "paragraph": "Arduino library for the Adafruit FONA",
      "website": "https://github.com/adafruit/Adafruit_FONA_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_FONA_Library-1.1.0.zip",
      "archiveFileName": "Adafruit_FONA_Library-1.1.0.zip",
      "size": 20486,
      "checksum": "SHA-256:9781843bfce42d3680c82fe37d57662a43c2b6bc4abac6d47023f47e25e99037"
    },
    {
      "name": "Adafruit FONA Library",
      "version": "1.1.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Adafruit FONA",
      "paragraph": "Arduino library for the Adafruit FONA",
      "website": "https://github.com/adafruit/Adafruit_FONA_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_FONA_Library-1.1.1.zip",
      "archiveFileName": "Adafruit_FONA_Library-1.1.1.zip",
      "size": 26352,
      "checksum": "SHA-256:5c6ed5b973f98385c6773fea9bc55e576430f4164a38952cfa7a709d776f2f29"
    },
    {
      "name": "Adafruit FONA Library",
      "version": "1.2.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Adafruit FONA",
      "paragraph": "Arduino library for the Adafruit FONA",
      "website": "https://github.com/adafruit/Adafruit_FONA_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_FONA_Library-1.2.0.zip",
      "archiveFileName": "Adafruit_FONA_Library-1.2.0.zip",
      "size": 26713,
      "checksum": "SHA-256:5a0b4a5d1144ab5d963f92c42b5e49307024b116ee30cf043595f93cdd8b1a16"
    },
    {
      "name": "Adafruit FONA Library",
      "version": "1.3.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Adafruit FONA",
      "paragraph": "Arduino library for the Adafruit FONA",
      "website": "https://github.com/adafruit/Adafruit_FONA_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_FONA_Library-1.3.0.zip",
      "archiveFileName": "Adafruit_FONA_Library-1.3.0.zip",
      "size": 27175,
      "checksum": "SHA-256:d82a33427e287c5b635c5d3719628842634d9c6cdb5ebc46a7198d1db147e414"
    },
    {
      "name": "Adafruit FONA Library",
      "version": "1.3.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Adafruit FONA",
      "paragraph": "Arduino library for the Adafruit FONA",
      "website": "https://github.com/adafruit/Adafruit_FONA_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_FONA_Library-1.3.2.zip",
      "archiveFileName": "Adafruit_FONA_Library-1.3.2.zip",
      "size": 31761,
      "checksum": "SHA-256:5275948f9a0e1c12d67210cd7708be987f691fe61c69bf83c4927a203abef07b"
    },
    {
      "name": "Adafruit FRAM I2C",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for Adafruit's I2C-Based FRAM Breakouts",
      "paragraph": "Driver for Adafruit's I2C-Based FRAM Breakouts",
      "website": "https://github.com/adafruit/Adafruit_FRAM_I2C",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_FRAM_I2C-1.0.0.zip",
      "archiveFileName": "Adafruit_FRAM_I2C-1.0.0.zip",
      "size": 5663,
      "checksum": "SHA-256:51e3dbb28938299370942f447e1de5e13d4c3b13ae349df5897c84b64a89d544"
    },
    {
      "name": "Adafruit FRAM SPI",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for Adafruit's SPI-Based FRAM Breakouts",
      "paragraph": "Driver for Adafruit's SPI-Based FRAM Breakouts",
      "website": "https://github.com/adafruit/Adafruit_FRAM_SPI",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_FRAM_SPI-1.0.0.zip",
      "archiveFileName": "Adafruit_FRAM_SPI-1.0.0.zip",
      "size": 6430,
      "checksum": "SHA-256:26d513f9610f62a1235518d5efa1aa230757967ce6c0a94eb72db22714dd7553"
    },
    {
      "name": "Adafruit FT6206 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for FT6206-based Capacitive touch screen",
      "paragraph": "Arduino library for FT6206-based Capacitive touch screen",
      "website": "https://github.com/adafruit/Adafruit_FT6206_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_FT6206_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_FT6206_Library-1.0.0.zip",
      "size": 5748,
      "checksum": "SHA-256:49b4892be07b78f8c18e0ab17cfd8a7e8cf275fa72037d45e492526be09c909b"
    },
    {
      "name": "Adafruit GPS Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "An interrupt-based GPS library for no-parsing-required use",
      "paragraph": "An interrupt-based GPS library for no-parsing-required use",
      "website": "https://github.com/adafruit/Adafruit-GPS-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_GPS_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_GPS_Library-1.0.0.zip",
      "size": 43741,
      "checksum": "SHA-256:a5a33c251c5e185768b8a8abbe715d5f658f760010e1942a9634019ff3f59a1a"
    },
    {
      "name": "Adafruit Graphic VFD Display Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit's 128x64 Graphic VFD Display Library",
      "paragraph": "Adafruit's 128x64 Graphic VFD Display Library",
      "website": "https://github.com/adafruit/Adafruit-Graphic-VFD-Display-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_Graphic_VFD_Display_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_Graphic_VFD_Display_Library-1.0.0.zip",
      "size": 8010,
      "checksum": "SHA-256:e079943f3c9de5d5c5ad605c5a944611937ebcb51debf0648ac880020ecaa1ee"
    },
    {
      "name": "Adafruit HDC1000 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for HDC1000 and HDC1008 sensors.",
      "paragraph": "Designed specifically to work with the HDC1008 breakout in the Adafruit shop.",
      "website": "https://github.com/adafruit/Adafruit_HDC1000_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_HDC1000_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_HDC1000_Library-1.0.0.zip",
      "size": 3929,
      "checksum": "SHA-256:4638ffa3c022f033ef20871278a4960aa3734aa71b7ef3948422c869a464e4d2"
    },
    {
      "name": "Adafruit HDC1000 Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for HDC1000 and HDC1008 sensors.",
      "paragraph": "Designed specifically to work with the HDC1008 breakout in the Adafruit shop.",
      "website": "https://github.com/adafruit/Adafruit_HDC1000_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_HDC1000_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_HDC1000_Library-1.0.1.zip",
      "size": 4016,
      "checksum": "SHA-256:f8cc3a5e88a369d8d37b0d37520ab29e2f0c632f726471f52b1e672333e6b755"
    },
    {
      "name": "Adafruit HMC5883 Unified",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit HMC5883L 3-Axis Magnetometer Breakout library using Adafruit's Unified Sensor Library.",
      "paragraph": "Adafruit HMC5883L 3-Axis Magnetometer Breakout library using Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_HMC5883_Unified",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_HMC5883_Unified-1.0.0.zip",
      "archiveFileName": "Adafruit_HMC5883_Unified-1.0.0.zip",
      "size": 7040,
      "checksum": "SHA-256:3208dd50ecb188005484c3cf196b1746b3787d2c9d2812c040c91dbda06d68f4"
    },
    {
      "name": "Adafruit HTU21DF Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the HTU21D-F sensors in the Adafruit shop",
      "paragraph": "Arduino library for the HTU21D-F sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit_HTU21DF_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_HTU21DF_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_HTU21DF_Library-1.0.0.zip",
      "size": 3673,
      "checksum": "SHA-256:ac233f97e03e4f169238ba679fe99ed552fb020374ea45de4d77bf321b3d8468"
    },
    {
      "name": "Adafruit HX8340B",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit 2.2\" TFT with SPI interface and microSD card holder",
      "paragraph": "Adafruit 2.2\" TFT with SPI interface and microSD card holder",
      "website": "https://github.com/adafruit/Adafruit-HX8340B",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_HX8340B-1.0.0.zip",
      "archiveFileName": "Adafruit_HX8340B-1.0.0.zip",
      "size": 212923,
      "checksum": "SHA-256:791182277b93f6488a5878c5d8dc398409faf826d606c89c21b1e6f5f685320a"
    },
    {
      "name": "Adafruit HX8357 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit HX8357 3.5\" display library.",
      "paragraph": "Adafruit HX8357 3.5\" display library.",
      "website": "https://github.com/adafruit/Adafruit_HX8357_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_HX8357_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_HX8357_Library-1.0.0.zip",
      "size": 316183,
      "checksum": "SHA-256:4f921974fdb45bd763938ed4080248ca5b066dc6e90e3540bb6fd7aad4e8cd3c"
    },
    {
      "name": "Adafruit HX8357 Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit HX8357 3.5\" display library.",
      "paragraph": "Adafruit HX8357 3.5\" display library.",
      "website": "https://github.com/adafruit/Adafruit_HX8357_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_HX8357_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_HX8357_Library-1.0.1.zip",
      "size": 316243,
      "checksum": "SHA-256:83c2e158353811a16ea5558aeb3ed892d82d6a13be2356c374510842c3f96ce8"
    },
    {
      "name": "Adafruit ILI9340",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for the Adafruit 2.2\" SPI display.",
      "paragraph": "This is a library for the Adafruit 2.2\" SPI display.",
      "website": "https://github.com/adafruit/Adafruit_ILI9340",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_ILI9340-1.0.0.zip",
      "archiveFileName": "Adafruit_ILI9340-1.0.0.zip",
      "size": 72632,
      "checksum": "SHA-256:d1495b3f8d7010e2badb5f6c2dc8234482e9eed603bb59e3db0f1d604e4c88b5"
    },
    {
      "name": "Adafruit ILI9341",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for Adafruit ILI9341 displays",
      "paragraph": "Library for Adafruit ILI9341 displays",
      "website": "https://github.com/adafruit/Adafruit_ILI9341",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_ILI9341-1.0.0.zip",
      "archiveFileName": "Adafruit_ILI9341-1.0.0.zip",
      "size": 19194,
      "checksum": "SHA-256:312ebcb65c8440cf1b14e4fd9deac5d6f12d71650fdf196e4762c750f6c73ae6"
    },
    {
      "name": "Adafruit ILI9341",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for Adafruit ILI9341 displays",
      "paragraph": "Library for Adafruit ILI9341 displays",
      "website": "https://github.com/adafruit/Adafruit_ILI9341",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_ILI9341-1.0.1.zip",
      "archiveFileName": "Adafruit_ILI9341-1.0.1.zip",
      "size": 19260,
      "checksum": "SHA-256:37c44eed56ebee9f8a6dd2e2627f09e09f063b2b74210ccc54c385a09972e5cc"
    },
    {
      "name": "Adafruit INA219",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "INA219 Current Sensor",
      "paragraph": "INA219 Current Sensor",
      "website": "https://github.com/adafruit/Adafruit_INA219",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_INA219-1.0.0.zip",
      "archiveFileName": "Adafruit_INA219-1.0.0.zip",
      "size": 7074,
      "checksum": "SHA-256:05aba42bdb2103b5c460488f9086696a7b79cee944617b1c9504fe80183d34ed"
    },
    {
      "name": "Adafruit L3GD20",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for Adafruit's L3GD20 I2C Gyroscope Breakout",
      "paragraph": "Driver for Adafruit's L3GD20 I2C Gyroscope Breakout",
      "website": "https://github.com/adafruit/Adafruit_L3GD20",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_L3GD20-1.0.0.zip",
      "archiveFileName": "Adafruit_L3GD20-1.0.0.zip",
      "size": 6215,
      "checksum": "SHA-256:ec58b8e3bc21a6fd4b7cee67763c937980942cab9b2800acd37de42e7bf80b43"
    },
    {
      "name": "Adafruit L3GD20 U",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor driver for the L3GD20 Gyroscope",
      "paragraph": "Unified sensor driver for the L3GD20 Gyroscope",
      "website": "https://github.com/adafruit/Adafruit_L3GD20_U",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_L3GD20_U-1.0.0.zip",
      "archiveFileName": "Adafruit_L3GD20_U-1.0.0.zip",
      "size": 7486,
      "checksum": "SHA-256:4b56ec1e60b6096fb028d1cba2cbd739517517c92759756d6ef5f46244410721"
    },
    {
      "name": "Adafruit LED Backpack Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "paragraph": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "website": "https://github.com/adafruit/Adafruit-LED-Backpack-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_LED_Backpack_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_LED_Backpack_Library-1.0.0.zip",
      "size": 63198,
      "checksum": "SHA-256:7e893b6a6ddbe44baa9aaac31aebfeefaebdec2827b2b73f1322cf26f3b2d4d0"
    },
    {
      "name": "Adafruit LED Backpack Library",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "paragraph": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "website": "https://github.com/adafruit/Adafruit-LED-Backpack-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_LED_Backpack_Library-1.1.0.zip",
      "archiveFileName": "Adafruit_LED_Backpack_Library-1.1.0.zip",
      "size": 68044,
      "checksum": "SHA-256:3b69b663d1bde1e7a6b4d7187499ab43d7dd617bdf478781ead9d5901c907102"
    },
    {
      "name": "Adafruit LED Backpack Library",
      "version": "1.1.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "paragraph": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "website": "https://github.com/adafruit/Adafruit-LED-Backpack-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_LED_Backpack_Library-1.1.1.zip",
      "archiveFileName": "Adafruit_LED_Backpack_Library-1.1.1.zip",
      "size": 69112,
      "checksum": "SHA-256:992fc896c7ce48e28e227cab721a1b09d338557d05b0ce0a9690d53f0fe16686"
    },
    {
      "name": "Adafruit LED Backpack Library",
      "version": "1.1.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "paragraph": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "website": "https://github.com/adafruit/Adafruit-LED-Backpack-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_LED_Backpack_Library-1.1.2.zip",
      "archiveFileName": "Adafruit_LED_Backpack_Library-1.1.2.zip",
      "size": 69146,
      "checksum": "SHA-256:3e5c3adc95734d1d096b37ac503581ed97de32b301ef2a7e321de29bf53c1afa"
    },
    {
      "name": "Adafruit LSM303DLHC",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor driver for Adafruit's LSM303 Breakout (Accelerometer + Magnetometer)",
      "paragraph": "Unified sensor driver for Adafruit's LSM303 Breakout (Accelerometer + Magnetometer)",
      "website": "https://github.com/adafruit/Adafruit_LSM303DLHC",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_LSM303DLHC-1.0.0.zip",
      "archiveFileName": "Adafruit_LSM303DLHC-1.0.0.zip",
      "size": 8553,
      "checksum": "SHA-256:a5844d8208ec199e80736e89f1ccf1b647cb1e9c910616aa460478ede595b3f8"
    },
    {
      "name": "Adafruit LSM303",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for Adafruit's LSM303DLHC 9-DOF breakout",
      "paragraph": "Driver for Adafruit's LSM303DLHC 9-DOF breakout",
      "website": "https://github.com/adafruit/Adafruit_LSM303",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_LSM303-1.0.0.zip",
      "archiveFileName": "Adafruit_LSM303-1.0.0.zip",
      "size": 4344,
      "checksum": "SHA-256:2558d5c27e77296a14c905cd9c1449d76b843a9ceae3b0e3a42384311922f575"
    },
    {
      "name": "Adafruit LSM9DS0 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for LSM9DS0 9-DOF sensor board.",
      "paragraph": "Arduino library for LSM9DS0 9-DOF sensor board.",
      "website": "https://github.com/adafruit/Adafruit_LSM9DS0_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_LSM9DS0_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_LSM9DS0_Library-1.0.0.zip",
      "size": 10897,
      "checksum": "SHA-256:069b2081670ec4257a047f6f32246f99138a7b8e0aa3a692a33f0b64b302ca84"
    },
    {
      "name": "Adafruit LSM9DS0 Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for LSM9DS0 9-DOF sensor board.",
      "paragraph": "Arduino library for LSM9DS0 9-DOF sensor board.",
      "website": "https://github.com/adafruit/Adafruit_LSM9DS0_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_LSM9DS0_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_LSM9DS0_Library-1.0.1.zip",
      "size": 10962,
      "checksum": "SHA-256:2f25af41469be0aa2134384d1beba4e428dbc7c6feeb50516773e1595c271f90"
    },
    {
      "name": "Adafruit MAX31855 library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit Thermocouple breakout with MAX31855K",
      "paragraph": "Library for the Adafruit Thermocouple breakout with MAX31855K",
      "website": "https://github.com/adafruit/Adafruit-MAX31855-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MAX31855_library-1.0.0.zip",
      "archiveFileName": "Adafruit_MAX31855_library-1.0.0.zip",
      "size": 6970,
      "checksum": "SHA-256:8bf7b69bd2219f48a9dc0c825595124b34be196bf9618108d1beab7079c026f8"
    },
    {
      "name": "Adafruit MAX31855 library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit Thermocouple breakout with MAX31855K",
      "paragraph": "Library for the Adafruit Thermocouple breakout with MAX31855K",
      "website": "https://github.com/adafruit/Adafruit-MAX31855-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MAX31855_library-1.0.1.zip",
      "archiveFileName": "Adafruit_MAX31855_library-1.0.1.zip",
      "size": 7007,
      "checksum": "SHA-256:9f67a07d5dad802d503bd8c5d45320063b464b86061987765680bfa8ad063e3d"
    },
    {
      "name": "Adafruit MCP23008 library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino Library for the MCP23008 (and '9) I2C I/O expander",
      "paragraph": "Arduino Library for the MCP23008 (and '9) I2C I/O expander",
      "website": "https://github.com/adafruit/Adafruit-MCP23008-library",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MCP23008_library-1.0.0.zip",
      "archiveFileName": "Adafruit_MCP23008_library-1.0.0.zip",
      "size": 4741,
      "checksum": "SHA-256:fb908ea3dd1280b0e28617df94b6ae68d75a89cbb1b87d53822520bf1bc96183"
    },
    {
      "name": "Adafruit MCP23008 library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino Library for the MCP23008 (and '9) I2C I/O expander",
      "paragraph": "Arduino Library for the MCP23008 (and '9) I2C I/O expander",
      "website": "https://github.com/adafruit/Adafruit-MCP23008-library",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MCP23008_library-1.0.1.zip",
      "archiveFileName": "Adafruit_MCP23008_library-1.0.1.zip",
      "size": 4776,
      "checksum": "SHA-256:0b8b7a467b463c79ffaa64398c6dd4b25bfe9527f64b25b55ecae27a2a6fbcf1"
    },
    {
      "name": "Adafruit MCP23017 Arduino Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the MCP23017 I2C Port Expander",
      "paragraph": "Library for the MCP23017 I2C Port Expander",
      "website": "https://github.com/adafruit/Adafruit-MCP23017-Arduino-Library",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MCP23017_Arduino_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_MCP23017_Arduino_Library-1.0.0.zip",
      "size": 9448,
      "checksum": "SHA-256:69c9912511afb900030766bfdf6a00490c553d72e5a45c7c62c9f7a4982a76d2"
    },
    {
      "name": "Adafruit MCP23017 Arduino Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the MCP23017 I2C Port Expander",
      "paragraph": "Library for the MCP23017 I2C Port Expander",
      "website": "https://github.com/adafruit/Adafruit-MCP23017-Arduino-Library",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MCP23017_Arduino_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_MCP23017_Arduino_Library-1.0.1.zip",
      "size": 9465,
      "checksum": "SHA-256:52057c8720970bd8e0b1cd9125cda3f86c2ac471cbf117ee767b772d65b5105c"
    },
    {
      "name": "Adafruit MCP4725",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MCP4725 12-bit I2C DAC",
      "paragraph": "MCP4725 12-bit I2C DAC",
      "website": "https://github.com/adafruit/Adafruit_MCP4725",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MCP4725-1.0.0.zip",
      "archiveFileName": "Adafruit_MCP4725-1.0.0.zip",
      "size": 27899,
      "checksum": "SHA-256:b27ebb358326a9e5dee1c30f94f250327c1d887bbf766806e25254fd247fec34"
    },
    {
      "name": "Adafruit MCP4725",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MCP4725 12-bit I2C DAC",
      "paragraph": "MCP4725 12-bit I2C DAC",
      "website": "https://github.com/adafruit/Adafruit_MCP4725",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MCP4725-1.0.1.zip",
      "archiveFileName": "Adafruit_MCP4725-1.0.1.zip",
      "size": 27903,
      "checksum": "SHA-256:a086ac7a5a2833b68a42d1d74543332b2f24483911be84933856ac072b0716fe"
    },
    {
      "name": "Adafruit MCP4725",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MCP4725 12-bit I2C DAC",
      "paragraph": "MCP4725 12-bit I2C DAC",
      "website": "https://github.com/adafruit/Adafruit_MCP4725",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MCP4725-1.0.2.zip",
      "archiveFileName": "Adafruit_MCP4725-1.0.2.zip",
      "size": 27915,
      "checksum": "SHA-256:81f3309d2e61428c2208f8514186fbf715f041b9bb1837ef12ec314ed78a9fde"
    },
    {
      "name": "Adafruit MCP9808 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the MCP9808 sensors in the Adafruit shop",
      "paragraph": "Arduino library for the MCP9808 sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit_MCP9808_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MCP9808_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_MCP9808_Library-1.0.0.zip",
      "size": 5184,
      "checksum": "SHA-256:d0a86f0e21868f7b7296c6c832f7b2184976b2ccac59eb6b2f3cd0d265347ded"
    },
    {
      "name": "Adafruit MiniMLX90614",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A simplified MLX90614 library for use with the Trinket/Gemma",
      "paragraph": "A simplified MLX90614 library for use with the Trinket/Gemma",
      "website": "https://github.com/adafruit/Adafruit_MiniMLX90614",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MiniMLX90614-1.0.0.zip",
      "archiveFileName": "Adafruit_MiniMLX90614-1.0.0.zip",
      "size": 4641,
      "checksum": "SHA-256:14362115d9386df499609496001d53934a16e9a8f6141118773bebe9739ac9e6"
    },
    {
      "name": "Adafruit MLX90614 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the MLX90614 sensors in the Adafruit shop",
      "paragraph": "Arduino library for the MLX90614 sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit-MLX90614-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MLX90614_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_MLX90614_Library-1.0.0.zip",
      "size": 3832,
      "checksum": "SHA-256:360607293879e5fa1822271caace49d96510203332a39c5ad0113e4d4a3c0595"
    },
    {
      "name": "Adafruit MMA8451 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the MMA8451 Accelerometer sensors in the Adafruit shop",
      "paragraph": "Arduino library for the MMA8451 Accelerometer sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit_MMA8451_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MMA8451_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_MMA8451_Library-1.0.0.zip",
      "size": 7252,
      "checksum": "SHA-256:b4f8c3c77c772a53676c204bd732c8a0bafdc9d472694ffec98e6b55fe090449"
    },
    {
      "name": "Adafruit Motor Shield library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit Motor shield V1 firmware with basic Microstepping support. Works with all Arduinos and the Mega",
      "paragraph": "Adafruit Motor shield V1 firmware with basic Microstepping support. Works with all Arduinos and the Mega",
      "website": "https://github.com/adafruit/Adafruit-Motor-Shield-library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_Motor_Shield_library-1.0.0.zip",
      "archiveFileName": "Adafruit_Motor_Shield_library-1.0.0.zip",
      "size": 10820,
      "checksum": "SHA-256:341c443de3553fa9368021f64b77097b228b7dde4c00ffc06b31d84e9beb213a"
    },
    {
      "name": "Adafruit Motor Shield V2 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit Motor Shield V2 for Arduino. It supports DC motors \u0026 stepper motors with microstepping as well as stacking-support.",
      "paragraph": "Library for the Adafruit Motor Shield V2 for Arduino. It supports DC motors \u0026 stepper motors with microstepping as well as stacking-support.",
      "website": "https://github.com/adafruit/Adafruit_Motor_Shield_V2_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_Motor_Shield_V2_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_Motor_Shield_V2_Library-1.0.0.zip",
      "size": 16157,
      "checksum": "SHA-256:7772d09ce227a24cb887ea867cd46947ab6ff832544d0f201a1020c7d5fcbc8e"
    },
    {
      "name": "Adafruit Motor Shield V2 Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit Motor Shield V2 for Arduino. It supports DC motors \u0026 stepper motors with microstepping as well as stacking-support.",
      "paragraph": "Library for the Adafruit Motor Shield V2 for Arduino. It supports DC motors \u0026 stepper motors with microstepping as well as stacking-support.",
      "website": "https://github.com/adafruit/Adafruit_Motor_Shield_V2_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_Motor_Shield_V2_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_Motor_Shield_V2_Library-1.0.1.zip",
      "size": 16113,
      "checksum": "SHA-256:9188e211e51f047b95830f20a589de245c7c82717bbbae6363767af991d3959c"
    },
    {
      "name": "Adafruit Motor Shield V2 Library",
      "version": "1.0.4",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit Motor Shield V2 for Arduino. It supports DC motors \u0026 stepper motors with microstepping as well as stacking-support.",
      "paragraph": "Library for the Adafruit Motor Shield V2 for Arduino. It supports DC motors \u0026 stepper motors with microstepping as well as stacking-support.",
      "website": "https://github.com/adafruit/Adafruit_Motor_Shield_V2_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_Motor_Shield_V2_Library-1.0.4.zip",
      "archiveFileName": "Adafruit_Motor_Shield_V2_Library-1.0.4.zip",
      "size": 16530,
      "checksum": "SHA-256:769e1b4f4eb8a5b5c63564134d2f1f6eb7ac09191d002789733584fdf5cb5817"
    },
    {
      "name": "Adafruit MPL115A2",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for the Adafruit MPL115A2 barometric pressure sensor breakout",
      "paragraph": "Driver for the Adafruit MPL115A2 barometric pressure sensor breakout",
      "website": "https://github.com/adafruit/Adafruit_MPL115A2",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MPL115A2-1.0.0.zip",
      "archiveFileName": "Adafruit_MPL115A2-1.0.0.zip",
      "size": 5150,
      "checksum": "SHA-256:89eced1412a49dfde723764f3988352465e85bc8799e9d2077c99c1d3cb0b159"
    },
    {
      "name": "Adafruit MPL3115A2 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the MPL3115A2 sensors in the Adafruit shop",
      "paragraph": "Arduino library for the MPL3115A2 sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit_MPL3115A2_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MPL3115A2_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_MPL3115A2_Library-1.0.0.zip",
      "size": 5736,
      "checksum": "SHA-256:749195a3df0a1acdd76680a844425237bdf4f6c6e28541f798748f53736daa14"
    },
    {
      "name": "Adafruit MPR121",
      "version": "1.0.0",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the MPR121-based capacitive sensors in the Adafruit shop.",
      "paragraph": "Designed specifically to work with the MPR121 Breakout in the Adafruit shop.",
      "website": "https://github.com/adafruit/Adafruit_MPR121_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MPR121-1.0.0.zip",
      "archiveFileName": "Adafruit_MPR121-1.0.0.zip",
      "size": 5425,
      "checksum": "SHA-256:0481f54e93e8613d32b2c9d8d0055a096a60a6291e2a190664b30b91a3063136"
    },
    {
      "name": "Adafruit NeoMatrix",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit_GFX-compatible library for NeoPixel grids",
      "paragraph": "Adafruit_GFX-compatible library for NeoPixel grids",
      "website": "https://github.com/adafruit/Adafruit_NeoMatrix",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_NeoMatrix-1.0.0.zip",
      "archiveFileName": "Adafruit_NeoMatrix-1.0.0.zip",
      "size": 22629,
      "checksum": "SHA-256:553389d786b35bb100dd5edab7cdc94be582701c906aa6a3193f1232dd3a2242"
    },
    {
      "name": "Adafruit NeoMatrix",
      "version": "1.1.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit_GFX-compatible library for NeoPixel grids",
      "paragraph": "Adafruit_GFX-compatible library for NeoPixel grids",
      "website": "https://github.com/adafruit/Adafruit_NeoMatrix",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_NeoMatrix-1.1.1.zip",
      "archiveFileName": "Adafruit_NeoMatrix-1.1.1.zip",
      "size": 23120,
      "checksum": "SHA-256:a872ac1c4522bffe073dc6520e0b773b47ddbfdf9cabf1716a5b0c621b958fe1"
    },
    {
      "name": "Adafruit NeoMatrix",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit_GFX-compatible library for NeoPixel grids",
      "paragraph": "Adafruit_GFX-compatible library for NeoPixel grids",
      "website": "https://github.com/adafruit/Adafruit_NeoMatrix",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_NeoMatrix-1.0.1.zip",
      "archiveFileName": "Adafruit_NeoMatrix-1.0.1.zip",
      "size": 22675,
      "checksum": "SHA-256:38a82a669fab08972c3476bd93b4aabdb5afcce831215f4fc4cb94a56594f380"
    },
    {
      "name": "Adafruit NeoMatrix",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit_GFX-compatible library for NeoPixel grids",
      "paragraph": "Adafruit_GFX-compatible library for NeoPixel grids",
      "website": "https://github.com/adafruit/Adafruit_NeoMatrix",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_NeoMatrix-1.1.0.zip",
      "archiveFileName": "Adafruit_NeoMatrix-1.1.0.zip",
      "size": 23118,
      "checksum": "SHA-256:0427813104b17581289b13c7c0c259b8a058b12da584a3ffd0d792fc9a791cf5"
    },
    {
      "name": "Adafruit NeoMatrix",
      "version": "1.1.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit_GFX-compatible library for NeoPixel grids",
      "paragraph": "Adafruit_GFX-compatible library for NeoPixel grids",
      "website": "https://github.com/adafruit/Adafruit_NeoMatrix",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_NeoMatrix-1.1.2.zip",
      "archiveFileName": "Adafruit_NeoMatrix-1.1.2.zip",
      "size": 23161,
      "checksum": "SHA-256:4debfd94b414b80b678368365362e50de73eaaa976f2c64dcfdfda0d381ab21d"
    },
    {
      "name": "Adafruit NeoPixel",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "paragraph": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "website": "https://github.com/adafruit/Adafruit_NeoPixel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_NeoPixel-1.0.0.zip",
      "archiveFileName": "Adafruit_NeoPixel-1.0.0.zip",
      "size": 30117,
      "checksum": "SHA-256:14f3d3348be39c82b43d78f2c5793b392028244d94a89fb907590f03a8e38df3"
    },
    {
      "name": "Adafruit NeoPixel",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "paragraph": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "website": "https://github.com/adafruit/Adafruit_NeoPixel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_NeoPixel-1.0.1.zip",
      "archiveFileName": "Adafruit_NeoPixel-1.0.1.zip",
      "size": 31544,
      "checksum": "SHA-256:9d11a803262ad3bc87faf4bc171c9690f336c3287d5ae29aaeefdcd58046fac0"
    },
    {
      "name": "Adafruit NeoPixel",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "paragraph": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "website": "https://github.com/adafruit/Adafruit_NeoPixel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_NeoPixel-1.0.2.zip",
      "archiveFileName": "Adafruit_NeoPixel-1.0.2.zip",
      "size": 31930,
      "checksum": "SHA-256:6f36f05b045808b6fafba71bfa1d5fd9399afa4b08a57393deaa73b1e5b74b41"
    },
    {
      "name": "Adafruit NeoPixel",
      "version": "1.0.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "paragraph": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "website": "https://github.com/adafruit/Adafruit_NeoPixel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_NeoPixel-1.0.3.zip",
      "archiveFileName": "Adafruit_NeoPixel-1.0.3.zip",
      "size": 34644,
      "checksum": "SHA-256:0ce33bcd237ee4650e4d1c2c1ca77b2389248d47d76abce08ef95b313f7e489c"
    },
    {
      "name": "Adafruit NeoPixel",
      "version": "1.0.4",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "paragraph": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "website": "https://github.com/adafruit/Adafruit_NeoPixel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_NeoPixel-1.0.4.zip",
      "archiveFileName": "Adafruit_NeoPixel-1.0.4.zip",
      "size": 30425,
      "checksum": "SHA-256:8da248b8b976b18df853fdd1477101044c309f053f8e790b8ce17b0c72bdd247"
    },
    {
      "name": "Adafruit nRF8001",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Drivers for Adafruit's nRF8001 Bluetooth Low Energy Breakout",
      "paragraph": "Drivers for Adafruit's nRF8001 Bluetooth Low Energy Breakout",
      "website": "https://github.com/adafruit/Adafruit_nRF8001",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_nRF8001-1.0.0.zip",
      "archiveFileName": "Adafruit_nRF8001-1.0.0.zip",
      "size": 58528,
      "checksum": "SHA-256:7169f4dd5f216202bbb7836d5950eea0cae16a759308564a7b09d017cad73aad"
    },
    {
      "name": "Adafruit PCD8544 Nokia 5110 LCD library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino driver for PC8544, most commonly found in small Nokia 5110's",
      "paragraph": "Arduino driver for PC8544, most commonly found in small Nokia 5110's",
      "website": "https://github.com/adafruit/Adafruit-PCD8544-Nokia-5110-LCD-library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_PCD8544_Nokia_5110_LCD_library-1.0.0.zip",
      "archiveFileName": "Adafruit_PCD8544_Nokia_5110_LCD_library-1.0.0.zip",
      "size": 9737,
      "checksum": "SHA-256:ed8379e8c5ed1e923f41a3a9ac1a974a3234c6b067c31a028435ab3de70d0dea"
    },
    {
      "name": "Adafruit PN532",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for SPI and I2C access to the PN532 RFID/Near Field Communication chip",
      "paragraph": "Arduino library for SPI and I2C access to the PN532 RFID/Near Field Communication chip",
      "website": "https://github.com/adafruit/Adafruit-PN532",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_PN532-1.0.0.zip",
      "archiveFileName": "Adafruit_PN532-1.0.0.zip",
      "size": 53174,
      "checksum": "SHA-256:0e4bb04e8ca4ccebae892e6d89e3d8fe3fe3f02874a52fa676c9ddbc6c96487d"
    },
    {
      "name": "Adafruit PS2 Trackpad",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "PS2 library for Adafruit capacitive trackpads",
      "paragraph": "PS2 library for Adafruit capacitive trackpads",
      "website": "https://github.com/adafruit/Adafruit-PS2-Trackpad",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_PS2_Trackpad-1.0.0.zip",
      "archiveFileName": "Adafruit_PS2_Trackpad-1.0.0.zip",
      "size": 5533,
      "checksum": "SHA-256:82d9e8b4bb0584675f18a3cfaa1af5e6e3ab73f1fc31da4264036f574d8399ea"
    },
    {
      "name": "Adafruit PWM Servo Driver Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit PWM Servo Driver Library",
      "paragraph": "Adafruit PWM Servo Driver Library",
      "website": "https://github.com/adafruit/Adafruit-PWM-Servo-Driver-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_PWM_Servo_Driver_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_PWM_Servo_Driver_Library-1.0.0.zip",
      "size": 7366,
      "checksum": "SHA-256:45417e46d6f2c43e967969b0b556bd84a8f1bf824c2839937a63bc4492a011e0"
    },
    {
      "name": "Adafruit RA8875",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit's Arduino driver for the RA8875 TFT driver",
      "paragraph": "Adafruit's Arduino driver for the RA8875 TFT driver",
      "website": "https://github.com/adafruit/Adafruit_RA8875",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_RA8875-1.0.0.zip",
      "archiveFileName": "Adafruit_RA8875-1.0.0.zip",
      "size": 77178,
      "checksum": "SHA-256:6326407ef4172881ca023dc3bb597d0d59b5b1ba651a313de15a1b93233a5eb3"
    },
    {
      "name": "Adafruit RA8875",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit's Arduino driver for the RA8875 TFT driver",
      "paragraph": "Adafruit's Arduino driver for the RA8875 TFT driver",
      "website": "https://github.com/adafruit/Adafruit_RA8875",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_RA8875-1.0.1.zip",
      "archiveFileName": "Adafruit_RA8875-1.0.1.zip",
      "size": 77195,
      "checksum": "SHA-256:0d19f582dded011a42053c4bbd7b44b3cfae896e5e72c5fb02a0606a314fde7f"
    },
    {
      "name": "Adafruit RA8875",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit's Arduino driver for the RA8875 TFT driver",
      "paragraph": "Adafruit's Arduino driver for the RA8875 TFT driver",
      "website": "https://github.com/adafruit/Adafruit_RA8875",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_RA8875-1.0.2.zip",
      "archiveFileName": "Adafruit_RA8875-1.0.2.zip",
      "size": 77200,
      "checksum": "SHA-256:1539f5d4a65e200b34238e4916f2986d0b9fe288bea974d74c22e1596445f2c9"
    },
    {
      "name": "Adafruit RGB LCD Shield Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit RGB 16x2 LCD Shield.",
      "paragraph": "Library for the Adafruit RGB 16x2 LCD Shield.",
      "website": "https://github.com/adafruit/Adafruit-RGB-LCD-Shield-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_RGB_LCD_Shield_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_RGB_LCD_Shield_Library-1.0.0.zip",
      "size": 11712,
      "checksum": "SHA-256:13454c875813065289367fe47c68bb7213013ac47075560e51ab35c8bb4e36e5"
    },
    {
      "name": "Adafruit RGB LCD Shield Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit RGB 16x2 LCD Shield.",
      "paragraph": "Library for the Adafruit RGB 16x2 LCD Shield.",
      "website": "https://github.com/adafruit/Adafruit-RGB-LCD-Shield-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_RGB_LCD_Shield_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_RGB_LCD_Shield_Library-1.0.1.zip",
      "size": 11746,
      "checksum": "SHA-256:e27df00f07a913f3b5aa29b59773fc75223c2dcbf4f8b739c0fd11da92460a34"
    },
    {
      "name": "Adafruit SHARP Memory Display",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is an Arduino library for the Adafruit Monochrome SHARP Memory Displays",
      "paragraph": "This is an Arduino library for the Adafruit Monochrome SHARP Memory Displays",
      "website": "https://github.com/adafruit/Adafruit_SHARP_Memory_Display",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_SHARP_Memory_Display-1.0.0.zip",
      "archiveFileName": "Adafruit_SHARP_Memory_Display-1.0.0.zip",
      "size": 6184,
      "checksum": "SHA-256:5b0740d95af4fafc4468a7a4e61dd131558e39748c871ee1cef361d8426b4091"
    },
    {
      "name": "Adafruit SHARP Memory Display",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is an Arduino library for the Adafruit Monochrome SHARP Memory Displays",
      "paragraph": "This is an Arduino library for the Adafruit Monochrome SHARP Memory Displays",
      "website": "https://github.com/adafruit/Adafruit_SHARP_Memory_Display",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_SHARP_Memory_Display-1.0.1.zip",
      "archiveFileName": "Adafruit_SHARP_Memory_Display-1.0.1.zip",
      "size": 6215,
      "checksum": "SHA-256:00c4af76a22d3a8a922d1700123ddcfc890b0ee02930ba1c86a91a7e31448a19"
    },
    {
      "name": "Adafruit SHARP Memory Display",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is an Arduino library for the Adafruit Monochrome SHARP Memory Displays",
      "paragraph": "This is an Arduino library for the Adafruit Monochrome SHARP Memory Displays",
      "website": "https://github.com/adafruit/Adafruit_SHARP_Memory_Display",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_SHARP_Memory_Display-1.0.2.zip",
      "archiveFileName": "Adafruit_SHARP_Memory_Display-1.0.2.zip",
      "size": 6285,
      "checksum": "SHA-256:3745164ce4038baba54b512543f53f89ce190300f1d4490384787b394ac2134f"
    },
    {
      "name": "Adafruit SI1145 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the SI1145 sensors in the Adafruit shop",
      "paragraph": "Arduino library for the SI1145 sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit_SI1145_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_SI1145_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_SI1145_Library-1.0.0.zip",
      "size": 5494,
      "checksum": "SHA-256:1c09ea0228b36cf75f3696a94849721e75149999d9c0357ef67c218847f97b0e"
    },
    {
      "name": "Adafruit Si4713 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Si4714 FM+RDS Transmitter in the Adafruit shop",
      "paragraph": "Arduino library for the Si4714 FM+RDS Transmitter in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit-Si4713-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_Si4713_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_Si4713_Library-1.0.0.zip",
      "size": 7388,
      "checksum": "SHA-256:9989bf45dc2c5d4adf95ddeaf7827a98d4c7ef39bbcb0360ad182dad25ba8af3"
    },
    {
      "name": "Adafruit Si5351 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for Adafruit's Si5351 Clockgen Breakout",
      "paragraph": "Driver for Adafruit's Si5351 Clockgen Breakout",
      "website": "https://github.com/adafruit/Adafruit_Si5351_Library",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_Si5351_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_Si5351_Library-1.0.0.zip",
      "size": 14033,
      "checksum": "SHA-256:43db0157fb3e3ae8b48bf14553814e5b2641d0eeef48755030d2e8019169b305"
    },
    {
      "name": "Adafruit Si5351 Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for Adafruit's Si5351 Clockgen Breakout",
      "paragraph": "Driver for Adafruit's Si5351 Clockgen Breakout",
      "website": "https://github.com/adafruit/Adafruit_Si5351_Library",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_Si5351_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_Si5351_Library-1.0.1.zip",
      "size": 14035,
      "checksum": "SHA-256:a0f3c6b46830a158b4afabae3b8c729995d5888586960843fc49053a8aecb6a9"
    },
    {
      "name": "Adafruit SoftServo",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A lightweight software servo library, designed for Trinket/Gemma but good for other Arduino-compats",
      "paragraph": "A lightweight software servo library, designed for Trinket/Gemma but good for other Arduino-compats",
      "website": "https://github.com/adafruit/Adafruit_SoftServo",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_SoftServo-1.0.0.zip",
      "archiveFileName": "Adafruit_SoftServo-1.0.0.zip",
      "size": 3066,
      "checksum": "SHA-256:a756f27537da52386da7253de7def7a28ee41be67f65f46e94bd52280df8c20b"
    },
    {
      "name": "Adafruit Soundboard library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino Library for UART control of the Adafruit Soundboard",
      "paragraph": "Arduino Library for UART control of the Adafruit Soundboard",
      "website": "https://github.com/adafruit/Adafruit_Soundboard_library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_Soundboard_library-1.0.0.zip",
      "archiveFileName": "Adafruit_Soundboard_library-1.0.0.zip",
      "size": 6237,
      "checksum": "SHA-256:f12b52846f74593292ab97125005cbefdca2e2860883f055fd0a43bbb50c95d7"
    },
    {
      "name": "Adafruit SSD1306",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "SSD1306 oled driver library for 'monochrome' 128x64 and 128x32 OLEDs!",
      "paragraph": "SSD1306 oled driver library for 'monochrome' 128x64 and 128x32 OLEDs!",
      "website": "https://github.com/adafruit/Adafruit_SSD1306",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_SSD1306-1.0.0.zip",
      "archiveFileName": "Adafruit_SSD1306-1.0.0.zip",
      "size": 20367,
      "checksum": "SHA-256:613e40865e45bbc37dd94626735eccee42621c54fa3ec0da93b9b08960d31f5b"
    },
    {
      "name": "Adafruit SSD1306",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "SSD1306 oled driver library for 'monochrome' 128x64 and 128x32 OLEDs!",
      "paragraph": "SSD1306 oled driver library for 'monochrome' 128x64 and 128x32 OLEDs!",
      "website": "https://github.com/adafruit/Adafruit_SSD1306",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_SSD1306-1.0.1.zip",
      "archiveFileName": "Adafruit_SSD1306-1.0.1.zip",
      "size": 21306,
      "checksum": "SHA-256:2c8ced3507f02b501b51264a7e3a3645f2d2b6f2a431cb03532a7dd342e6006b"
    },
    {
      "name": "Adafruit SSD1306",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "SSD1306 oled driver library for 'monochrome' 128x64 and 128x32 OLEDs!",
      "paragraph": "SSD1306 oled driver library for 'monochrome' 128x64 and 128x32 OLEDs!",
      "website": "https://github.com/adafruit/Adafruit_SSD1306",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_SSD1306-1.1.0.zip",
      "archiveFileName": "Adafruit_SSD1306-1.1.0.zip",
      "size": 21166,
      "checksum": "SHA-256:3f9a8e2b95c4f216ea3194a40e3541bc62dd7200be8fcd37b9c523a89f438593"
    },
    {
      "name": "Adafruit SSD1331 OLED Driver Library for Arduino",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "For 0.96\" OLEDs in the Adafruit shop",
      "paragraph": "For 0.96\" OLEDs in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit-SSD1331-OLED-Driver-Library-for-Arduino",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_SSD1331_OLED_Driver_Library_for_Arduino-1.0.0.zip",
      "archiveFileName": "Adafruit_SSD1331_OLED_Driver_Library_for_Arduino-1.0.0.zip",
      "size": 29688,
      "checksum": "SHA-256:d6362f0a7ccfc5a388d0a04a439231d894838c4254072132b15baf112fec6d4e"
    },
    {
      "name": "Adafruit SSD1331 OLED Driver Library for Arduino",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "For 0.96\" OLEDs in the Adafruit shop",
      "paragraph": "For 0.96\" OLEDs in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit-SSD1331-OLED-Driver-Library-for-Arduino",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_SSD1331_OLED_Driver_Library_for_Arduino-1.0.1.zip",
      "archiveFileName": "Adafruit_SSD1331_OLED_Driver_Library_for_Arduino-1.0.1.zip",
      "size": 29707,
      "checksum": "SHA-256:4dd61f3d189decc1cacb2b08407b8880163e40952ea4a852dcea6bb7e2f6f70a"
    },
    {
      "name": "Adafruit SSD1351 library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit library for the 1.27\" and 1.5\" color OLEDs in the shop",
      "paragraph": "Adafruit library for the 1.27\" and 1.5\" color OLEDs in the shop",
      "website": "https://github.com/adafruit/Adafruit-SSD1351-library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_SSD1351_library-1.0.0.zip",
      "archiveFileName": "Adafruit_SSD1351_library-1.0.0.zip",
      "size": 105684,
      "checksum": "SHA-256:cbeb2032aad861e5137bd72ae3146467dddf6ff0a571ff0de41703b2dc1d41bf"
    },
    {
      "name": "Adafruit SSD1351 library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit library for the 1.27\" and 1.5\" color OLEDs in the shop",
      "paragraph": "Adafruit library for the 1.27\" and 1.5\" color OLEDs in the shop",
      "website": "https://github.com/adafruit/Adafruit-SSD1351-library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_SSD1351_library-1.0.1.zip",
      "archiveFileName": "Adafruit_SSD1351_library-1.0.1.zip",
      "size": 105700,
      "checksum": "SHA-256:83026ab59f7f9fc99d7041c8012ea4a188db684e2567febbe22a852246d82a71"
    },
    {
      "name": "Adafruit ST7735 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for the Adafruit 1.8\" SPI displays.",
      "paragraph": "This is a library for the Adafruit 1.8\" SPI displays.",
      "website": "https://github.com/adafruit/Adafruit-ST7735-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_ST7735_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_ST7735_Library-1.0.0.zip",
      "size": 23800,
      "checksum": "SHA-256:20c69834f7356d1f40085f72a1520797265076bd0d3063d1f407f40a2f417234"
    },
    {
      "name": "Adafruit ST7735 Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for the Adafruit 1.8\" SPI displays.",
      "paragraph": "This is a library for the Adafruit 1.8\" SPI displays.",
      "website": "https://github.com/adafruit/Adafruit-ST7735-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_ST7735_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_ST7735_Library-1.0.1.zip",
      "size": 23812,
      "checksum": "SHA-256:c3c99ebb05325c8bf08722cb1ab2f4b4881f5f7243a5cc6c50d1ad235646e50b"
    },
    {
      "name": "Adafruit ST7735 Library",
      "version": "1.0.4",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for the Adafruit 1.8\" SPI displays.",
      "paragraph": "This is a library for the Adafruit 1.8\" SPI displays.",
      "website": "https://github.com/adafruit/Adafruit-ST7735-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_ST7735_Library-1.0.4.zip",
      "archiveFileName": "Adafruit_ST7735_Library-1.0.4.zip",
      "size": 23773,
      "checksum": "SHA-256:6a7d602f79c03899928bff8bf82425c4dcc322a9e7e6471a70733babba635357"
    },
    {
      "name": "Adafruit STMPE610",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for STMPE610/811 resistive touch screen controllers",
      "paragraph": "Arduino library for STMPE610/811 resistive touch screen controllers",
      "website": "https://github.com/adafruit/Adafruit_STMPE610",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_STMPE610-1.0.0.zip",
      "archiveFileName": "Adafruit_STMPE610-1.0.0.zip",
      "size": 6594,
      "checksum": "SHA-256:027364c5dfdf72f505fddb0e2bcac66ced1a937e82e9f20cdcbc54daeeda0c92"
    },
    {
      "name": "Adafruit TCS34725",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for Adafruit's TCS34725 RGB Color Sensor Breakout",
      "paragraph": "Driver for Adafruit's TCS34725 RGB Color Sensor Breakout",
      "website": "https://github.com/adafruit/Adafruit_TCS34725",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_TCS34725-1.0.0.zip",
      "archiveFileName": "Adafruit_TCS34725-1.0.0.zip",
      "size": 11330,
      "checksum": "SHA-256:22bce48450b3610b519a49e42820ddbb0cbeabc7cafc677e3354422fce301729"
    },
    {
      "name": "Adafruit TCS34725",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Driver for Adafruit's TCS34725 RGB Color Sensor Breakout",
      "paragraph": "Driver for Adafruit's TCS34725 RGB Color Sensor Breakout",
      "website": "https://github.com/adafruit/Adafruit_TCS34725",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_TCS34725-1.0.1.zip",
      "archiveFileName": "Adafruit_TCS34725-1.0.1.zip",
      "size": 11358,
      "checksum": "SHA-256:14b426f61f961e7f7dbb3fa6dbbc59d15dd65b688226bd16092473aaacee28b9"
    },
    {
      "name": "Adafruit Thermal Printer Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino Library for Small Thermal Printers",
      "paragraph": "Arduino Library for Small Thermal Printers",
      "website": "https://github.com/adafruit/Adafruit-Thermal-Printer-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_Thermal_Printer_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_Thermal_Printer_Library-1.0.0.zip",
      "size": 18376,
      "checksum": "SHA-256:a0fb76c7bea6b4ede8cd5704a465824d9f4f2c51a58e83131621cdeed6f9386c"
    },
    {
      "name": "Adafruit Thermal Printer Library",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino Library for Small Thermal Printers",
      "paragraph": "Arduino Library for Small Thermal Printers",
      "website": "https://github.com/adafruit/Adafruit-Thermal-Printer-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_Thermal_Printer_Library-1.1.0.zip",
      "archiveFileName": "Adafruit_Thermal_Printer_Library-1.1.0.zip",
      "size": 23762,
      "checksum": "SHA-256:fe007055128f565ea65422663137ee263033f15129cec3dc1f87d45f9fcf52ad"
    },
    {
      "name": "Adafruit TiCoServo",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Use NeoPixels and servos in the same Arduino sketch (with caveats)",
      "paragraph": "Use NeoPixels and servos in the same Arduino sketch (with caveats)",
      "website": "https://github.com/adafruit/Adafruit_TiCoServo",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_TiCoServo-1.0.0.zip",
      "archiveFileName": "Adafruit_TiCoServo-1.0.0.zip",
      "size": 10213,
      "checksum": "SHA-256:b71dbb5aebff979f3b6cf7f1ad0f68fb212a9865b23c70eee06711cf46ece7f7"
    },
    {
      "name": "Adafruit TinyFlash",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Barebones Winbond SPI flash library for Arduino and Trinket",
      "paragraph": "Barebones Winbond SPI flash library for Arduino and Trinket",
      "website": "https://github.com/adafruit/Adafruit_TinyFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_TinyFlash-1.0.0.zip",
      "archiveFileName": "Adafruit_TinyFlash-1.0.0.zip",
      "size": 8441,
      "checksum": "SHA-256:8ce6defc04fabb538c850e6dbcb70cff3f56cf05773a75d698684ecc37d75fd0"
    },
    {
      "name": "Adafruit TinyRGBLCDShield",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit_RGBLCDShield library ported to Trinket/Gemma",
      "paragraph": "Adafruit_RGBLCDShield library ported to Trinket/Gemma",
      "website": "https://github.com/adafruit/Adafruit_TinyRGBLCDShield",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_TinyRGBLCDShield-1.0.0.zip",
      "archiveFileName": "Adafruit_TinyRGBLCDShield-1.0.0.zip",
      "size": 11578,
      "checksum": "SHA-256:f11ae527c4c12e1cad2af77b6f018ab693783948f6520bac533d0a1568ef6023"
    },
    {
      "name": "Adafruit TLC5947",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit's Arduino driver for the TLC5947 PWM LED Driver Breakout.",
      "paragraph": "Adafruit's Arduino driver for the TLC5947 PWM LED Driver Breakout.",
      "website": "https://github.com/adafruit/Adafruit_TLC5947",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_TLC5947-1.0.0.zip",
      "archiveFileName": "Adafruit_TLC5947-1.0.0.zip",
      "size": 4000,
      "checksum": "SHA-256:6427b1b499dcfa17f46d1cf53957b1e90564e678bb276a60535f141583b0aa57"
    },
    {
      "name": "Adafruit TLC59711",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for our Adafruit 12-channel PWM/LED driver.",
      "paragraph": "Library for our Adafruit 12-channel PWM/LED driver.",
      "website": "https://github.com/adafruit/Adafruit_TLC59711",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_TLC59711-1.0.0.zip",
      "archiveFileName": "Adafruit_TLC59711-1.0.0.zip",
      "size": 4295,
      "checksum": "SHA-256:e3c647f62fe73022d8d42ffcf13d29d87a9af9c0d26634b5133bc8fa15945c04"
    },
    {
      "name": "Adafruit TMP006",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for the Adafruit TMP006 Infrared Thermopile Sensor",
      "paragraph": "This is a library for the Adafruit TMP006 Infrared Thermopile Sensor",
      "website": "https://github.com/adafruit/Adafruit_TMP006",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_TMP006-1.0.0.zip",
      "archiveFileName": "Adafruit_TMP006-1.0.0.zip",
      "size": 5250,
      "checksum": "SHA-256:3434c7cc793acdc1af4de0a9dbf164f30b331d87c50ee60386ee647861785c30"
    },
    {
      "name": "Adafruit TMP007 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for Adafruit TMP007 Thermopile sensor Breakout",
      "paragraph": "Arduino library for Adafruit TMP007 Thermopile sensor Breakout",
      "website": "https://github.com/adafruit/Adafruit_TMP007_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_TMP007_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_TMP007_Library-1.0.0.zip",
      "size": 4724,
      "checksum": "SHA-256:afe0deaacc926c9b39ad18d735b6f41eaa6424ba7bcbe07f5bd1338871c5074c"
    },
    {
      "name": "Adafruit TMP007 Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for Adafruit TMP007 Thermopile sensor Breakout",
      "paragraph": "Arduino library for Adafruit TMP007 Thermopile sensor Breakout",
      "website": "https://github.com/adafruit/Adafruit_TMP007_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_TMP007_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_TMP007_Library-1.0.1.zip",
      "size": 4711,
      "checksum": "SHA-256:a7ef6b2b5db4b1ced234674054324c6493ab1ec6daabc6aa81a1a2ec624beb7b"
    },
    {
      "name": "Adafruit TPA2016 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the Adafruit TPA2016(D2) I2C controlled AGC audio amplifier",
      "paragraph": "Arduino library for the Adafruit TPA2016(D2) I2C controlled AGC audio amplifier",
      "website": "https://github.com/adafruit/Adafruit-TPA2016-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_TPA2016_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_TPA2016_Library-1.0.0.zip",
      "size": 4935,
      "checksum": "SHA-256:eec531892159edcd45f78adf0e29824fe37e24c910fc33fa936c1d0acf24c0ad"
    },
    {
      "name": "Adafruit Trellis Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling Adafruit Trellis",
      "paragraph": "Arduino library for controlling Adafruit Trellis",
      "website": "https://github.com/adafruit/Adafruit_Trellis_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_Trellis_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_Trellis_Library-1.0.0.zip",
      "size": 10652,
      "checksum": "SHA-256:eb57ac558c99a5cdcfa18f4336d29752663cad8dc975f5bb5d1d59d5c64a4886"
    },
    {
      "name": "Adafruit TSL2561",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor driver for Adafruit's TSL2561 breakouts",
      "paragraph": "Unified sensor driver for Adafruit's TSL2561 breakouts",
      "website": "https://github.com/adafruit/Adafruit_TSL2561",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_TSL2561-1.0.0.zip",
      "archiveFileName": "Adafruit_TSL2561-1.0.0.zip",
      "size": 12187,
      "checksum": "SHA-256:7d342d53e29c9d62c0c4434a5df5e9ee987da26c28a5a9aee791c8ce2690de9d"
    },
    {
      "name": "Adafruit TSL2591 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the TSL2591 digital luminosity (light) sensors.",
      "paragraph": "Library for the TSL2591 digital luminosity (light) sensors.",
      "website": "https://github.com/adafruit/Adafruit_TSL2591_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_TSL2591_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_TSL2591_Library-1.0.0.zip",
      "size": 9112,
      "checksum": "SHA-256:ec328daaafb72779a303ba0cd038b37962733bb63a84fd71232097b5c97b29ac"
    },
    {
      "name": "Adafruit TSL2591 Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the TSL2591 digital luminosity (light) sensors.",
      "paragraph": "Library for the TSL2591 digital luminosity (light) sensors.",
      "website": "https://github.com/adafruit/Adafruit_TSL2591_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_TSL2591_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_TSL2591_Library-1.0.1.zip",
      "size": 9145,
      "checksum": "SHA-256:2669871ec5513e8ac8d6d344bb824be949bc6dab091d7caeee38994fd68a4cdf"
    },
    {
      "name": "Adafruit TSL2591 Library",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the TSL2591 digital luminosity (light) sensors.",
      "paragraph": "Library for the TSL2591 digital luminosity (light) sensors.",
      "website": "https://github.com/adafruit/Adafruit_TSL2591_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_TSL2591_Library-1.0.2.zip",
      "archiveFileName": "Adafruit_TSL2591_Library-1.0.2.zip",
      "size": 9139,
      "checksum": "SHA-256:a461a0d0ba3af35486797aa643c179c53f0499aac26afaa7e5928b9449adff52"
    },
    {
      "name": "Adafruit VC0706 Serial Camera Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for VC0706-based Serial JPEG Cameras",
      "paragraph": "Library for VC0706-based Serial JPEG Cameras",
      "website": "https://github.com/adafruit/Adafruit-VC0706-Serial-Camera-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_VC0706_Serial_Camera_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_VC0706_Serial_Camera_Library-1.0.0.zip",
      "size": 14524,
      "checksum": "SHA-256:fcaaac8ef6ac9e5578b08a69d4b968a3a536ad90b47a6e34c3823ca6d4aded01"
    },
    {
      "name": "Adafruit VS1053 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for the Adafruit VS1053 Codec Breakout and Music Maker Shields",
      "paragraph": "This is a library for the Adafruit VS1053 Codec Breakout and Music Maker Shields",
      "website": "https://github.com/adafruit/Adafruit_VS1053_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_VS1053_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_VS1053_Library-1.0.0.zip",
      "size": 31981,
      "checksum": "SHA-256:cef90df750d2e2e97dc31c387d58b3a1419f6bc97762df5461ec989e8f3266b8"
    },
    {
      "name": "Adafruit WS2801 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling strips/pixels using WS2801 driver chips",
      "paragraph": "Arduino library for controlling strips/pixels using WS2801 driver chips",
      "website": "https://github.com/adafruit/Adafruit-WS2801-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_WS2801_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_WS2801_Library-1.0.0.zip",
      "size": 9205,
      "checksum": "SHA-256:dd7dd241ca58cfe8349023c86e26c15fc62b8b65ef27ca668d5991fe5a244eed"
    },
    {
      "name": "CC3000 MDNS",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Simple multicast DNS name resolution library for Adafruit's CC3000 and Arduino.",
      "paragraph": "Simple multicast DNS name resolution library for Adafruit's CC3000 and Arduino.",
      "website": "https://github.com/adafruit/CC3000_MDNS",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/CC3000_MDNS-1.0.0.zip",
      "archiveFileName": "CC3000_MDNS-1.0.0.zip",
      "size": 8825,
      "checksum": "SHA-256:a2239b511f8dc1a2d295845d4b6389cbcda69edacbcdb823c1e9e289755411c4"
    },
    {
      "name": "DHT sensor library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "paragraph": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "website": "https://github.com/adafruit/DHT-sensor-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/DHT_sensor_library-1.0.0.zip",
      "archiveFileName": "DHT_sensor_library-1.0.0.zip",
      "size": 4325,
      "checksum": "SHA-256:3d3d35a019602caba801576e956ecd95fd60ef930373a15b91be022f18b4e4de"
    },
    {
      "name": "DHT sensor library",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "paragraph": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "website": "https://github.com/adafruit/DHT-sensor-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/DHT_sensor_library-1.1.0.zip",
      "archiveFileName": "DHT_sensor_library-1.1.0.zip",
      "size": 5702,
      "checksum": "SHA-256:ffda4ee2d309df3587b322a0e1845f35cb66827126c28c0533092d5af1686a48"
    },
    {
      "name": "DHT sensor library",
      "version": "1.1.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "paragraph": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "website": "https://github.com/adafruit/DHT-sensor-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/DHT_sensor_library-1.1.1.zip",
      "archiveFileName": "DHT_sensor_library-1.1.1.zip",
      "size": 6274,
      "checksum": "SHA-256:03f831b0b26cc28eee339a4c3f41a15a2933524928787dcd357890f25d96fd8b"
    },
    {
      "name": "DHT sensor library",
      "version": "1.2.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "paragraph": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "website": "https://github.com/adafruit/DHT-sensor-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/DHT_sensor_library-1.2.0.zip",
      "archiveFileName": "DHT_sensor_library-1.2.0.zip",
      "size": 6359,
      "checksum": "SHA-256:71c709b34ca4f6acfcd3444ccd399eaa3e7719ee5a6cc90085b80a5cf686a62e"
    },
    {
      "name": "DHT sensor library",
      "version": "1.2.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "paragraph": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "website": "https://github.com/adafruit/DHT-sensor-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/DHT_sensor_library-1.2.1.zip",
      "archiveFileName": "DHT_sensor_library-1.2.1.zip",
      "size": 6448,
      "checksum": "SHA-256:6433dd4d19f5551b63e83d3c9a3c2b83307e2938d47f881186c6dc86752dfb13"
    },
    {
      "name": "DHT sensor library",
      "version": "1.2.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "paragraph": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "website": "https://github.com/adafruit/DHT-sensor-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/DHT_sensor_library-1.2.2.zip",
      "archiveFileName": "DHT_sensor_library-1.2.2.zip",
      "size": 6441,
      "checksum": "SHA-256:79be86c9d02e07aa2ca82c3eaf4fddd78fe071daad6ae6295e2037d1a5975b70"
    },
    {
      "name": "DHT sensor library",
      "version": "1.2.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "paragraph": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "website": "https://github.com/adafruit/DHT-sensor-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/DHT_sensor_library-1.2.3.zip",
      "archiveFileName": "DHT_sensor_library-1.2.3.zip",
      "size": 6606,
      "checksum": "SHA-256:bb0e94dcdeb6ae8adda35948aa8c6b441839b6d9ea0eaebb9a19ee4c47dd7a1e"
    },
    {
      "name": "FifteenStep",
      "version": "1.0.1",
      "author": "Todd Treece \u003ctodd@uniontownlabs.org\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A general purpose Arduino MIDI sequencer library.",
      "paragraph": "This library allows you to create a simple sequencer using any MIDI implementation (i.e. USB or Serial).",
      "website": "https://github.com/adafruit/FifteenStep",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/FifteenStep-1.0.1.zip",
      "archiveFileName": "FifteenStep-1.0.1.zip",
      "size": 25053,
      "checksum": "SHA-256:fba393ec993b61c9a98453680120fe5b2107680d6812d6ee25ec1ff42ffbe731"
    },
    {
      "name": "HL1606 LED Strip",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Code to control HL1606-based LED strips",
      "paragraph": "Code to control HL1606-based LED strips",
      "website": "https://github.com/adafruit/HL1606-LED-Strip",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/HL1606_LED_Strip-1.0.0.zip",
      "archiveFileName": "HL1606_LED_Strip-1.0.0.zip",
      "size": 7349,
      "checksum": "SHA-256:bc26ce3a7043e230df2bb00a8bc4edef5644cc9ba70ad98e00f5fe133c0a82ae"
    },
    {
      "name": "HL1606 LED Strip PWM",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All the joy of HL1606 LED strips but with 9 or 12 bit color control!",
      "paragraph": "All the joy of HL1606 LED strips but with 9 or 12 bit color control!",
      "website": "https://github.com/adafruit/HL1606-LED-Strip-PWM",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/HL1606_LED_Strip_PWM-1.0.0.zip",
      "archiveFileName": "HL1606_LED_Strip_PWM-1.0.0.zip",
      "size": 8969,
      "checksum": "SHA-256:e9d2fdf81e062c3842849eb23fd9ec385ed98ee83daf9c6ff90464b55f587b7e"
    },
    {
      "name": "HT1632",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library code for HT1632(C) matrix panel driver chips, and the panels we have in the Adafruit shop",
      "paragraph": "Arduino library code for HT1632(C) matrix panel driver chips, and the panels we have in the Adafruit shop",
      "website": "https://github.com/adafruit/HT1632",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/HT1632-1.0.0.zip",
      "archiveFileName": "HT1632-1.0.0.zip",
      "size": 7980,
      "checksum": "SHA-256:373a9d7a8fbb04cab43f07c6f199f52f14067917616586cd9d3289f3228449af"
    },
    {
      "name": "HT1632",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library code for HT1632(C) matrix panel driver chips, and the panels we have in the Adafruit shop",
      "paragraph": "Arduino library code for HT1632(C) matrix panel driver chips, and the panels we have in the Adafruit shop",
      "website": "https://github.com/adafruit/HT1632",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/HT1632-1.0.1.zip",
      "archiveFileName": "HT1632-1.0.1.zip",
      "size": 8023,
      "checksum": "SHA-256:901880c998cfa322c68addd9b693957fdc921e460b47a083ccc10965294dcc69"
    },
    {
      "name": "LPD6803 RGB Pixels",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Controlling library for strands of LPD6803 LED pixel dots.",
      "paragraph": "Controlling library for strands of LPD6803 LED pixel dots.",
      "website": "https://github.com/adafruit/LPD6803-RGB-Pixels",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/LPD6803_RGB_Pixels-1.0.0.zip",
      "archiveFileName": "LPD6803_RGB_Pixels-1.0.0.zip",
      "size": 4874,
      "checksum": "SHA-256:062f8940d2da7cae4d89673bd08ffb5b6bdf9be7fc205fb79798d1c6bf12b0a1"
    },
    {
      "name": "LPD8806",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for LED strips and pixels using LPD8806 (and probably LPD8803/LPD8809)",
      "paragraph": "Arduino library for LED strips and pixels using LPD8806 (and probably LPD8803/LPD8809)",
      "website": "https://github.com/adafruit/LPD8806",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/LPD8806-1.0.0.zip",
      "archiveFileName": "LPD8806-1.0.0.zip",
      "size": 20701,
      "checksum": "SHA-256:b738a39cfffe287386f82d6c4387097bee5911ae049f30db6179b135af5bef96"
    },
    {
      "name": "MAX31850 DallasTemp",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A version of the DallasTemp Arduino library with MAX31850 support (Requires OneWire with MAX31850 support!)",
      "paragraph": "A version of the DallasTemp Arduino library with MAX31850 support (Requires OneWire with MAX31850 support!)",
      "website": "https://github.com/adafruit/MAX31850_DallasTemp",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/MAX31850_DallasTemp-1.0.0.zip",
      "archiveFileName": "MAX31850_DallasTemp-1.0.0.zip",
      "size": 17877,
      "checksum": "SHA-256:9154f5daae8adccc39be02c25cca35d1e0a65276c0d19779c60674397d34946c"
    },
    {
      "name": "MAX31850 OneWire",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A version of the OneWire Arduino library with MAX31850 support",
      "paragraph": "A version of the OneWire Arduino library with MAX31850 support",
      "website": "https://github.com/adafruit/MAX31850_OneWire",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/MAX31850_OneWire-1.0.0.zip",
      "archiveFileName": "MAX31850_OneWire-1.0.0.zip",
      "size": 19291,
      "checksum": "SHA-256:dd6e44a378a833d7914abc9b0f0f58ce7953506c2593cd5d8c1ce7a098ed5cde"
    },
    {
      "name": "MAX6675 library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for interfacing with MAX6675 thermocouple amplifier",
      "paragraph": "Arduino library for interfacing with MAX6675 thermocouple amplifier",
      "website": "https://github.com/adafruit/MAX6675-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/MAX6675_library-1.0.0.zip",
      "archiveFileName": "MAX6675_library-1.0.0.zip",
      "size": 3322,
      "checksum": "SHA-256:1062a5eb6e385642fbf28b593f63042ff903d141bd978765ab121d805f3ae647"
    },
    {
      "name": "Pro Trinket USB Keyboard Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "An arduino library to turn a Pro Trinket 5V/16MHz into a USB Keyboard!",
      "paragraph": "An arduino library to turn a Pro Trinket 5V/16MHz into a USB Keyboard!",
      "website": "https://github.com/adafruit/Pro_Trinket_USB_Keyboard_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Pro_Trinket_USB_Keyboard_Library-1.0.0.zip",
      "archiveFileName": "Pro_Trinket_USB_Keyboard_Library-1.0.0.zip",
      "size": 3389855,
      "checksum": "SHA-256:254ec3882932ef4a1a1f9972d543b3069a6b52db49e249c827b76d883f0bd520"
    },
    {
      "name": "Pro Trinket USB Mouse",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for Pro trinket to turn it into a mouse!",
      "paragraph": "Library for Pro trinket to turn it into a mouse!",
      "website": "https://github.com/adafruit/Pro_Trinket_USB_Mouse",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Pro_Trinket_USB_Mouse-1.0.0.zip",
      "archiveFileName": "Pro_Trinket_USB_Mouse-1.0.0.zip",
      "size": 976790,
      "checksum": "SHA-256:d094d5110fbd6fe450ac7619bd74004335a6d845814c750a71fd3bbf59020e13"
    },
    {
      "name": "RGB matrix Panel",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library and example code for the 16x32 RGB matrix panels in the shop",
      "paragraph": "Arduino library and example code for the 16x32 RGB matrix panels in the shop",
      "website": "https://github.com/adafruit/RGB-matrix-Panel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/RGB_matrix_Panel-1.0.0.zip",
      "archiveFileName": "RGB_matrix_Panel-1.0.0.zip",
      "size": 27000,
      "checksum": "SHA-256:4daf7348eda8398449e948a36c157b3bdc3bb35a212954f93306a987f82e6509"
    },
    {
      "name": "RGB matrix Panel",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library and example code for the 16x32 RGB matrix panels in the shop",
      "paragraph": "Arduino library and example code for the 16x32 RGB matrix panels in the shop",
      "website": "https://github.com/adafruit/RGB-matrix-Panel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/RGB_matrix_Panel-1.0.1.zip",
      "archiveFileName": "RGB_matrix_Panel-1.0.1.zip",
      "size": 26983,
      "checksum": "SHA-256:ca0e5338b2c0e4383dde5ace2bb268254e8e2c2dc70ff10e5ca90b05b7cd471c"
    },
    {
      "name": "RGB matrix Panel",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library and example code for the 16x32 RGB matrix panels in the shop",
      "paragraph": "Arduino library and example code for the 16x32 RGB matrix panels in the shop",
      "website": "https://github.com/adafruit/RGB-matrix-Panel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/RGB_matrix_Panel-1.0.2.zip",
      "archiveFileName": "RGB_matrix_Panel-1.0.2.zip",
      "size": 27032,
      "checksum": "SHA-256:e6e49a85b87c62516fe92dbb2f5e6e714170e6b41c99db2f19613793a3dde01f"
    },
    {
      "name": "RTClib",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A fork of Jeelab's fantastic RTC library",
      "paragraph": "A fork of Jeelab's fantastic RTC library",
      "website": "https://github.com/adafruit/RTClib",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/RTClib-1.0.0.zip",
      "archiveFileName": "RTClib-1.0.0.zip",
      "size": 9378,
      "checksum": "SHA-256:648be72b3183b0e6719d9177f9fba329ba07d1d402b1d1c9cd3f38ae12becbec"
    },
    {
      "name": "RTClib",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A fork of Jeelab's fantastic RTC library",
      "paragraph": "A fork of Jeelab's fantastic RTC library",
      "website": "https://github.com/adafruit/RTClib",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/RTClib-1.1.0.zip",
      "archiveFileName": "RTClib-1.1.0.zip",
      "size": 9705,
      "checksum": "SHA-256:4410cc3f2fda993e8202c5bbef30618d0c5b4cc8c064c432541b7dfe87810a95"
    },
    {
      "name": "SPI VFD",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino Library for 20T202DA2JA SPI VFD",
      "paragraph": "Arduino Library for 20T202DA2JA SPI VFD",
      "website": "https://github.com/adafruit/SPI_VFD",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/SPI_VFD-1.0.0.zip",
      "archiveFileName": "SPI_VFD-1.0.0.zip",
      "size": 14863,
      "checksum": "SHA-256:4e8da5f7cdc9b6beec6c01b735f5a66fdd5e3f4d10acd583d6786cab2a5a6492"
    },
    {
      "name": "TinyLiquidCrystal",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A simplified library for the Adafruit I2C/SPI backpack, for use with Gemma \u0026 Trinket",
      "paragraph": "A simplified library for the Adafruit I2C/SPI backpack, for use with Gemma \u0026 Trinket",
      "website": "https://github.com/adafruit/TinyLiquidCrystal",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/TinyLiquidCrystal-1.0.0.zip",
      "archiveFileName": "TinyLiquidCrystal-1.0.0.zip",
      "size": 10421,
      "checksum": "SHA-256:c699ddb0b0dee10641eb7e9951436bcc30b96eb2b90b91cf556efa814700250c"
    },
    {
      "name": "TinyRTCLib",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A tiny version of RTCLib, for use with TinyWireM",
      "paragraph": "A tiny version of RTCLib, for use with TinyWireM",
      "website": "https://github.com/adafruit/TinyRTCLib",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/TinyRTCLib-1.0.0.zip",
      "archiveFileName": "TinyRTCLib-1.0.0.zip",
      "size": 5690,
      "checksum": "SHA-256:1c81b9b94c365647b4863eed140b17cbea8c04044675ba680c8be875054bf390"
    },
    {
      "name": "TinyWireM",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "I2C library for Trinket and Gemma, adapted from BroHogan's code on Arduino Playground",
      "paragraph": "I2C library for Trinket and Gemma, adapted from BroHogan's code on Arduino Playground",
      "website": "https://github.com/adafruit/TinyWireM",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/TinyWireM-1.0.0.zip",
      "archiveFileName": "TinyWireM-1.0.0.zip",
      "size": 15696,
      "checksum": "SHA-256:6b5ee59e855d8415f9e5062e897c590acbbfeb8e93dbf118d47636c869915386"
    },
    {
      "name": "TSL2561 Arduino Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for using the TSL2561 Luminosity sensor",
      "paragraph": "Arduino library for using the TSL2561 Luminosity sensor",
      "website": "https://github.com/adafruit/TSL2561-Arduino-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/TSL2561_Arduino_Library-1.0.0.zip",
      "archiveFileName": "TSL2561_Arduino_Library-1.0.0.zip",
      "size": 7529,
      "checksum": "SHA-256:beacb20d3bd86f063b0f0e7fc8a4de385ac26166ff6ee55034de6f519bcc8514"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_GFX_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.0.0.zip",
      "size": 9690,
      "checksum": "SHA-256:c4dc9a2be1f0dc95566a63c827dd6971f6d95c2b08c15c0ca0560f0e3f1224a2"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_GFX_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.0.1.zip",
      "size": 10877,
      "checksum": "SHA-256:afcb2a460be36fb59935863ec41bfbd91d2628b3b9ba8379018e52d6c363daf6"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_GFX_Library-1.0.2.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.0.2.zip",
      "size": 10935,
      "checksum": "SHA-256:d69f1cd4761a5719cd5947bb0c01d6156070b7be97b8e0d3733bbae9f1ca0066"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_GFX_Library-1.1.0.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.1.0.zip",
      "size": 291346,
      "checksum": "SHA-256:5b762dd39e60b162e8a1b5249e1049ceb75eaa0300dc85c5e202abbfc381d3de"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.1.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_GFX_Library-1.1.1.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.1.1.zip",
      "size": 291360,
      "checksum": "SHA-256:dbc2ca8eae9541d15557c1247d47e4b7ed23df2132b19c2e97dce198cc7d4cba"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.1.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_GFX_Library-1.1.2.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.1.2.zip",
      "size": 292704,
      "checksum": "SHA-256:33c115d10e17ffec863eff8d6385f15f94cbea2ffc737a1d9c416021533f04f2"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.1.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_GFX_Library-1.1.3.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.1.3.zip",
      "size": 292671,
      "checksum": "SHA-256:6075036ce93e46ca8bc70bb6701c86365c9d503aeb24cc9fecb67f9e10f96777"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.1.4",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_GFX_Library-1.1.4.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.1.4.zip",
      "size": 292660,
      "checksum": "SHA-256:712aa293275c6fdba4175c3c697575008676b56a38ae97dced93a01bf0db9fb4"
    },
    {
      "name": "Adafruit GFX Library",
      "version": "1.1.5",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_GFX_Library-1.1.5.zip",
      "archiveFileName": "Adafruit_GFX_Library-1.1.5.zip",
      "size": 298238,
      "checksum": "SHA-256:80cfbb9ce8cd36b005ecb5ec9288cd4817007d3e27defa178f4ec59fb049564d"
    },
    {
      "name": "Adafruit Unified Sensor",
      "version": "1.0.0",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Required for all Adafruit Unified Sensor based libraries.",
      "paragraph": "A unified sensor abstraction layer used by many Adafruit sensor libraries.",
      "website": "https://github.com/adafruit/Adafruit_Sensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_Unified_Sensor-1.0.0.zip",
      "archiveFileName": "Adafruit_Unified_Sensor-1.0.0.zip",
      "size": 7000,
      "checksum": "SHA-256:29db0f3a116d7c6c8b1a613e5018972ca63c83b0a2e5c00993bdaf734f585721"
    },
    {
      "name": "Adafruit Unified Sensor",
      "version": "1.0.1",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Required for all Adafruit Unified Sensor based libraries.",
      "paragraph": "A unified sensor abstraction layer used by many Adafruit sensor libraries.",
      "website": "https://github.com/adafruit/Adafruit_Sensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_Unified_Sensor-1.0.1.zip",
      "archiveFileName": "Adafruit_Unified_Sensor-1.0.1.zip",
      "size": 6979,
      "checksum": "SHA-256:4e48bce04c3078df33c42b27ce376815e9afa1ca1ab31ed06852127bdd10f719"
    },
    {
      "name": "Adafruit Unified Sensor",
      "version": "1.0.2",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Required for all Adafruit Unified Sensor based libraries.",
      "paragraph": "A unified sensor abstraction layer used by many Adafruit sensor libraries.",
      "website": "https://github.com/adafruit/Adafruit_Sensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_Unified_Sensor-1.0.2.zip",
      "archiveFileName": "Adafruit_Unified_Sensor-1.0.2.zip",
      "size": 6735,
      "checksum": "SHA-256:473caf5c3862c4b8e350a582a1067d65d7e956a68de4bf90f891360bbd78ef02"
    },
    {
      "name": "Adafruit BNO055",
      "version": "1.0.0",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit BNO055 Absolute Orientation Sensor.",
      "paragraph": "Designed specifically to work with the Adafruit BNO055 Breakout, and is based on Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_BNO055",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BNO055-1.0.0.zip",
      "archiveFileName": "Adafruit_BNO055-1.0.0.zip",
      "size": 1690785,
      "checksum": "SHA-256:93d35e027cd3765c2567f9ea6af4e2ccd1a5ee96816742ee04ce78a848224b39"
    },
    {
      "name": "Adafruit BNO055",
      "version": "1.0.4",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit BNO055 Absolute Orientation Sensor.",
      "paragraph": "Designed specifically to work with the Adafruit BNO055 Breakout, and is based on Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_BNO055",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BNO055-1.0.4.zip",
      "archiveFileName": "Adafruit_BNO055-1.0.4.zip",
      "size": 1690783,
      "checksum": "SHA-256:89f6f2fb3744c1e4ab7acedc9389daa67dce3b8fea6b6d010ef16294450f8476"
    },
    {
      "name": "Adafruit BNO055",
      "version": "1.0.5",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit BNO055 Absolute Orientation Sensor.",
      "paragraph": "Designed specifically to work with the Adafruit BNO055 Breakout, and is based on Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_BNO055",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BNO055-1.0.5.zip",
      "archiveFileName": "Adafruit_BNO055-1.0.5.zip",
      "size": 1691334,
      "checksum": "SHA-256:a688ba384cb63fab3fec4ce884174d1e772eeace85e461aa1e29d8afc264125d"
    },
    {
      "name": "Adafruit BNO055",
      "version": "1.0.6",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit BNO055 Absolute Orientation Sensor.",
      "paragraph": "Designed specifically to work with the Adafruit BNO055 Breakout, and is based on Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_BNO055",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BNO055-1.0.6.zip",
      "archiveFileName": "Adafruit_BNO055-1.0.6.zip",
      "size": 1691674,
      "checksum": "SHA-256:6e6f201b345a3dd8f2ae5dc527bcfc3ebe97130f061175570f08fe3372cdebdc"
    },
    {
      "name": "Adafruit BNO055",
      "version": "1.1.1",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit BNO055 Absolute Orientation Sensor.",
      "paragraph": "Designed specifically to work with the Adafruit BNO055 Breakout, and is based on Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_BNO055",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BNO055-1.1.1.zip",
      "archiveFileName": "Adafruit_BNO055-1.1.1.zip",
      "size": 1696161,
      "checksum": "SHA-256:ecef0d4c9d537d02f067dc78cde5a6687c73596712a20683d06f34da7fc6fbf5"
    },
    {
      "name": "Adafruit BNO055",
      "version": "1.1.2",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit BNO055 Absolute Orientation Sensor.",
      "paragraph": "Designed specifically to work with the Adafruit BNO055 Breakout, and is based on Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_BNO055",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BNO055-1.1.2.zip",
      "archiveFileName": "Adafruit_BNO055-1.1.2.zip",
      "size": 1696223,
      "checksum": "SHA-256:0f0d73b82f0a5a89c1dae6dc054575ac30ada84356833527d145a592f67f3f8e"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.10.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MQTT_Library-0.10.0.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.10.0.zip",
      "size": 27484,
      "checksum": "SHA-256:166fc6beabd531896089cd3ecf8ec155f3cc798248b3da602da2553715049f80"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.11.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, Yun, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MQTT_Library-0.11.0.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.11.0.zip",
      "size": 29555,
      "checksum": "SHA-256:f7156ce79525dae34721f75287eaaa4e9ec42d04b5d6b06afcc5b6ce7cf33f38"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.11.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, Yun, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MQTT_Library-0.11.1.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.11.1.zip",
      "size": 29753,
      "checksum": "SHA-256:d74cb75270de226612ddd2e62c59d03b7ddb0dd87a46656e5d59a84d864e4e86"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.12.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, Yun, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MQTT_Library-0.12.0.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.12.0.zip",
      "size": 32890,
      "checksum": "SHA-256:6ead097e647c6a3a826cf19570ddb87857b4c16f97fc2e23f699c56751b1642d"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.12.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, Yun, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MQTT_Library-0.12.1.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.12.1.zip",
      "size": 33168,
      "checksum": "SHA-256:4630ccabc4b530f9d9db35e677d6277ffa0cf3de240a17047663d36bf16a5c5e"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.12.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, Yun, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MQTT_Library-0.12.2.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.12.2.zip",
      "size": 38593,
      "checksum": "SHA-256:ffca63086a16094e0fda13f2a33df228ae5ebf4f10ea48d3d62c7cd41e98d92e"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.9.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MQTT_Library-0.9.0.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.9.0.zip",
      "size": 24722,
      "checksum": "SHA-256:fef17a9239c6ac2416f66a229703ce3bbbaff1799ff9882a1240382dcc0e1707"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.9.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MQTT_Library-0.9.1.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.9.1.zip",
      "size": 24664,
      "checksum": "SHA-256:13770ecae6fea30a58eb05beadb5fc88db5c7baf29604dccfbbff2bff11458f3"
    },
    {
      "name": "Adafruit MQTT Library",
      "version": "0.9.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "MQTT library that supports the CC3000, FONA, ESP8266, and generic Arduino Client hardware.",
      "paragraph": "Simple MQTT library that supports the bare minimum to publish and subscribe to topics.",
      "website": "https://github.com/adafruit/Adafruit_MQTT_Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_MQTT_Library-0.9.2.zip",
      "archiveFileName": "Adafruit_MQTT_Library-0.9.2.zip",
      "size": 25518,
      "checksum": "SHA-256:b3e2a2c63dcfac203a9b8fa9ca7dcf854de971eaf8e7107c823d48265cb3e140"
    },
    {
      "name": "Adafruit SleepyDog Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library to use the watchdog timer for system reset and low power sleep.",
      "paragraph": "Arduino library to use the watchdog timer for system reset and low power sleep.",
      "website": "https://github.com/adafruit/Adafruit_SleepyDog",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_SleepyDog_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_SleepyDog_Library-1.0.0.zip",
      "size": 6644,
      "checksum": "SHA-256:1ab46fa02d4145c08b7d4ee58c52603afe19c235675f1a42c139847ec8528b67"
    },
    {
      "name": "Adafruit SleepyDog Library",
      "version": "1.1.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library to use the watchdog timer for system reset and low power sleep.",
      "paragraph": "Arduino library to use the watchdog timer for system reset and low power sleep.",
      "website": "https://github.com/adafruit/Adafruit_SleepyDog",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_SleepyDog_Library-1.1.0.zip",
      "archiveFileName": "Adafruit_SleepyDog_Library-1.1.0.zip",
      "size": 9044,
      "checksum": "SHA-256:b76d4fb0067bf332434848af6e8801dc4bcde7167035f27c1fd963902017ecaa"
    },
    {
      "name": "Adafruit IO Arduino",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library to access the Adafruit IO REST API.",
      "paragraph": "Arduino library to access the Adafruit IO REST API using the CC3000, ESP8266/generic Client, or FONA hardware.",
      "website": "https://github.com/adafruit/Adafruit_IO_Arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_IO_Arduino-1.0.0.zip",
      "archiveFileName": "Adafruit_IO_Arduino-1.0.0.zip",
      "size": 21779,
      "checksum": "SHA-256:c02fb5d72587842977edb094b5af49f5da16b07f95c9282a3ff38818a18a455a"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BluefruitLE_nRF51-1.0.0.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.0.0.zip",
      "size": 53079,
      "checksum": "SHA-256:abf6260e33630bc162727b913f4469d74d902e0e99b2edbf2ce42a61397324dd"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.6.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BluefruitLE_nRF51-1.6.0.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.6.0.zip",
      "size": 80050,
      "checksum": "SHA-256:a8ffe082421223bf792760c0a2eb4300d8b2a9182a8478a2a372930295b9c4e4"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.7.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BluefruitLE_nRF51-1.7.0.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.7.0.zip",
      "size": 84915,
      "checksum": "SHA-256:483b9942c04bdaa97ed2b7a9a42b55ffa503eb10e4d34c92afed3767af3c1121"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.7.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BluefruitLE_nRF51-1.7.2.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.7.2.zip",
      "size": 88071,
      "checksum": "SHA-256:f3c8b2a5e78cd4b7cb4bcfa83c7ffcd048b98dbd76ad4bd5244c4cd693b8d9b6"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.7.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BluefruitLE_nRF51-1.7.3.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.7.3.zip",
      "size": 91757,
      "checksum": "SHA-256:26202ed5e67a8f646b16211d247e2c0bdb575cecccdf2ed675137633d052e395"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.7.4",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BluefruitLE_nRF51-1.7.4.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.7.4.zip",
      "size": 92918,
      "checksum": "SHA-256:e00d803af7159b23e3a60736e0a7d90809b7fcf52ad9ac5a62319e503894f4ff"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.7.5",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BluefruitLE_nRF51-1.7.5.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.7.5.zip",
      "size": 93021,
      "checksum": "SHA-256:89383879e09ab81e862a39a96870a52bf10bebf42357de41734bcf78f369da74"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.7.6",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BluefruitLE_nRF51-1.7.6.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.7.6.zip",
      "size": 95296,
      "checksum": "SHA-256:9f9d28b707d0066060ebe0374d95a617809b646df2b2d11d905db200b088f16a"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.7.7",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BluefruitLE_nRF51-1.7.7.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.7.7.zip",
      "size": 95295,
      "checksum": "SHA-256:4db15e21365299adf97eeb7463c09b8d287ef47ac44ea9016483bb52e50f733b"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.7.8",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BluefruitLE_nRF51-1.7.8.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.7.8.zip",
      "size": 95303,
      "checksum": "SHA-256:5783655c3038b86d61778d631670e592e93a53b266a83fde867ec173db206068"
    },
    {
      "name": "Adafruit BluefruitLE nRF51",
      "version": "1.8.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "paragraph": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules",
      "website": "https://github.com/adafruit/Adafruit_BluefruitLE_nRF51",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BluefruitLE_nRF51-1.8.0.zip",
      "archiveFileName": "Adafruit_BluefruitLE_nRF51-1.8.0.zip",
      "size": 95318,
      "checksum": "SHA-256:e106395c3ed78e66e08fa0b47441b29fafd9470f1e67bcb8505be7125700fa0d"
    },
    {
      "name": "Adafruit UNTZtrument",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit UNTZtrument",
      "paragraph": "Adafruit UNTZtrument",
      "website": "https://github.com/adafruit/Adafruit_UNTZtrument",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_UNTZtrument-1.0.0.zip",
      "archiveFileName": "Adafruit_UNTZtrument-1.0.0.zip",
      "size": 9956,
      "checksum": "SHA-256:38f32a8c1931dc3fda733bd6adb639d72c7b28068ecab872accd34185bbc9d1b"
    },
    {
      "name": "Adafruit SSD1325",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "SSD1325 monochrome OLED library",
      "paragraph": "SSD1325 monochome OLED library (note does not support grayscale).",
      "website": "https://github.com/adafruit/Adafruit_SSD1325_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_SSD1325-1.0.0.zip",
      "archiveFileName": "Adafruit_SSD1325-1.0.0.zip",
      "size": 11169,
      "checksum": "SHA-256:624007fb3cc80fac211c2d45c450a4506217798d35f2ddd53657b6f6e2ad3dcc"
    },
    {
      "name": "Adafruit BME280 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for BME280 sensors.",
      "paragraph": "Arduino library for BME280 humidity and pressure sensors.",
      "website": "https://github.com/adafruit/Adafruit_BME280_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BME280_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_BME280_Library-1.0.0.zip",
      "size": 6140,
      "checksum": "SHA-256:c3512648f5a2dc86b9343d83228e1785674455f3b108617c1f9fb1bb1c145efa"
    },
    {
      "name": "Adafruit BME280 Library",
      "version": "1.0.3",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for BME280 sensors.",
      "paragraph": "Arduino library for BME280 humidity and pressure sensors.",
      "website": "https://github.com/adafruit/Adafruit_BME280_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BME280_Library-1.0.3.zip",
      "archiveFileName": "Adafruit_BME280_Library-1.0.3.zip",
      "size": 6517,
      "checksum": "SHA-256:d60133c4b49ed8bd78a65f93bfb811ee6aed67c8cf18e4abeaa16e12d4c03fde"
    },
    {
      "name": "Adafruit BME280 Library",
      "version": "1.0.4",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for BME280 sensors.",
      "paragraph": "Arduino library for BME280 humidity and pressure sensors.",
      "website": "https://github.com/adafruit/Adafruit_BME280_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BME280_Library-1.0.4.zip",
      "archiveFileName": "Adafruit_BME280_Library-1.0.4.zip",
      "size": 7049,
      "checksum": "SHA-256:cb74356c4a81a28f432298732b39f4d64f16547ace73b0f98b7e6ddcb4aead59"
    },
    {
      "name": "Adafruit BMP280 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for BMP280 sensors.",
      "paragraph": "Arduino library for BMP280 pressure and altitude sensors.",
      "website": "https://github.com/adafruit/Adafruit_BMP280_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BMP280_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_BMP280_Library-1.0.0.zip",
      "size": 5499,
      "checksum": "SHA-256:1b74261a6c03ded6e15c6798c61e03d8cfbdb7d42e3f9b00189c0aa7fe72f785"
    },
    {
      "name": "Adafruit BMP280 Library",
      "version": "1.0.1",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for BMP280 sensors.",
      "paragraph": "Arduino library for BMP280 pressure and altitude sensors.",
      "website": "https://github.com/adafruit/Adafruit_BMP280_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BMP280_Library-1.0.1.zip",
      "archiveFileName": "Adafruit_BMP280_Library-1.0.1.zip",
      "size": 5579,
      "checksum": "SHA-256:a5552aba55f5da138e93d1dbfcba2c4dcbac8acfe557f2db81f28a7d7ce96258"
    },
    {
      "name": "Adafruit BMP280 Library",
      "version": "1.0.2",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for BMP280 sensors.",
      "paragraph": "Arduino library for BMP280 pressure and altitude sensors.",
      "website": "https://github.com/adafruit/Adafruit_BMP280_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_BMP280_Library-1.0.2.zip",
      "archiveFileName": "Adafruit_BMP280_Library-1.0.2.zip",
      "size": 6123,
      "checksum": "SHA-256:7bc8575888f45709a4e0f56173a9e292e07f9bb1b8611e4b9bb53f99a33498d5"
    },
    {
      "name": "Adafruit LIS3DH",
      "version": "1.0.0",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit LIS3DH Accelerometer.",
      "paragraph": "Designed specifically to work with the Adafruit LIS3DH Breakout, and is based on Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_LIS3DH",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_LIS3DH-1.0.0.zip",
      "archiveFileName": "Adafruit_LIS3DH-1.0.0.zip",
      "size": 9672,
      "checksum": "SHA-256:a0e824c7925fb43052895582f6282d97ad6c78487d48d309d5d5e9059f5b3b1e"
    },
    {
      "name": "Adafruit LIS3DH",
      "version": "1.0.1",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit LIS3DH Accelerometer.",
      "paragraph": "Designed specifically to work with the Adafruit LIS3DH Breakout, and is based on Adafruit's Unified Sensor Library.",
      "website": "https://github.com/adafruit/Adafruit_LIS3DH",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_LIS3DH-1.0.1.zip",
      "archiveFileName": "Adafruit_LIS3DH-1.0.1.zip",
      "size": 9666,
      "checksum": "SHA-256:e617fa77f8d4055b806900a6cffb4a970852e23d8cbfc1591d559ff50d36b919"
    },
    {
      "name": "Adafruit SHT31 Library",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for SHT31 temperature \u0026 humidity sensor.",
      "paragraph": "Arduino library for SHT31 temperature \u0026 humidity sensor.",
      "website": "https://github.com/adafruit/Adafruit_SHT31",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_SHT31_Library-1.0.0.zip",
      "archiveFileName": "Adafruit_SHT31_Library-1.0.0.zip",
      "size": 4347,
      "checksum": "SHA-256:cc56dc9df584149d75b4557c8672ccb015becf46d802965d964ea759eeb8ab03"
    },
    {
      "name": "Adafruit LiquidCrystal",
      "version": "1.0.0",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Fork of LiquidCrystal HD44780-compatible LCD driver library, now with support for ATtiny85.",
      "paragraph": "Fork of LiquidCrystal HD44780-compatible LCD driver library, now with support for ATtiny85.",
      "website": "https://github.com/adafruit/LiquidCrystal/",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Recommended"
      ],
      "url": "http://downloads.arduino.cc/libraries/adafruit/Adafruit_LiquidCrystal-1.0.0.zip",
      "archiveFileName": "Adafruit_LiquidCrystal-1.0.0.zip",
      "size": 19137,
      "checksum": "SHA-256:4de8b9c57e6d1ec7f2df0b5d89bf167228d0b272698e737a4def89e58d3e625a"
    },
    {
      "name": "SmartEverything SIGFOX LE51-868",
      "version": "1.0.0",
      "author": "Mik",
      "maintainer": "amel-tech \u003cdev@amel-tech.com\u003e",
      "sentence": "Library code for the TELEIT LE51-868 a SIGFOX module",
      "paragraph": "\u003cbr\u003eThe LE51-868 S is a high performance certified Short Range to Long Range module designed to cover the 863-870 MHz band working with the Telit Proprietary protocol and acting as a SIGFOX gateway.\u003cbr\u003eIt has high value technical characteristics such as a -126dBm sensitivity, ultra-low power consumption and up to 15.5dBm of Output power.\u003cbr\u003eIt is very easy to integrate, with small form factor and acts as a long range communication module connecting directly to SIGFOX network",
      "website": "https://github.com/ameltech/sme-le51-868-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/ameltech/SmartEverything_SIGFOX_LE51_868-1.0.0.zip",
      "archiveFileName": "SmartEverything_SIGFOX_LE51_868-1.0.0.zip",
      "size": 17372,
      "checksum": "SHA-256:1f831a79f5e5bbc293456b197a9d4329c62ebd29c64ea5c4018564737c17ab1c"
    },
    {
      "name": "SmartEverything SIGFOX LE51-868",
      "version": "2.0.0",
      "author": "Mik",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for the TELEIT LE51-868 a SIGFOX module",
      "paragraph": "\u003cbr\u003eThe LE51-868 S is a high performance certified Short Range to Long Range module designed to cover the 863-870 MHz band working with the Telit Proprietary protocol and acting as a SIGFOX gateway.\u003cbr\u003eIt has high value technical characteristics such as a -126dBm sensitivity, ultra-low power consumption and up to 15.5dBm of Output power.\u003cbr\u003eIt is very easy to integrate, with small form factor and acts as a long range communication module connecting directly to SIGFOX network",
      "website": "https://github.com/ameltech/sme-le51-868-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/ameltech/SmartEverything_SIGFOX_LE51_868-2.0.0.zip",
      "archiveFileName": "SmartEverything_SIGFOX_LE51_868-2.0.0.zip",
      "size": 126626,
      "checksum": "SHA-256:61c91587af17fca0fc40459ca50d90ed990531e4e830b7b395cdd767052ddf38"
    },
    {
      "name": "SmartEverything NFC NT3H1101",
      "version": "1.0.0",
      "author": "Mik",
      "maintainer": "amel-tech \u003cdev@amel-tech.com\u003e",
      "sentence": "Library code for the NXP NT3H1101 a NFC_I2C module",
      "paragraph": "\u003cbr\u003eThe NXP NT3H1101 is the first product of NXP's NTAG family offering both contactless and contact interfaces.\u003cbr\u003eIn addition to the passive NFC Forum compliant contactless interface, the IC features an I2C contact interface, which can communicate with a microcontroller if the NTAG I2C is powered from an external power supply.",
      "website": "https://github.com/ameltech/sme-nt3h1x01-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/ameltech/SmartEverything_NFC_NT3H1101-1.0.0.zip",
      "archiveFileName": "SmartEverything_NFC_NT3H1101-1.0.0.zip",
      "size": 17562,
      "checksum": "SHA-256:db5ebf6e586e7957c93b69873acf42f15565036bfdcc8733812a51b0608ee753"
    },
    {
      "name": "SmartEverything NFC NT3H1101",
      "version": "1.1.0",
      "author": "Mik",
      "maintainer": "axelelettronica \u003csmkk@axelelettronica.it\u003e",
      "sentence": "Library code for the NXP NT3H1101 a NFC_I2C module",
      "paragraph": "\u003cbr\u003eThe NXP NT3H1101 is the first product of NXP's NTAG family offering both contactless and contact interfaces.\u003cbr\u003eIn addition to the passive NFC Forum compliant contactless interface, the IC features an I2C contact interface, which can communicate with a microcontroller if the NTAG I2C is powered from an external power supply.",
      "website": "https://github.com/ameltech/sme-nt3h1x01-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/ameltech/SmartEverything_NFC_NT3H1101-1.1.0.zip",
      "archiveFileName": "SmartEverything_NFC_NT3H1101-1.1.0.zip",
      "size": 17837,
      "checksum": "SHA-256:6d5c47bb96593098c4b216ce4643623e8ef489b7de29eadb5c81146c4755429c"
    },
    {
      "name": "SmartEverything VL6180X",
      "version": "1.0.0",
      "author": "Mik",
      "maintainer": "amel-tech  \u003cdev@amel-tech.com\u003e",
      "sentence": "Library code for the Ambient Light \u0026 Proximity sensor from ST component.",
      "paragraph": "Combining an IR emitter, a range sensor and an ambient light sensor in a three-in-one ready-to-use reflowable package.\u003cbr\u003eThe VL6180X is easy to integrate and saves the end-product maker long and costly optical and mechanical design optimizations.",
      "website": "https://github.com/ameltech/sme-vl6180x-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/ameltech/SmartEverything_VL6180X-1.0.0.zip",
      "archiveFileName": "SmartEverything_VL6180X-1.0.0.zip",
      "size": 13905,
      "checksum": "SHA-256:ca5571def75aea2d4be2287d0e26490aa408313c869f395efcd19c335706ad63"
    },
    {
      "name": "SmartEverything VL6180X",
      "version": "1.0.1",
      "author": "Mik",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for the Ambient Light \u0026 Proximity sensor from ST component.",
      "paragraph": "Combining an IR emitter, a range sensor and an ambient light sensor in a three-in-one ready-to-use reflowable package.\u003cbr\u003eThe VL6180X is easy to integrate and saves the end-product maker long and costly optical and mechanical design optimizations.",
      "website": "https://github.com/ameltech/sme-vl6180x-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/ameltech/SmartEverything_VL6180X-1.0.1.zip",
      "archiveFileName": "SmartEverything_VL6180X-1.0.1.zip",
      "size": 13994,
      "checksum": "SHA-256:b86c8e6c718a2d5404782ea55f714e2acc5c7a5043b565868fe333b641cb5ca7"
    },
    {
      "name": "SmartEverything HTS221",
      "version": "1.0.0",
      "author": "Seve",
      "maintainer": "amel-tech  \u003cdev@amel-tech.com\u003e",
      "sentence": "Library code for HTS221 Capacitive digital sensor for relative humidity and temperature",
      "paragraph": "The HTS221 is an ultra compact sensor for relative humidity and temperature.\u003cbr\u003eIt includes a sensing element and a mixed signal ASIC to provide the measurement information through digital serial interfaces.\u003cbr\u003eThe sensing element consists of a polymer dielectric planar capacitor structure capable of detecting relative humidity variations and is manufactured using a dedicated ST process.\u003cbr\u003eThe HTS221 is available in a small top-holed cap land grid array (HLGA) package guaranteed to operate over a temperature range from -40 °C to +120 °C.",
      "website": "https://github.com/ameltech/sme-hts221-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/ameltech/SmartEverything_HTS221-1.0.0.zip",
      "archiveFileName": "SmartEverything_HTS221-1.0.0.zip",
      "size": 6883,
      "checksum": "SHA-256:5be4847a77f68f43569bf531182cc94772e2dc8d232d5bc6eb711423b1f38067"
    },
    {
      "name": "SmartEverything HTS221",
      "version": "1.1.0",
      "author": "Seve",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for HTS221 Capacitive digital sensor for relative humidity and temperature",
      "paragraph": "The HTS221 is an ultra compact sensor for relative humidity and temperature.\u003cbr\u003eIt includes a sensing element and a mixed signal ASIC to provide the measurement information through digital serial interfaces.\u003cbr\u003eThe sensing element consists of a polymer dielectric planar capacitor structure capable of detecting relative humidity variations and is manufactured using a dedicated ST process.\u003cbr\u003eThe HTS221 is available in a small top-holed cap land grid array (HLGA) package guaranteed to operate over a temperature range from -40 °C to +120 °C.",
      "website": "https://github.com/ameltech/sme-hts221-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/ameltech/SmartEverything_HTS221-1.1.0.zip",
      "archiveFileName": "SmartEverything_HTS221-1.1.0.zip",
      "size": 9007,
      "checksum": "SHA-256:a8f9221fafdaa449ad0425cdfc7cde917c9ae64f011a38f56c21511e20ce4e2a"
    },
    {
      "name": "SmartEverything SE868-AS",
      "version": "1.0.0",
      "author": "speirano",
      "maintainer": "amel-tech  \u003cdev@amel-tech.com\u003e",
      "sentence": "Library code for the Telit SE868-AS GPS System",
      "paragraph": "\u003cbr\u003eThe SE868-AS is a GPS Smart antenna module featuring an embedded antenna with an optimized RF path and standard SMT mounting.\u003cbr\u003eThe SE868-AS is designed to track and navigate GPS and QZSS constellations, giving the positioning data though standard UART at a very low power rate.",
      "website": "https://github.com/ameltech/sme-se868-a-library",
      "category": "Uncategorized",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/ameltech/SmartEverything_SE868_AS-1.0.0.zip",
      "archiveFileName": "SmartEverything_SE868_AS-1.0.0.zip",
      "size": 11168,
      "checksum": "SHA-256:0f5481ff65541bc33ad996f05368283f1a280ca831db1aa15a4952d59fc3ba36"
    },
    {
      "name": "SmartEverything SE868-AS",
      "version": "1.0.1",
      "author": "Seve",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for the Telit SE868-AS GPS System",
      "paragraph": "\u003cbr\u003eThe SE868-AS is a GPS Smart antenna module featuring an embedded antenna with an optimized RF path and standard SMT mounting.\u003cbr\u003eThe SE868-AS is designed to track and navigate GPS and QZSS constellations, giving the positioning data though standard UART at a very low power rate.",
      "website": "https://github.com/ameltech/sme-se868-a-library",
      "category": "Uncategorized",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/ameltech/SmartEverything_SE868_AS-1.0.1.zip",
      "archiveFileName": "SmartEverything_SE868_AS-1.0.1.zip",
      "size": 12992,
      "checksum": "SHA-256:584c3be43e81c8a86f4b7e4ad89419847554d51ca5a6b148d0a312e0e38e2139"
    },
    {
      "name": "SmartEverything LSM9DS1",
      "version": "1.0.0",
      "author": "Seve",
      "maintainer": "amel-tech  \u003cdev@amel-tech.com\u003e",
      "sentence": "Library code for LSM9DS1 iNEMO inertial module:3D accelerometer, 3D gyroscope, 3D magnetometer",
      "paragraph": "The LSM9DS1 is a system-in-package featuring a 3D digital linear acceleration sensor, a 3D digital angular rate sensor, and a 3D digital magnetic sensor.\u003cbr\u003eThe LSM9DS1 has a linear acceleration full scale of ±2g/±4g/±8/±16 g, a magnetic field full scale of ±4/±8/±12/±16 gauss and an angular rate of ±245/±500/±2000 dps.\u003cbr\u003eThe LSM9DS1 includes an I2C serial bus interface supporting standard and fast mode (100 kHz and 400 kHz) and an SPI serial standard interface.\u003cbr\u003eMagnetic, accelerometer and gyroscope sensing can be enabled or set in power-down mode separately for smart power management.",
      "website": "https://github.com/ameltech/sme-lsm9ds1-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/ameltech/SmartEverything_LSM9DS1-1.0.0.zip",
      "archiveFileName": "SmartEverything_LSM9DS1-1.0.0.zip",
      "size": 8558,
      "checksum": "SHA-256:3f93c45fad39360f0f34b7237c4cdb6d3bae2fee191801e0ab8c4a4c2cb1552f"
    },
    {
      "name": "SmartEverything LSM9DS1",
      "version": "1.1.0",
      "author": "Seve",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for LSM9DS1 iNEMO inertial module:3D accelerometer, 3D gyroscope, 3D magnetometer",
      "paragraph": "The LSM9DS1 is a system-in-package featuring a 3D digital linear acceleration sensor, a 3D digital angular rate sensor, and a 3D digital magnetic sensor.\u003cbr\u003eThe LSM9DS1 has a linear acceleration full scale of ±2g/±4g/±8/±16 g, a magnetic field full scale of ±4/±8/±12/±16 gauss and an angular rate of ±245/±500/±2000 dps.\u003cbr\u003eThe LSM9DS1 includes an I2C serial bus interface supporting standard and fast mode (100 kHz and 400 kHz) and an SPI serial standard interface.\u003cbr\u003eMagnetic, accelerometer and gyroscope sensing can be enabled or set in power-down mode separately for smart power management.",
      "website": "https://github.com/ameltech/sme-lsm9ds1-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/ameltech/SmartEverything_LSM9DS1-1.1.0.zip",
      "archiveFileName": "SmartEverything_LSM9DS1-1.1.0.zip",
      "size": 8477,
      "checksum": "SHA-256:76e2402e4184cd1b84f3f9ca80bd44ef824d84b7936faae72cb47eed1be040ec"
    },
    {
      "name": "SmartEverything LPS25H",
      "version": "1.0.0",
      "author": "Seve",
      "maintainer": "amel-tech  \u003cdev@amel-tech.com\u003e",
      "sentence": "Library code for LPS25H MEMS pressure sensor: 260-1260 hPa absolute digital output barometer",
      "paragraph": "The LPS25H is an ultra compact absolute piezoresistive pressure sensor.\u003cbr\u003eIt includes a monolithic sensing element and an IC interface able to take the information from the sensing element and to provide a digital signal to the external world.\u003cbr\u003e\u003cbr\u003eThe sensing element consists of a suspended membrane realized inside a single mono-silicon substrate.\u003cbr\u003eIt is capable to detect the absolute pressure and is manufactured with a dedicated process developed by ST.",
      "website": "https://github.com/ameltech/sme-lps25h-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/ameltech/SmartEverything_LPS25H-1.0.0.zip",
      "archiveFileName": "SmartEverything_LPS25H-1.0.0.zip",
      "size": 6443,
      "checksum": "SHA-256:742bc26d84dc7ad5a3e59b528f9c383c9ff66a83383c229919228346227d6197"
    },
    {
      "name": "SmartEverything LPS25H",
      "version": "1.1.0",
      "author": "Seve",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for LPS25H MEMS pressure sensor: 260-1260 hPa absolute digital output barometer",
      "paragraph": "The LPS25H is an ultra compact absolute piezoresistive pressure sensor.\u003cbr\u003eIt includes a monolithic sensing element and an IC interface able to take the information from the sensing element and to provide a digital signal to the external world.\u003cbr\u003e\u003cbr\u003eThe sensing element consists of a suspended membrane realized inside a single mono-silicon substrate.\u003cbr\u003eIt is capable to detect the absolute pressure and is manufactured with a dedicated process developed by ST.",
      "website": "https://github.com/ameltech/sme-lps25h-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Partner"
      ],
      "url": "http://downloads.arduino.cc/libraries/ameltech/SmartEverything_LPS25H-1.1.0.zip",
      "archiveFileName": "SmartEverything_LPS25H-1.1.0.zip",
      "size": 6365,
      "checksum": "SHA-256:2181afe2febb4321ce8b6906055f39b45f603d7fd212f7cdf0a8febef279ffed"
    },
    {
      "name": "Parse Arduino SDK",
      "version": "1.0.2",
      "author": "Parse, LLC.",
      "maintainer": "Parse, LLC.",
      "sentence": "A library that provides access to Parse",
      "paragraph": "Provides convenience methods to access the REST API on Parse.com from Arduino",
      "website": "https://github.com/ParsePlatform/Parse-SDK-Arduino",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ParsePlatform/Parse_Arduino_SDK-1.0.2.zip",
      "archiveFileName": "Parse_Arduino_SDK-1.0.2.zip",
      "size": 41449,
      "checksum": "SHA-256:bb72493b36286cce3cb1784d7eab588e8d6e776557e87bfac67869cb25bd21fd"
    },
    {
      "name": "Parse Arduino SDK",
      "version": "1.0.3",
      "author": "Parse, LLC.",
      "maintainer": "Parse, LLC.",
      "sentence": "A library that provides access to Parse",
      "paragraph": "Provides convenience methods to access the REST API on Parse.com from Arduino.",
      "website": "https://github.com/ParsePlatform/parse-embedded-sdks",
      "architectures": [
        "avr",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ParsePlatform/Parse_Arduino_SDK-1.0.3.zip",
      "archiveFileName": "Parse_Arduino_SDK-1.0.3.zip",
      "size": 56483,
      "checksum": "SHA-256:b062e7bad3d07593be7eced9fe1a5dead0561996a5ee33c865fefa54eb5c6ea2"
    },
    {
      "name": "AltSoftSerial",
      "version": "1.2.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Software emulated serial using hardware timers for improved compatibility",
      "paragraph": "Improved software emulated serial, using hardware timers for precise signal timing and improved compatibility with other interrupt-based libraries.",
      "website": "http://www.pjrc.com/teensy/td_libs_AltSoftSerial.html",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/AltSoftSerial-1.2.0.zip",
      "archiveFileName": "AltSoftSerial-1.2.0.zip",
      "size": 9997,
      "checksum": "SHA-256:c615a0d254b3d272d52274a9a94e826114c0e2d2c33c0cff262b02320d20a41f"
    },
    {
      "name": "AltSoftSerial",
      "version": "1.3.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Software emulated serial using hardware timers for improved compatibility",
      "paragraph": "Improved software emulated serial, using hardware timers for precise signal timing and improved compatibility with other interrupt-based libraries.",
      "website": "http://www.pjrc.com/teensy/td_libs_AltSoftSerial.html",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/AltSoftSerial-1.3.0.zip",
      "archiveFileName": "AltSoftSerial-1.3.0.zip",
      "size": 10052,
      "checksum": "SHA-256:80ed52c46aba6c8a4b7104af62d55a14409e018bf2724b0e20d78e0ff090d632"
    },
    {
      "name": "AltSoftSerial",
      "version": "1.4.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Software emulated serial using hardware timers for improved compatibility",
      "paragraph": "Improved software emulated serial, using hardware timers for precise signal timing and improved compatibility with other interrupt-based libraries.",
      "website": "http://www.pjrc.com/teensy/td_libs_AltSoftSerial.html",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/AltSoftSerial-1.4.0.zip",
      "archiveFileName": "AltSoftSerial-1.4.0.zip",
      "size": 11179,
      "checksum": "SHA-256:8557172c2b9b3961e849e716f74481019e011faf864e6eb51bf8c2e8b9b015c5"
    },
    {
      "name": "CapacitiveSensor",
      "version": "0.5.0",
      "author": "Paul Bagder, Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Create capacitive sensors that can detect touch or proximity.",
      "paragraph": "The capacitiveSensor library turns two or more Arduino pins into a capacitive sensor, which can sense the electrical capacitance of the human body. All the sensor setup requires is a medium to high value resistor and a piece of wire and a small (to large) piece of aluminum foil on the end. At its most sensitive, the sensor will start to sense a hand or body inches away from the sensor.",
      "website": "http://playground.arduino.cc/Main/CapacitiveSensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/CapacitiveSensor-0.5.0.zip",
      "archiveFileName": "CapacitiveSensor-0.5.0.zip",
      "size": 5840,
      "checksum": "SHA-256:723296f91db9078f8214363f43c73169a3bacbdaa60eb66720cf13adb1ea1a4a"
    },
    {
      "name": "CapacitiveSensor",
      "version": "0.5.1",
      "author": "Paul Bagder, Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Create capacitive sensors that can detect touch or proximity.",
      "paragraph": "The capacitiveSensor library turns two or more Arduino pins into a capacitive sensor, which can sense the electrical capacitance of the human body. All the sensor setup requires is a medium to high value resistor and a piece of wire and a small (to large) piece of aluminum foil on the end. At its most sensitive, the sensor will start to sense a hand or body inches away from the sensor.",
      "website": "http://playground.arduino.cc/Main/CapacitiveSensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/CapacitiveSensor-0.5.1.zip",
      "archiveFileName": "CapacitiveSensor-0.5.1.zip",
      "size": 6677,
      "checksum": "SHA-256:c2e96c1376d36865416ba8a4db8e6fb1a0f396a72094d233741291fb1db973a3"
    },
    {
      "name": "DmxSimple",
      "version": "3.1.0",
      "author": "Peter Knight, Tinker.it!",
      "maintainer": "Paul Stoffregen",
      "sentence": "Drive DMX controlled lights and visual effects available from DJ or theatrical suppliers.",
      "website": "https://code.google.com/p/tinkerit/wiki/DmxSimple",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/DmxSimple-3.1.0.zip",
      "archiveFileName": "DmxSimple-3.1.0.zip",
      "size": 39936,
      "checksum": "SHA-256:5ff17faf96cada8b9e1bbf4af34d5116c20b06120c5ee77b21404a0ab284b205"
    },
    {
      "name": "DS1307RTC",
      "version": "1.4.0",
      "author": "Michael Margolis",
      "maintainer": "Paul Stoffregen",
      "sentence": "Use a DS1307 Real Time Clock chip with the Time library",
      "website": "http://playground.arduino.cc/code/time",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/DS1307RTC-1.4.0.zip",
      "archiveFileName": "DS1307RTC-1.4.0.zip",
      "size": 4701,
      "checksum": "SHA-256:f6173942dccb34de309f5e13e8ddc1bee8a876e22e551260916957bd6ec066e8"
    },
    {
      "name": "Encoder",
      "version": "1.3.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Counts quadrature pulses from rotary \u0026 linear position encoders.",
      "paragraph": "Encoder counts pulses from quadrature encoded signals, which are commonly available from rotary knobs, motor or shaft sensors and other position sensors.",
      "website": "http://www.pjrc.com/teensy/td_libs_Encoder.html",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/Encoder-1.3.0.zip",
      "archiveFileName": "Encoder-1.3.0.zip",
      "size": 13828,
      "checksum": "SHA-256:d880a4ebd2dbf03b7c9b7801d2ee74e28cb5c79f798a91681e1c18e8da0d750a"
    },
    {
      "name": "Encoder",
      "version": "1.4.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Counts quadrature pulses from rotary \u0026 linear position encoders.",
      "paragraph": "Encoder counts pulses from quadrature encoded signals, which are commonly available from rotary knobs, motor or shaft sensors and other position sensors.",
      "website": "http://www.pjrc.com/teensy/td_libs_Encoder.html",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/Encoder-1.4.0.zip",
      "archiveFileName": "Encoder-1.4.0.zip",
      "size": 14601,
      "checksum": "SHA-256:1aeb0ed505facc28aedc4da4ab99f2c090d83a35fa09f1b1b0b62c3ab6497548"
    },
    {
      "name": "Encoder",
      "version": "1.4.1",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Counts quadrature pulses from rotary \u0026 linear position encoders.",
      "paragraph": "Encoder counts pulses from quadrature encoded signals, which are commonly available from rotary knobs, motor or shaft sensors and other position sensors.",
      "website": "http://www.pjrc.com/teensy/td_libs_Encoder.html",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/Encoder-1.4.1.zip",
      "archiveFileName": "Encoder-1.4.1.zip",
      "size": 14776,
      "checksum": "SHA-256:3a2717a5cb3ab749b3e14f252f4041fb45d928969ab8e71a07ab2891684baac0"
    },
    {
      "name": "FreqCount",
      "version": "1.2.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "FreqCount measures the frequency of a signal by counting the number of pulses during a fixed time.",
      "website": "http://www.pjrc.com/teensy/td_libs_FreqCount.html",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/FreqCount-1.2.0.zip",
      "archiveFileName": "FreqCount-1.2.0.zip",
      "size": 8106,
      "checksum": "SHA-256:7c221de8eac16a04a5041911169604b0f87e4b8c545799624bae44e29e9d4553"
    },
    {
      "name": "FreqMeasure",
      "version": "1.2.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "FreqMeasure measures the elapsed time during each cycle of an input frequency.",
      "website": "http://www.pjrc.com/teensy/td_libs_FreqMeasure.html",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/FreqMeasure-1.2.0.zip",
      "archiveFileName": "FreqMeasure-1.2.0.zip",
      "size": 7256,
      "checksum": "SHA-256:6a868572b155c6ce9124dbda5f68be081e21b2786fa6b1f090ee4c354f61e975"
    },
    {
      "name": "FrequencyTimer2",
      "version": "2.1.0",
      "author": "Jim Studt",
      "maintainer": "Paul Stoffregen",
      "sentence": "Generate a frequency using Timer2",
      "website": "http://playground.arduino.cc/Code/FrequencyTimer2",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/FrequencyTimer2-2.1.0.zip",
      "archiveFileName": "FrequencyTimer2-2.1.0.zip",
      "size": 5546,
      "checksum": "SHA-256:7b7a0be03a100a9aef45ff0e00313d0c2205c76ec305f9b8d0716fb55a7138d7"
    },
    {
      "name": "ILI9341_t3",
      "version": "1.0.0",
      "author": "Limor Fried, Adafruit, Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Optimized ILI9341 (320x240 Color TFT) Display",
      "website": "https://github.com/PaulStoffregen/ILI9341_t3",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/ILI9341_t3-1.0.0.zip",
      "archiveFileName": "ILI9341_t3-1.0.0.zip",
      "size": 25569,
      "checksum": "SHA-256:618a2f6c91055cde28e9586462b106097b64ccc6f0b7fa0351e46ebda1653c89"
    },
    {
      "name": "MsTimer2",
      "version": "1.1.0",
      "author": "Javier Valencia",
      "maintainer": "Paul Stoffregen",
      "sentence": "Run an interrupt function using Timer2",
      "website": "http://playground.arduino.cc/Main/MsTimer2",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/MsTimer2-1.1.0.zip",
      "archiveFileName": "MsTimer2-1.1.0.zip",
      "size": 4433,
      "checksum": "SHA-256:7f1429e22804bd4781ade0f129f531b6853fc2ba2ce2c53cc51ad0eb53bbb25f"
    },
    {
      "name": "OctoWS2811",
      "version": "1.2.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Control thousands of WS2812B / NeoPixel LEDs at video refresh speeds",
      "paragraph": "OctoWS2811 is a high performance WS2811 \u0026 WS2812 \u0026 WS2812B LED library featuring simultaneous update to 8 LED strips using efficient DMA-based data transfer.  Minimal CPU impact and double buffering allows complex animation. A VideoDisplay example is included, capable of scaling to extremely large LED installations.",
      "website": "http://www.pjrc.com/teensy/td_libs_OctoWS2811.html",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/OctoWS2811-1.2.0.zip",
      "archiveFileName": "OctoWS2811-1.2.0.zip",
      "size": 172393,
      "checksum": "SHA-256:6467dbaa63fd56eff41be71e85f16c7f25003adbecce6fd9128f7be3a6e0f83d"
    },
    {
      "name": "OneWire",
      "version": "2.3.0",
      "author": "Jim Studt, Tom Pollard, Robin James, Glenn Trewitt, Jason Dangel, Guillermo Lovato, Paul Stoffregen, Scott Roberts, Bertrik Sikken, Mark Tillotson, Ken Butcher, Roger Clark, Love Nystrom",
      "maintainer": "Paul Stoffregen",
      "sentence": "Access 1-wire temperature sensors, memory and other chips.",
      "website": "http://www.pjrc.com/teensy/td_libs_OneWire.html",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/OneWire-2.3.0.zip",
      "archiveFileName": "OneWire-2.3.0.zip",
      "size": 16008,
      "checksum": "SHA-256:92cdc97bd80b848460766990046c13f18618ee3517af2cbd399f96462a7b3e2b"
    },
    {
      "name": "OneWire",
      "version": "2.3.1",
      "author": "Jim Studt, Tom Pollard, Robin James, Glenn Trewitt, Jason Dangel, Guillermo Lovato, Paul Stoffregen, Scott Roberts, Bertrik Sikken, Mark Tillotson, Ken Butcher, Roger Clark, Love Nystrom",
      "maintainer": "Paul Stoffregen",
      "sentence": "Access 1-wire temperature sensors, memory and other chips.",
      "website": "http://www.pjrc.com/teensy/td_libs_OneWire.html",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/OneWire-2.3.1.zip",
      "archiveFileName": "OneWire-2.3.1.zip",
      "size": 16290,
      "checksum": "SHA-256:0fa3c21216333c0995fe0ed55210e5f05f4f2385739fdf80ce6e4c43af79144f"
    },
    {
      "name": "OneWire",
      "version": "2.3.2",
      "author": "Jim Studt, Tom Pollard, Robin James, Glenn Trewitt, Jason Dangel, Guillermo Lovato, Paul Stoffregen, Scott Roberts, Bertrik Sikken, Mark Tillotson, Ken Butcher, Roger Clark, Love Nystrom",
      "maintainer": "Paul Stoffregen",
      "sentence": "Access 1-wire temperature sensors, memory and other chips.",
      "website": "http://www.pjrc.com/teensy/td_libs_OneWire.html",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/OneWire-2.3.2.zip",
      "archiveFileName": "OneWire-2.3.2.zip",
      "size": 16874,
      "checksum": "SHA-256:ee45fdeb7b865c52fd38b8732c2237e8ac8c6edcc7536d5985860785e8c5b513"
    },
    {
      "name": "PS2Keyboard",
      "version": "2.4.0",
      "author": "Christian Weichel, Paul Stoffregen, L. Abraham Smith, Cuningan",
      "maintainer": "Paul Stoffregen",
      "sentence": "Use a PS/2 Keyboard for input",
      "website": "https://github.com/PaulStoffregen/PS2Keyboard",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/PS2Keyboard-2.4.0.zip",
      "archiveFileName": "PS2Keyboard-2.4.0.zip",
      "size": 10796,
      "checksum": "SHA-256:2e2b9c69ebb1020c0aa2bd90eef1d6bb2c4522b4189bb064c9bd02371166fc03"
    },
    {
      "name": "PulsePosition",
      "version": "1.0.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Send and receive multiple high resolution PPM encoded signal streams.",
      "paragraph": "Pulse Position Modulation (PPM) is a single-wire signal that encodes many Pulse Width Modulated (PWM) signals.  It's commonly used in radio control of hobby aircraft and drones, where a radio transmits the PPM signal, which is decoded into many PWM signals to control RC servo motors.  PulsePosition can simultaneously receive and send up to 8 PPM streams.",
      "website": "http://www.pjrc.com/teensy/td_libs_PulsePosition.html",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/PulsePosition-1.0.0.zip",
      "archiveFileName": "PulsePosition-1.0.0.zip",
      "size": 8893,
      "checksum": "SHA-256:881228caa880e7742661768e6982cee319424ef2d586533dc4a425eb1909be50"
    },
    {
      "name": "SerialFlash",
      "version": "0.1.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Access SPI Serial Flash memory with filesystem-like functions",
      "paragraph": "SerialFlash provides low-latency, high performance access to SPI Flash memory with a filesystem-like interface. Familiar file-based functions, similar to the SD library, are used to access data.",
      "website": "https://github.com/PaulStoffregen/SerialFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/SerialFlash-0.1.0.zip",
      "archiveFileName": "SerialFlash-0.1.0.zip",
      "size": 21032,
      "checksum": "SHA-256:573919cb5b22d7d63ec1939b8512465fb612139afed048c935912306ca76b4a4"
    },
    {
      "name": "SerialFlash",
      "version": "0.3.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Access SPI Serial Flash memory with filesystem-like functions",
      "paragraph": "SerialFlash provides low-latency, high performance access to SPI Flash memory with a filesystem-like interface. Familiar file-based functions, similar to the SD library, are used to access data.",
      "website": "https://github.com/PaulStoffregen/SerialFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/SerialFlash-0.3.0.zip",
      "archiveFileName": "SerialFlash-0.3.0.zip",
      "size": 29102,
      "checksum": "SHA-256:473499251e2b92cb755730ef9f2746e7e5edfcda7b5b45864d5d7af6d9dd7a97"
    },
    {
      "name": "SerialFlash",
      "version": "0.4.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Access SPI Serial Flash memory with filesystem-like functions",
      "paragraph": "SerialFlash provides low-latency, high performance access to SPI Flash memory with a filesystem-like interface. Familiar file-based functions, similar to the SD library, are used to access data.",
      "website": "https://github.com/PaulStoffregen/SerialFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/SerialFlash-0.4.0.zip",
      "archiveFileName": "SerialFlash-0.4.0.zip",
      "size": 37601,
      "checksum": "SHA-256:03768e679f3fb97a1b6cb3455832b91d4b27f999bb9724014d3eac8a1022e1a2"
    },
    {
      "name": "TimeAlarms",
      "version": "1.4.0",
      "author": "Michael Margolis",
      "maintainer": "Paul Stoffregen",
      "sentence": "Perform tasks at specific times or after specific intervals.",
      "paragraph": "The Alarm library is a companion to the Time library that makes it easy to perform tasks at specific times or after specific intervals.  Tasks scheduled at a particular time of day are called Alarms, tasks scheduled after an interval of time has elapsed are called Timers.  These tasks can be created to continuously repeat or to occur once only.",
      "website": "http://playground.arduino.cc/code/time",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/TimeAlarms-1.4.0.zip",
      "archiveFileName": "TimeAlarms-1.4.0.zip",
      "size": 11201,
      "checksum": "SHA-256:af070a3a76ff624aefd9c1f3a2046075d8b6bcaed4608957699ab3196d700e5e"
    },
    {
      "name": "Time",
      "version": "1.4.0",
      "author": "Michael Margolis",
      "maintainer": "Paul Stoffregen",
      "sentence": "Timekeeping functionality for Arduino",
      "paragraph": "Date and Time functions, with provisions to synchronize to external time sources like GPS and NTP (Internet).",
      "website": "http://playground.arduino.cc/code/time",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/Time-1.4.0.zip",
      "archiveFileName": "Time-1.4.0.zip",
      "size": 23626,
      "checksum": "SHA-256:ed838e91cc432a67b145ff6797eedf851821e30880244e0c483bada7da99c782"
    },
    {
      "name": "Time",
      "version": "1.5.0",
      "author": "Michael Margolis",
      "maintainer": "Paul Stoffregen",
      "sentence": "Timekeeping functionality for Arduino",
      "paragraph": "Date and Time functions, with provisions to synchronize to external time sources like GPS and NTP (Internet).  This library is often used together with TimeAlarms and DS1307RTC.",
      "website": "http://playground.arduino.cc/code/time",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/Time-1.5.0.zip",
      "archiveFileName": "Time-1.5.0.zip",
      "size": 25873,
      "checksum": "SHA-256:9d5eba61e3a7d80a902d4f8029d5d0b10f0f5b837825c3adbdacebf17c566003"
    },
    {
      "name": "TimerOne",
      "version": "1.1.0",
      "author": "Jesse Tane, Jérôme Despatis, Michael Polli, Dan Clemens, Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Use hardware Timer1 for finer PWM control and/or running an periodic interrupt function",
      "website": "http://playground.arduino.cc/Code/Timer1",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/TimerOne-1.1.0.zip",
      "archiveFileName": "TimerOne-1.1.0.zip",
      "size": 7617,
      "checksum": "SHA-256:41d7794000d7b55de4bac92dd5786cd434aa2788606bdb85cd7d9d055a20edd2"
    },
    {
      "name": "TimerThree",
      "version": "1.1.0",
      "author": "Jesse Tane, Jérôme Despatis, Michael Polli, Dan Clemens, Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Use hardware Timer3 for finer PWM control and/or running an periodic interrupt function",
      "website": "http://playground.arduino.cc/Code/Timer1",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/TimerThree-1.1.0.zip",
      "archiveFileName": "TimerThree-1.1.0.zip",
      "size": 7676,
      "checksum": "SHA-256:57b1dca773af015a209c2d743e1d6502b60444fdf53643bf1757f89513333729"
    },
    {
      "name": "Tlc5940",
      "version": "0.15.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Use the Texas Instruments TLC5940 16-channel LED Driver",
      "paragraph": "The TLC5940 is a 16 channel PWM unit with 12 bit duty cycle control (0 - 4095), 6 bit current limit control (0 - 63), and a daisy chainable serial interface. It is handy for expanding the number of PWM outputs available.",
      "website": "http://playground.arduino.cc/Learning/TLC5940",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/Tlc5940-0.15.0.zip",
      "archiveFileName": "Tlc5940-0.15.0.zip",
      "size": 70715,
      "checksum": "SHA-256:b3151815cbcee3ac7fec016d836c5062fa06c5e8d417d8d3833e32d7f55121bd"
    },
    {
      "name": "XPT2046_Touchscreen",
      "version": "1.0.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Touchscreens using the XPT2046 controller chip.",
      "paragraph": "Many very low cost color TFT displays with touch screens have this chip.",
      "website": "https://github.com/PaulStoffregen/XPT2046_Touchscreen",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/XPT2046_Touchscreen-1.0.0.zip",
      "archiveFileName": "XPT2046_Touchscreen-1.0.0.zip",
      "size": 75368,
      "checksum": "SHA-256:437509f1e423fb932061007563f773128f5c60b4226559d75b262fac9c021111"
    },
    {
      "name": "XPT2046_Touchscreen",
      "version": "1.1.0",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Touchscreens using the XPT2046 controller chip.",
      "paragraph": "Many very low cost color TFT displays with touch screens have this chip.",
      "website": "https://github.com/PaulStoffregen/XPT2046_Touchscreen",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaulStoffregen/XPT2046_Touchscreen-1.1.0.zip",
      "archiveFileName": "XPT2046_Touchscreen-1.1.0.zip",
      "size": 75655,
      "checksum": "SHA-256:c7cc8383fe47e64e4a383515e730f6ced5a0d9fdb9b464f304e4bdcb5aa039da"
    },
    {
      "name": "SparkFun Graphic LCD Serial Backpack",
      "version": "1.0.0",
      "author": "Mike Hord",
      "maintainer": "SparkFun Electronics",
      "sentence": "Library containing functions for SparkFun Graphic LCD Serial Backpack",
      "paragraph": "Library containing functions for SparkFun Graphic LCD Serial Backpack",
      "website": "https://github.com/sparkfun/GraphicLCD_Serial_Backpack",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_Graphic_LCD_Serial_Backpack-1.0.0.zip",
      "archiveFileName": "SparkFun_Graphic_LCD_Serial_Backpack-1.0.0.zip",
      "size": 63466,
      "checksum": "SHA-256:98c54275e283231b61e6550c8bd03d0645caaa1f8c1b605c09f7c8ad03fdea41"
    },
    {
      "name": "SparkFun Graphic LCD Serial Backpack",
      "version": "1.0.1",
      "author": "Mike Hord",
      "maintainer": "SparkFun Electronics \u003ctechsupport@SparkFun.com\u003e",
      "sentence": "Library containing functions for SparkFun Graphic LCD Serial Backpack",
      "paragraph": "Library containing functions for SparkFun Graphic LCD Serial Backpack",
      "website": "https://github.com/sparkfun/GraphicLCD_Serial_Backpack",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_Graphic_LCD_Serial_Backpack-1.0.1.zip",
      "archiveFileName": "SparkFun_Graphic_LCD_Serial_Backpack-1.0.1.zip",
      "size": 9338,
      "checksum": "SHA-256:3b10d5dcfdb14b2dc40cc86bc2536220e1ea1d6a545225d6387a4b16cc5c641c"
    },
    {
      "name": "SparkFun Color LCD Shield",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "This is an Arduino library for SparkFun's Color LCD Shield",
      "paragraph": "This is an Arduino library for SparkFun's Color LCD Shield",
      "website": "https://github.com/sparkfun/SparkFun_Color_LCD_Shield_Arduino_Library",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_Color_LCD_Shield-1.0.0.zip",
      "archiveFileName": "SparkFun_Color_LCD_Shield-1.0.0.zip",
      "size": 20752,
      "checksum": "SHA-256:39a46d154bb05e1363f0a04d26292ca4ca5c79d66ff9a71fd1464b508a671dee"
    },
    {
      "name": "SparkFun Color LCD Shield",
      "version": "1.0.1",
      "author": "Jim@SparkFun Electronics",
      "maintainer": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "sentence": "This is an Arduino library for SparkFun's Color LCD Shield",
      "paragraph": "This is an Arduino library for SparkFun's Color LCD Shield",
      "website": "https://github.com/sparkfun/SparkFun_Color_LCD_Shield_Arduino_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_Color_LCD_Shield-1.0.1.zip",
      "archiveFileName": "SparkFun_Color_LCD_Shield-1.0.1.zip",
      "size": 20785,
      "checksum": "SHA-256:5b9f74654490374f618b76e7fa5594b51930711d071f328d7f8510aa2abec27a"
    },
    {
      "name": "Phant",
      "version": "2.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "A simple interface to post data to a phant stream.",
      "paragraph": "A simple interface to post, get, or clear data from a Phant stream (data.sparkfun.com).",
      "website": "https://github.com/sparkfun/phant-arduino",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/Phant-2.0.0.zip",
      "archiveFileName": "Phant-2.0.0.zip",
      "size": 5341,
      "checksum": "SHA-256:2d557631d348672756b3d7d0bac46f1f2908034c25f75ee14a34fc3e53c6490d"
    },
    {
      "name": "Phant",
      "version": "2.2.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "A simple interface to post data to a phant stream.",
      "paragraph": "A simple interface to post, get, or clear data from a Phant stream (data.sparkfun.com).",
      "website": "https://github.com/sparkfun/phant-arduino",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/Phant-2.2.0.zip",
      "archiveFileName": "Phant-2.2.0.zip",
      "size": 5376,
      "checksum": "SHA-256:c78354e55cddf0464eaf92539848ab53e526d5c78f2773dc5b2359bdd793b434"
    },
    {
      "name": "Micro OLED Breakout",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "Breakout board for a monochrome, 0.66\", 64x48 OLED display.",
      "paragraph": "Breakout board for a monochrome, 0.66\", 64x48 OLED display.",
      "website": "https://github.com/sparkfun/Micro_OLED_Breakout",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/Micro_OLED_Breakout-1.0.0.zip",
      "archiveFileName": "Micro_OLED_Breakout-1.0.0.zip",
      "size": 44715,
      "checksum": "SHA-256:4a63fed3475691dcd9e24cef144357832111c6ff8873865255cf241a9ccd92f2"
    },
    {
      "name": "SparkFun Micro OLED Breakout",
      "version": "1.1.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library for the \u003ca href=\"https://www.sparkfun.com/products/13003\"\u003eSparkFun Micro OLED Breakout\u003c/a\u003e.",
      "paragraph": "Library for the Micro OLED Breakout, a monochrome, 0.66\", 64x48 OLED display. Several basic functionlity examples included.",
      "website": "https://github.com/sparkfun/SparkFun_Micro_OLED_Arduino_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_Micro_OLED_Breakout-1.1.1.zip",
      "archiveFileName": "SparkFun_Micro_OLED_Breakout-1.1.1.zip",
      "size": 44735,
      "checksum": "SHA-256:5877d56d3995bb634c73565c4d78dfde9af4a5e5e1138a5b0991944ada0a2ee8"
    },
    {
      "name": "SparkFun Micro OLED Breakout",
      "version": "1.1.2",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library for the \u003ca href=\"https://www.sparkfun.com/products/13003\"\u003eSparkFun Micro OLED Breakout\u003c/a\u003e.",
      "paragraph": "Library for the Micro OLED Breakout, a monochrome, 0.66\", 64x48 OLED display. Several basic functionlity examples included.",
      "website": "https://github.com/sparkfun/SparkFun_Micro_OLED_Arduino_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_Micro_OLED_Breakout-1.1.2.zip",
      "archiveFileName": "SparkFun_Micro_OLED_Breakout-1.1.2.zip",
      "size": 45437,
      "checksum": "SHA-256:790cd372c626c2cf5eeb20832524b455314441d134eeb23d8773f81f1582a299"
    },
    {
      "name": "MicroView",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "The MicroView is a chip-sized Arduino with a built-in OLED, available from SparkFun Electronics",
      "paragraph": "The MicroView is a chip-sized Arduino with a built-in OLED, available from SparkFun Electronics",
      "website": "https://github.com/sparkfun/MicroView",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/MicroView-1.0.0.zip",
      "archiveFileName": "MicroView-1.0.0.zip",
      "size": 1089255,
      "checksum": "SHA-256:1ab0c0e0e7627b25c76b50d2c7389db07c83839f91ebc8095902ad08e45b934e"
    },
    {
      "name": "SparkFun MicroView",
      "version": "1.0.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "The MicroView is a chip-sized Arduino with a built-in OLED, available from SparkFun Electronics",
      "paragraph": "The \u003ca href=\"https://www.sparkfun.com/products/12923\"\u003eMicroView\u003c/a\u003e is a chip-sized Arduino with a built-in OLED, available from SparkFun Electronics.",
      "website": "https://github.com/sparkfun/SparkFun_MicroView_Arduino_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_MicroView-1.0.1.zip",
      "archiveFileName": "SparkFun_MicroView-1.0.1.zip",
      "size": 1090060,
      "checksum": "SHA-256:887ebfc3997ed20a25d2f34dc1cb2f295e47fb38257c2815a8ae0203c3d957b3"
    },
    {
      "name": "SparkFun VKey Arduino Library",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Arduino Library for interfacing the SparkFun VKey Voltage Keypad ().",
      "paragraph": "Arduino Library for interfacing the SparkFun VKey Voltage Keypad (https://www.sparkfun.com/products/12080).",
      "website": "https://github.com/sparkfun/SparkFun_VKey_Voltage_Keypad_Arduino_Library",
      "category": "Signal Input/Output",
      "architectures": [
        "AVR"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_VKey_Arduino_Library-1.0.0.zip",
      "archiveFileName": "SparkFun_VKey_Arduino_Library-1.0.0.zip",
      "size": 7235,
      "checksum": "SHA-256:72bf113fa8884aac41c682cf34991a9324d3e558e2c86cd1227cabb87ee8ce8f"
    },
    {
      "name": "SparkFun VKey Arduino Library",
      "version": "1.0.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Arduino Library for interfacing the SparkFun VKey Voltage Keypad.",
      "paragraph": "Arduino Library for interfacing the SparkFun VKey Voltage Keypad (https://www.sparkfun.com/products/12080). Gives the user access to a 12 switch keypad using only a few I/O pins.",
      "website": "https://github.com/sparkfun/SparkFun_VKey_Voltage_Keypad_Arduino_Library",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_VKey_Arduino_Library-1.0.1.zip",
      "archiveFileName": "SparkFun_VKey_Arduino_Library-1.0.1.zip",
      "size": 7340,
      "checksum": "SHA-256:218f4ee1dc6544a331b045f962a66d898b2fe9a20e1e1699ab0079b3a7ea3c39"
    },
    {
      "name": "SparkFun VKey Arduino Library",
      "version": "1.0.2",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Arduino Library for interfacing the SparkFun VKey Voltage Keypad.",
      "paragraph": "Arduino Library for interfacing the SparkFun VKey Voltage Keypad (https://www.sparkfun.com/products/12080). Gives the user access to a 12 switch keypad using only a few I/O pins.",
      "website": "https://github.com/sparkfun/SparkFun_VKey_Voltage_Keypad_Arduino_Library",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_VKey_Arduino_Library-1.0.2.zip",
      "archiveFileName": "SparkFun_VKey_Arduino_Library-1.0.2.zip",
      "size": 7412,
      "checksum": "SHA-256:682b88fa03d39e8a870619e5b67b6c1e42d524ea0186364ac9010df847e3674d"
    },
    {
      "name": "SparkFun MPL3115A2 Altitude and Pressure Sensor Breakout",
      "version": "1.2.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "SparkFun's breakout for the Freescale MPL3115A2 Precision Altimeter",
      "paragraph": "Breakout board for MEMS altitude sensor capable of 30cm altitude resolution.",
      "website": "https://github.com/sparkfun/SparkFun_MPL3115A2_Breakout_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_MPL3115A2_Altitude_and_Pressure_Sensor_Breakout-1.2.0.zip",
      "archiveFileName": "SparkFun_MPL3115A2_Altitude_and_Pressure_Sensor_Breakout-1.2.0.zip",
      "size": 29254,
      "checksum": "SHA-256:34848f3e5f4571cd4ccec8877c0ea62dea018126a3617046be6e30b6edbf0195"
    },
    {
      "name": "SparkFun TLC5940",
      "version": "1.0.2",
      "author": "Alex Leone \u003cacleone~AT~gmail.com\u003e, SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library for the TLC5940 IC.",
      "paragraph": "The TLC5940 gives the user 16 channel PWM control and can be daisy chained over the serial interface. This library works with the \u003ca href=\"https://www.sparkfun.com/products/10616\"\u003eSparkFun LED Driver Breakout\u003c/a\u003e and the \u003ca href=\"https://www.sparkfun.com/products/10615\"\u003eSparkFun PWM Shield\u003c/a\u003e.",
      "website": "https://github.com/sparkfun/SparkFun_TLC5940_Arduino_Library",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_TLC5940-1.0.2.zip",
      "archiveFileName": "SparkFun_TLC5940-1.0.2.zip",
      "size": 61400,
      "checksum": "SHA-256:39ba17a3f490bcf839e87a05b821a19c1848828a59c2622ef5db1c6037bc7fcb"
    },
    {
      "name": "SparkFun TLC5940",
      "version": "1.1.0",
      "author": "Alex Leone \u003cacleone~AT~gmail.com\u003e, SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library for the TLC5940 IC.",
      "paragraph": "The TLC5940 gives the user 16 channel PWM control and can be daisy chained over the serial interface. This library works with the \u003ca href=\"https://www.sparkfun.com/products/10616\"\u003eSparkFun LED Driver Breakout\u003c/a\u003e and the \u003ca href=\"https://www.sparkfun.com/products/10615\"\u003eSparkFun PWM Shield\u003c/a\u003e.",
      "website": "https://github.com/sparkfun/SparkFun_TLC5940_Arduino_Library",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_TLC5940-1.1.0.zip",
      "archiveFileName": "SparkFun_TLC5940-1.1.0.zip",
      "size": 61549,
      "checksum": "SHA-256:0972277399f876227b04c99a05bfb32d25e6eeffa081b9425455c9c399e5c45a"
    },
    {
      "name": "SparkFun MiniMoto",
      "version": "1.1.0",
      "author": "Mike H@SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Arduino Library for the SparkFun MiniMoto board, which uses the TI DRV8830 IC for I2C low-voltage DC motor control.",
      "paragraph": "Communication protocol of I2C, operating voltage of 2.7V to 6.8V and is good for small robotics projects. This library provides basic functionality.",
      "website": "https://github.com/sparkfun/SparkFun_MiniMoto_Arduino_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_MiniMoto-1.1.0.zip",
      "archiveFileName": "SparkFun_MiniMoto-1.1.0.zip",
      "size": 6518,
      "checksum": "SHA-256:581aae9eccc8b6b67c7b90ee83d5bd2fa6627e28b4a2904fa6240252c00f9996"
    },
    {
      "name": "SparkFun MiniGen",
      "version": "1.1.0",
      "author": "Mike Hord@SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "SparkFun MiniGen library allows the user to generate sine, square, or triangle waves at up to 3MHz, and approximately 1Vp-p.",
      "paragraph": "Communication occurs via SPI, and eanbles the 10-bit DAC for accuracy.",
      "website": "https://github.com/sparkfun/SparkFun_MiniGen_Arduino_Library",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_MiniGen-1.1.0.zip",
      "archiveFileName": "SparkFun_MiniGen-1.1.0.zip",
      "size": 8771,
      "checksum": "SHA-256:30dd22197f5539a6a6e0ae9d6673bab034b1735175d5eab549aacdcbb0115e3e"
    },
    {
      "name": "SparkFun MetaWatch",
      "version": "1.1.0",
      "author": "Jim@SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "A simple library to interface from Arduino to BlueSMiRF to MetaWatch",
      "paragraph": "Sets up auto-connection between Arduino and the MetaWatch, and gives user control over the backlight, time settings, and battery level readings.",
      "website": "https://github.com/sparkfun/SparkFun_MetaWatch_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_MetaWatch-1.1.0.zip",
      "archiveFileName": "SparkFun_MetaWatch-1.1.0.zip",
      "size": 15172,
      "checksum": "SHA-256:2ca412817b9391bbf5c4c35cc2b5a26e46878054f9b24d0e58615aeaa34f3c3f"
    },
    {
      "name": "SparkFun VL6180 Sensor",
      "version": "1.1.0",
      "author": "Casey Kuhns@SparkFun \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "The VL6180 combines an IR emitter, a range sensor, and an ambient light sensor together for you to easily use and communicate with via an I2C interface.",
      "paragraph": "Library allows you to read distance and light outputs from the sensor, outputting the data via a serial connection.",
      "website": "https://github.com/sparkfun/SparkFun_ToF_Range_Finder-VL6180_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_VL6180_Sensor-1.1.0.zip",
      "archiveFileName": "SparkFun_VL6180_Sensor-1.1.0.zip",
      "size": 10110,
      "checksum": "SHA-256:4186386265b793342f043cbb77957c87570d2c6cee41ed4aba2d222f5e215be4"
    },
    {
      "name": "Sparkfun T5403 Barometric Sensor Library",
      "version": "1.0.1",
      "author": "Casey Kuhns \u003ccasey.kuhns@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Arduino Library for interfacing with the T5403 Barometric sensor.",
      "paragraph": "The T5403 by Epcos is a low cost I2C barometric pressure sensor. This sensor can be used in weather stations and for altitude estimations.",
      "website": "https://github.com/sparkfun/SparkFun_T5403_Barometric_Sensor_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/Sparkfun_T5403_Barometric_Sensor_Library-1.0.1.zip",
      "archiveFileName": "Sparkfun_T5403_Barometric_Sensor_Library-1.0.1.zip",
      "size": 8572,
      "checksum": "SHA-256:91113b2e124757f51c77b91220de76aec92952b41d3541886bf7d022216ea984"
    },
    {
      "name": "SX1509 IO Expander",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "Arduino library and hardware files for the SX1509 IO Expander Breakout board.",
      "paragraph": "Arduino library and hardware files for the SX1509 IO Expander Breakout board.",
      "website": "https://github.com/sparkfun/SX1509_IO-Expander",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SX1509_IO_Expander-1.0.0.zip",
      "archiveFileName": "SX1509_IO_Expander-1.0.0.zip",
      "size": 30383,
      "checksum": "SHA-256:e2d5a5659258d0ab1636bbc7a6d7ab2e91c2ac0d66ab5bdb07049e0793602853"
    },
    {
      "name": "SX1509 IO Expander",
      "version": "2.0.1",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "Arduino library and hardware files for the SX1509 IO Expander Breakout board.",
      "paragraph": "Arduino library and hardware files for the SX1509 IO Expander Breakout board.",
      "website": "https://github.com/sparkfun/SX1509_IO-Expander",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SX1509_IO_Expander-2.0.1.zip",
      "archiveFileName": "SX1509_IO_Expander-2.0.1.zip",
      "size": 1352424,
      "checksum": "SHA-256:60d34dcb1fa138e0ed2efce13822f98d66ae7f7900694719a2188e980766d49c"
    },
    {
      "name": "SparkFun SX1509 IO Expander",
      "version": "2.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "Arduino library and hardware files for the SX1509 IO Expander Breakout board.",
      "paragraph": "Arduino library and hardware files for the SX1509 IO Expander Breakout board.",
      "website": "https://github.com/sparkfun/SX1509_IO-Expander",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_SX1509_IO_Expander-2.0.0.zip",
      "archiveFileName": "SparkFun_SX1509_IO_Expander-2.0.0.zip",
      "size": 1352732,
      "checksum": "SHA-256:b6f73aa41f9558b26c39f11cd57246b0b394feb3173e0fb309635b4bbbea6e63"
    },
    {
      "name": "LSM9DS0 Breakout",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "A breakout board for ST Micro's LSM9DS0 -- a 3D accelerometer, gyroscop, and magnetometer.",
      "paragraph": "A breakout board for ST Micro's LSM9DS0 -- a 3D accelerometer, gyroscop, and magnetometer.",
      "website": "https://github.com/sparkfun/LSM9DS0_Breakout",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/LSM9DS0_Breakout-1.0.0.zip",
      "archiveFileName": "LSM9DS0_Breakout-1.0.0.zip",
      "size": 33335,
      "checksum": "SHA-256:0a6d15c3f1b1c4c2db1b4bf7a3a6e4fa817f0dce0224db8a6dc6dbb0c76f7308"
    },
    {
      "name": "SparkFun LSM9DS0 Breakout",
      "version": "1.0.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library for the 9 degree of freedom IC -ST Micro's LSM9DS0.",
      "paragraph": "A \u003ca href=\"https://www.sparkfun.com/products/12636\"\u003ebreakout board\u003c/a\u003e for ST Micro's LSM9DS0 -- a 3D accelerometer, gyroscop, and magnetometer. This library gives the user 9DOF functionality.",
      "website": "https://github.com/sparkfun/SparkFun_LSM9DS0_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_LSM9DS0_Breakout-1.0.1.zip",
      "archiveFileName": "SparkFun_LSM9DS0_Breakout-1.0.1.zip",
      "size": 33726,
      "checksum": "SHA-256:6d407356655012c0b39cf9749c0e2b002d4dc175a591df0b50df2af3dd91e25b"
    },
    {
      "name": "SparkFun HTU21D Humidity and Temperature Sensor Breakout",
      "version": "1.1.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "HTU21D temperature and humidity densor breakout.",
      "paragraph": "This is a breadboard friendly breakout board for the Measurement Specialties HTU21D, a high-precision, low-power digital temperature and humidity sensor.",
      "website": "https://github.com/sparkfun/SparkFun_HTU21D_Breakout_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_HTU21D_Humidity_and_Temperature_Sensor_Breakout-1.1.1.zip",
      "archiveFileName": "SparkFun_HTU21D_Humidity_and_Temperature_Sensor_Breakout-1.1.1.zip",
      "size": 7166,
      "checksum": "SHA-256:b8126d16e2723d6a33478d2ddad2af141eef535e1af602017bceba222a120507"
    },
    {
      "name": "SparkFun MMA8452Q Accelerometer",
      "version": "1.1.0",
      "author": "Jim@SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Basic I2C functionality of the MMA8452Q Accelerometer Breakout (https://www.sparkfun.com/products/12756)",
      "paragraph": "Sensor has user selectable scales of 2g/4g/8g, as well as low power mode, and 12 bit resolution.",
      "website": "https://github.com/sparkfun/SparkFun_MMA8452Q_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_MMA8452Q_Accelerometer-1.1.0.zip",
      "archiveFileName": "SparkFun_MMA8452Q_Accelerometer-1.1.0.zip",
      "size": 9473,
      "checksum": "SHA-256:b7102209e888ce1737ff7f3d714d3498d28736fb1c62a6d65edcce1191702ed0"
    },
    {
      "name": "SparkFun MS5803-14BA Pressure Sensor",
      "version": "1.1.0",
      "author": "Casey@SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library for MS5803-14BA Pressure Sensor.",
      "paragraph": "Provides I2C communication protocol for measuring wather depth, altitude, or other pressure readings.",
      "website": "https://github.com/sparkfun/SparkFun_MS5803-14BA_Breakout_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_MS5803_14BA_Pressure_Sensor-1.1.0.zip",
      "archiveFileName": "SparkFun_MS5803_14BA_Pressure_Sensor-1.1.0.zip",
      "size": 8160,
      "checksum": "SHA-256:85e53d2e58e43d39c7e8703a5c3c3601840662bc6217427764f4d01049d9436a"
    },
    {
      "name": "SparkFun ISL29125 Breakout",
      "version": "1.0.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Arduino library showing basic functionality for the ISL29125 RGB Light Sensor Breakout Board.",
      "paragraph": "The ISL29125 breakout board makes it very easy to sense and record the light intensity of the general red, green, and blue spectrums of visible light while rejecting IR from light sources.",
      "website": "https://github.com/sparkfun/ISL29125_Breakout",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_ISL29125_Breakout-1.0.1.zip",
      "archiveFileName": "SparkFun_ISL29125_Breakout-1.0.1.zip",
      "size": 10211,
      "checksum": "SHA-256:a3bed39df175fc6d7d62c1de9f3222cf2dce1ecf1c8962bb36e9bfe0e92c6e0f"
    },
    {
      "name": "ISL29125 Breakout",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "A Breakout Board for the ISL29125 RGB Light Sensor.",
      "paragraph": "A Breakout Board for the ISL29125 RGB Light Sensor.",
      "website": "https://github.com/sparkfun/ISL29125_Breakout",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/ISL29125_Breakout-1.0.0.zip",
      "archiveFileName": "ISL29125_Breakout-1.0.0.zip",
      "size": 9883,
      "checksum": "SHA-256:1d6454e6ee67402a3d2784c2a9ff00022a646f6b927449f28b98f103515fd985"
    },
    {
      "name": "SparkFun APDS9960 RGB and Gesture Sensor",
      "version": "1.4.2",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library for the Avago APDS-9960 sensor",
      "paragraph": "This library works with the SparkFun Breakout board for the Avago APDS-9960 proximity, light, RGB, and gesture sensor, made by SparkFun Electronics.",
      "website": "https://github.com/sparkfun/SparkFun_APDS-9960_Sensor_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_APDS9960_RGB_and_Gesture_Sensor-1.4.2.zip",
      "archiveFileName": "SparkFun_APDS9960_RGB_and_Gesture_Sensor-1.4.2.zip",
      "size": 22089,
      "checksum": "SHA-256:ef4c5dbceb294edcf44bac04b55ed4f35c2acd79021cc22da65e1ba5b8e01c1b"
    },
    {
      "name": "AD5330 Breakout",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "AD5330 Breakout",
      "paragraph": "AD5330 Breakout",
      "website": "https://github.com/sparkfun/AD5330_Breakout",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/AD5330_Breakout-1.0.0.zip",
      "archiveFileName": "AD5330_Breakout-1.0.0.zip",
      "size": 253803,
      "checksum": "SHA-256:b95ae1a9200b849c5e5cb78a53a4560699b96b382db22553e21166f465aa1901"
    },
    {
      "name": "Sparkfun_AD5330",
      "version": "1.2.1",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "Libraries for the AD5330 8-bit DAC",
      "paragraph": "Libraries for the Sparkfun AD5330 DAC and breakout board",
      "website": "https://github.com/sparkfun/AD5330_Breakout",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/Sparkfun_AD5330-1.2.1.zip",
      "archiveFileName": "Sparkfun_AD5330-1.2.1.zip",
      "size": 253876,
      "checksum": "SHA-256:6795c1427d34c18098ce568b225bace671aff2d0fef4227a4c0cdfc0f1848196"
    },
    {
      "name": "SparkFun AD5330",
      "version": "1.2.3",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Libraries for the AD5330 8-bit DAC",
      "paragraph": "Libraries for the Sparkfun AD5330 DAC and breakout board",
      "website": "https://github.com/sparkfun/SparkFun_AD5330_Breakout_Arduino_Library",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_AD5330-1.2.3.zip",
      "archiveFileName": "SparkFun_AD5330-1.2.3.zip",
      "size": 253931,
      "checksum": "SHA-256:224abcbc0f11bb3ade0923a7619673d4ddf81164d0490ccdceb13d47a521ae3d"
    },
    {
      "name": "SparkFun Bar Graph Library",
      "version": "1.2.0",
      "author": "Mike Grusin, SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Provides functionality of 10-segment bar graphs.",
      "paragraph": "Allows users to drive three 10-segment bar graphs, using 74HC595 shift registers. Compatible with the \u003ca href=\"https://www.sparkfun.com/products/10936\"\u003eSparkFun Bar Graph Breakout Kit\u003c/a\u003e.",
      "website": "https://github.com/sparkfun/SparkFun_Bar_Graph_Breakout_Arduino_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_Bar_Graph_Library-1.2.0.zip",
      "archiveFileName": "SparkFun_Bar_Graph_Library-1.2.0.zip",
      "size": 12354,
      "checksum": "SHA-256:7e967e1e8eeda6125b331764e07402ef12029c87dc4925c3ab6c30356b309748"
    },
    {
      "name": "SparkFun MG2639 CellShield",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "Jim Lindblom \u003cjim@sparkfun.com\u003e",
      "sentence": "Driver library for SparkFun's MG2639 cellular shield.",
      "paragraph": "Simple API to use SMS, TCP, and other functions made available by the MG2639 Cellular Shield.",
      "website": "http://github.com/sparkfun/MG2639_Cellular_Shield",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_MG2639_CellShield-1.0.0.zip",
      "archiveFileName": "SparkFun_MG2639_CellShield-1.0.0.zip",
      "size": 5008298,
      "checksum": "SHA-256:cb949add46f7e4d6f4a3dc5fa39689732a76ac2d5ef018519ec4f354644cf433"
    },
    {
      "name": "SparkFun Quadstepper Motor Driver",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics",
      "sentence": "4-axis stepper motor driver, available from SparkFun Electronics",
      "paragraph": "Arduino Library for SparkFun Quadstepper 4-axis stepper motor driver, available from SparkFun Electronics",
      "website": "https://github.com/sparkfun/Quadstepper_Motor_Driver",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_Quadstepper_Motor_Driver-1.0.0.zip",
      "archiveFileName": "SparkFun_Quadstepper_Motor_Driver-1.0.0.zip",
      "size": 5551,
      "checksum": "SHA-256:74bfb95decd74e29fdd3c51b6330dd511156e1563a075d99073a44bc3551d7ef"
    },
    {
      "name": "SparkFun Quadstepper Motor Driver",
      "version": "1.0.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "4-axis stepper motor driver, available from SparkFun Electronics",
      "paragraph": "Arduino Library for SparkFun Quadstepper 4-axis stepper motor driver, available from SparkFun Electronics",
      "website": "https://github.com/sparkfun/Quadstepper_Motor_Driver",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_Quadstepper_Motor_Driver-1.0.1.zip",
      "archiveFileName": "SparkFun_Quadstepper_Motor_Driver-1.0.1.zip",
      "size": 5660,
      "checksum": "SHA-256:ea02ad7fd993626fecee74d41dcae00c86de1dafec784be1f0b0146f242b4f59"
    },
    {
      "name": "SparkFun ATSHA204 Library",
      "version": "1.0.0",
      "author": "Jim@SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library for the ATSHA204 IC.",
      "paragraph": "This code verifies basic functionality of the ATSHA204 IC, and allows the user to obtain the unique serial number.",
      "website": "https://github.com/sparkfun/SparkFun_ATSHA204_Arduino_Library",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_ATSHA204_Library-1.0.0.zip",
      "archiveFileName": "SparkFun_ATSHA204_Library-1.0.0.zip",
      "size": 15730,
      "checksum": "SHA-256:31c3cdbd165162695d69fe8814cb81390678988cf2fa3363e2861b48a3ca76dd"
    },
    {
      "name": "SparkFun_TSL2561_Luminosity_Sensor_BOB_Arduino_Library",
      "version": "1.0.0",
      "author": "Nathan Seidle \u003ctechsupport@sparkfun.com\u003e, Joel Bartlett \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "An Arduino Library for the TSL2561_Luminosity_Sensor_BOB from SparkFun Electronics.",
      "paragraph": "An Arduino Library for the TSL2561_Luminosity_Sensor_BOB from SparkFun Electronics.",
      "website": "https://github.com/sparkfun/SparkFun_TSL2561_Luminosity_Sensor_BOB_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_TSL2561_Luminosity_Sensor_BOB_Arduino_Library-1.0.0.zip",
      "archiveFileName": "SparkFun_TSL2561_Luminosity_Sensor_BOB_Arduino_Library-1.0.0.zip",
      "size": 11104,
      "checksum": "SHA-256:4e5fc8346488e2fc9334aaf1161770b8941b4a402653cb96326efc700a135c8e"
    },
    {
      "name": "SparkFun TSL2561",
      "version": "1.1.0",
      "author": "Mike Grusin@SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "An Arduino Library for the \u003ca href=\"https://www.sparkfun.com/products/12055\"\u003eTSL2561 Luminosity Sensor Breakout\u003c/a\u003e from SparkFun Electronics.",
      "paragraph": "Via I2C communication, the sensor conducts specific light ranges from 0.1-40k+ Lux.",
      "website": "https://github.com/sparkfun/SparkFun_TSL2561_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_TSL2561-1.1.0.zip",
      "archiveFileName": "SparkFun_TSL2561-1.1.0.zip",
      "size": 9888,
      "checksum": "SHA-256:1a94402d240b871941e4f268cfb454158193205c76eebb46841d0b19d23b134a"
    },
    {
      "name": "SparkFun ZX Distance and Gesture Sensor",
      "version": "1.0.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "The ZX Sensor uses infrared light to determine the distance from an object and where the object is located on the X axis (between IR LEDs), available from SparkFun Electronics",
      "paragraph": "The \u003ca href=\"https://www.sparkfun.com/products/12780\"\u003eZX Distance and Gesture Sensor\u003c/a\u003e is sensor capable of sensing an object's distance from the sensor and its location between the IR LEDs.",
      "website": "https://github.com/sparkfun/SparkFun_ZX_Distance_and_Gesture_Sensor_Arduino_Library",
      "category": "Sensor",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_ZX_Distance_and_Gesture_Sensor-1.0.0.zip",
      "archiveFileName": "SparkFun_ZX_Distance_and_Gesture_Sensor-1.0.0.zip",
      "size": 17049,
      "checksum": "SHA-256:295d62a7621f7dd8014a36b3e89c3ed51fe64830bcb99453906c7a243d8b70a3"
    },
    {
      "name": "SparkFun ZX Distance and Gesture Sensor",
      "version": "1.0.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "The ZX Sensor uses infrared light to determine the distance from an object and where the object is located on the X axis (between IR LEDs), available from SparkFun Electronics",
      "paragraph": "The \u003ca href=\"https://www.sparkfun.com/products/12780\"\u003eZX Distance and Gesture Sensor\u003c/a\u003e is sensor capable of sensing an object's distance from the sensor and its location between the IR LEDs.",
      "website": "https://github.com/sparkfun/SparkFun_ZX_Distance_and_Gesture_Sensor_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_ZX_Distance_and_Gesture_Sensor-1.0.1.zip",
      "archiveFileName": "SparkFun_ZX_Distance_and_Gesture_Sensor-1.0.1.zip",
      "size": 17108,
      "checksum": "SHA-256:97d75d9002a04b7decb9c92e232aa8939f0ef6e38253bbd39d453086b1ba3971"
    },
    {
      "name": "SparkFun LSM6DS3 Breakout",
      "version": "1.0.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "A library to drive the STmicro LSM6DS3 by SPI or I2C.",
      "paragraph": "Driver handles Mode 1 (slave device) in either SPI or I2C, interrupt readback, and FIFO operation",
      "website": "https://github.com/sparkfun/SparkFun_LSM6DS3_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_LSM6DS3_Breakout-1.0.0.zip",
      "archiveFileName": "SparkFun_LSM6DS3_Breakout-1.0.0.zip",
      "size": 58696,
      "checksum": "SHA-256:521a1c21ab66e44b0d30dfa5ac72f25f933eec92f03e5bd351e22f79d5ad0b98"
    },
    {
      "name": "SparkFun LSM303C 6 DOF IMU Breakout",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics \u003cTechSupport@SparkFun.com\u003e",
      "sentence": "Driver for ST's LSM303C 6-DOF IMU (3-axis accelerometer \u0026 3-axis magnetometer)",
      "paragraph": "The \u003ca href=\"http://www.st.com/web/en/resource/technical/document/datasheet/DM00089896.pdf\"\u003eLSM303C\u003c/a\u003e is a system-in-package featuring a 3D digital linear acceleration sensor and a 3D digital magnetic sensor. The LSM303C has linear acceleration full scales of ±2 g / ±4 g / ±8 g and a magnetic field full scale of ±16 gauss. The LSM303C includes an I2C serial bus interface that supports standard and fast mode (100 kHz and 400 kHz) and a half-duplex subset of the SPI serial interface.",
      "website": "https://github.com/sparkfun/LSM303C_6_DOF_IMU_Breakout",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_LSM303C_6_DOF_IMU_Breakout-1.0.0.zip",
      "archiveFileName": "SparkFun_LSM303C_6_DOF_IMU_Breakout-1.0.0.zip",
      "size": 15445,
      "checksum": "SHA-256:864ab26e7d5b64962e5479e2e9eb342a1c8c7107ebfe3f6b7975d830f9afa2f9"
    },
    {
      "name": "RedBot Line Follower Bar Arduino Library",
      "version": "0.4.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library to operate the 8 position line sensor bar for robots.",
      "paragraph": "This library can: get raw data, get position, get number of points detected, and build a circular buffer to record the data as it passes.",
      "website": "https://github.com/sparkfun/RedBot_Line_Follower_Bar_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/RedBot_Line_Follower_Bar_Arduino_Library-0.4.0.zip",
      "archiveFileName": "RedBot_Line_Follower_Bar_Arduino_Library-0.4.0.zip",
      "size": 40093,
      "checksum": "SHA-256:0492618e9a9ab5ab9bc1da467001e4efa4b6af7b6e6f681e2352448a76d6278b"
    },
    {
      "name": "SparkFun Line Follower Array",
      "version": "1.0.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library to operate the 8 position line sensor array for robots.",
      "paragraph": "This library can: get raw data, get position, get number of points detected, and build a circular buffer to record the data as it passes.",
      "website": "https://github.com/sparkfun/SparkFun_Line_Follower_Array_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_Line_Follower_Array-1.0.0.zip",
      "archiveFileName": "SparkFun_Line_Follower_Array-1.0.0.zip",
      "size": 237820,
      "checksum": "SHA-256:eeb5dd87331a1bc1f35ef2cc14f62813bbbe4dfd509a1e529bf0628fcc0d071e"
    },
    {
      "name": "SparkFun Line Follower Array",
      "version": "1.0.1",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Library to operate the 8 position line sensor array for robots.",
      "paragraph": "This library can: get raw data, get position, get number of points detected, and build a circular buffer to record the data as it passes.",
      "website": "https://github.com/sparkfun/SparkFun_Line_Follower_Array_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_Line_Follower_Array-1.0.1.zip",
      "archiveFileName": "SparkFun_Line_Follower_Array-1.0.1.zip",
      "size": 237828,
      "checksum": "SHA-256:8ac46e993d1a9998665dff71a0824209add3c5503a28d00ab6a846afd2c9fc1d"
    },
    {
      "name": "SparkFun BME280",
      "version": "1.0.0",
      "author": "Marshall Taylor",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "A library to drive the Bosch BME280 Altimeter and Pressure sensor",
      "paragraph": "See code for comments.",
      "website": "https://github.com/sparkfun/SparkFun_BME280_Arduino_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_BME280-1.0.0.zip",
      "archiveFileName": "SparkFun_BME280-1.0.0.zip",
      "size": 51632,
      "checksum": "SHA-256:ac5df38400818c1b175f9b48a2ae6448300b88100daf9556cfe3360a54c6f07e"
    },
    {
      "name": "SparkFun MAX31855K Thermocouple Digitizer",
      "version": "1.0.0",
      "author": "SparkFun Electronics",
      "maintainer": "SparkFun Electronics \u003ctechsupport@SparkFun.com\u003e",
      "sentence": "K type thermocouple digitizer board.",
      "paragraph": "The \u003ca href=\"http://datasheets.maximintegrated.com/en/ds/MAX31855.pdf\"\u003eMAX31855\u003c/a\u003e performs cold-junction compensation and digitizes the signal from a K-type thermocouple. The data is output in a signed 14-bit, SPI-compatible, read-only format. Example is pin compatible with the 3.3 V \u003ca href=\"http://www.sparkfun.com/products/11114\"\u003eArduino Pro Mini\u003c/a\u003e.",
      "website": "http://github.com/sparkfun/MAX31855K_Thermocouple_Digitizer",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_MAX31855K_Thermocouple_Digitizer-1.0.0.zip",
      "archiveFileName": "SparkFun_MAX31855K_Thermocouple_Digitizer-1.0.0.zip",
      "size": 9310,
      "checksum": "SHA-256:bb0e2d1bdf7f831c7dd84290ad3a6b2cf45a1a32e39d2bcdc256dc370466fa7a"
    },
    {
      "name": "MQTT",
      "version": "1.0.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "wrapper for the official eclipse paho embedded library",
      "paragraph": "Hello there",
      "website": "http://github.com/256dpi/arduino-mqtt",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/256dpi/MQTT-1.0.0.zip",
      "archiveFileName": "MQTT-1.0.0.zip",
      "size": 33521,
      "checksum": "SHA-256:d6a2ad53cfe2986031470d9983269f1f37f9c269f9f8a095ed0fb55dd4298ddc"
    },
    {
      "name": "MQTT",
      "version": "1.1.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "paho mqtt library wrapper for arduino",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the eclipse paho project and adds a thin wrapper to get an Arduino like API.",
      "website": "http://github.com/256dpi/arduino-mqtt",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/256dpi/MQTT-1.1.0.zip",
      "archiveFileName": "MQTT-1.1.0.zip",
      "size": 34285,
      "checksum": "SHA-256:7e360f71fafe63e5ec9294c8f6a9300b6fc44eaac7af726db6b1381a05d85ed4"
    },
    {
      "name": "MQTT",
      "version": "1.2.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "paho mqtt library wrapper for arduino",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the eclipse paho project and adds a thin wrapper to get an Arduino like API.",
      "website": "http://github.com/256dpi/arduino-mqtt",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/256dpi/MQTT-1.2.0.zip",
      "archiveFileName": "MQTT-1.2.0.zip",
      "size": 34661,
      "checksum": "SHA-256:ae307cf48345a50d0639bf4f61cf30be5e9762d50d51e231e133a5b0608efc6f"
    },
    {
      "name": "MQTT",
      "version": "1.3.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "paho mqtt library wrapper for arduino",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the eclipse paho project and adds a thin wrapper to get an Arduino like API.",
      "website": "http://github.com/256dpi/arduino-mqtt",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/256dpi/MQTT-1.3.0.zip",
      "archiveFileName": "MQTT-1.3.0.zip",
      "size": 34753,
      "checksum": "SHA-256:7c940690925545528a1a89f9b06a47d6994f0137d804bee08f4b6208f39ae939"
    },
    {
      "name": "MQTT",
      "version": "1.3.2",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "Paho MQTT library wrapper for Arduino.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the eclipse paho project and adds a thin wrapper to get an Arduino like API.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/256dpi/MQTT-1.3.2.zip",
      "archiveFileName": "MQTT-1.3.2.zip",
      "size": 34729,
      "checksum": "SHA-256:e4f50d946fb3dc5bed0eb825c1ecd23881f52bd03e716ab7ca47f3aa54ffa05a"
    },
    {
      "name": "MQTT",
      "version": "1.4.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower resources usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/256dpi/MQTT-1.4.0.zip",
      "archiveFileName": "MQTT-1.4.0.zip",
      "size": 38473,
      "checksum": "SHA-256:65f14e44015ec0fdfe5cf0b54c612ab8972cfbc4b13c379bf9934e251b5fa5c7"
    },
    {
      "name": "MQTT",
      "version": "1.5.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/256dpi/MQTT-1.5.0.zip",
      "archiveFileName": "MQTT-1.5.0.zip",
      "size": 57765,
      "checksum": "SHA-256:337d93f4bbd794b0360e290097d89887f1bffeb4b54e26adb4f8737b2397676a"
    },
    {
      "name": "MQTT",
      "version": "1.5.1",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/256dpi/MQTT-1.5.1.zip",
      "archiveFileName": "MQTT-1.5.1.zip",
      "size": 57777,
      "checksum": "SHA-256:404bf9e43f4e90b57e145989f1656546f63f9820ee36f230e984d9cfba3daa82"
    },
    {
      "name": "MQTT",
      "version": "1.6.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/256dpi/MQTT-1.6.0.zip",
      "archiveFileName": "MQTT-1.6.0.zip",
      "size": 58286,
      "checksum": "SHA-256:df8b7ca8eac218a922cd72837d8c52e65cb22427df45f2b73400ac5980cf8d61"
    },
    {
      "name": "MQTT",
      "version": "1.7.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/256dpi/MQTT-1.7.0.zip",
      "archiveFileName": "MQTT-1.7.0.zip",
      "size": 59368,
      "checksum": "SHA-256:bc30ec4ad455fd31633fdd18e897f77ed07ac62fe4aa68c6055a8ebb250dc9f0"
    },
    {
      "name": "MQTT",
      "version": "1.8.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/256dpi/MQTT-1.8.0.zip",
      "archiveFileName": "MQTT-1.8.0.zip",
      "size": 54742,
      "checksum": "SHA-256:fe7f20aff81b2758d93950ed9162e1a6dc8aed8a49d6ab0f8dc5c1990e58be03"
    },
    {
      "name": "MQTT",
      "version": "1.8.1",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/256dpi/MQTT-1.8.1.zip",
      "archiveFileName": "MQTT-1.8.1.zip",
      "size": 54776,
      "checksum": "SHA-256:883e1682e9e4f1da6a8ad85021ae111fc36245ca1b3f2f1047f7c2616f12c46c"
    },
    {
      "name": "MQTT",
      "version": "1.8.2",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/256dpi/MQTT-1.8.2.zip",
      "archiveFileName": "MQTT-1.8.2.zip",
      "size": 55081,
      "checksum": "SHA-256:2d180785f7a3814daa7e0cbd446b0af609f9724339332d3ff65b6f461d7cbb46"
    },
    {
      "name": "MQTT",
      "version": "1.9.0",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/256dpi/MQTT-1.9.0.zip",
      "archiveFileName": "MQTT-1.9.0.zip",
      "size": 55415,
      "checksum": "SHA-256:b8007cdca17b138d2596f01627f763fa622b6900be76b04088cc3c5c9bb531ba"
    },
    {
      "name": "MQTT",
      "version": "1.9.1",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/256dpi/MQTT-1.9.1.zip",
      "archiveFileName": "MQTT-1.9.1.zip",
      "size": 57145,
      "checksum": "SHA-256:fc0191799ada5a640b39278013de2d24ab4c9c8a8f74ef345b68acefad997c76"
    },
    {
      "name": "MQTT",
      "version": "1.9.2",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/256dpi/MQTT-1.9.2.zip",
      "archiveFileName": "MQTT-1.9.2.zip",
      "size": 61377,
      "checksum": "SHA-256:38af49e46b47f27eb8e8e819c5d18cc14d27cd222ffecc411fdba979b67e1bf7"
    },
    {
      "name": "MQTT",
      "version": "1.9.3",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino based on the Eclipse Paho projects.",
      "paragraph": "This library bundles the Embedded MQTT C/C++ Client library of the Eclipse Paho project and adds a thin wrapper to get an Arduino like API. Additionally there is an drop-in alternative for the Arduino Yùn that uses a python based client on the linux processor and a binary interface to lower program space usage on the Arduino side.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/256dpi/MQTT-1.9.3.zip",
      "archiveFileName": "MQTT-1.9.3.zip",
      "size": 61518,
      "checksum": "SHA-256:5071859391862146b74996b851701638bcf60e56f4a8ae83512991cb13812e46"
    },
    {
      "name": "ModbusMaster",
      "version": "0.10.2",
      "author": "Doc Walker \u003c4-20ma@wvfans.net\u003e",
      "maintainer": "Doc Walker \u003c4-20ma@wvfans.net\u003e",
      "sentence": "ModbusMaster",
      "paragraph": "Enables communication with Modbus slaves over RS232/485 (via RTU protocol).",
      "website": "https://github.com/4-20ma/ModbusMaster",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/4-20ma/ModbusMaster-0.10.2.zip",
      "archiveFileName": "ModbusMaster-0.10.2.zip",
      "size": 875509,
      "checksum": "SHA-256:bff0bf8e2005e36bc150b9ed4fc91b8b48bade0608660b92612900afebb3d3a2"
    },
    {
      "name": "ModbusMaster",
      "version": "0.10.3",
      "author": "Doc Walker",
      "maintainer": "Doc Walker \u003c4-20ma@wvfans.net\u003e",
      "sentence": "Enlighten your Arduino to be a Modbus master.",
      "paragraph": "Enables communication with Modbus slaves over RS232/485 (via RTU protocol). Requires a RS232/485 transceiver.",
      "website": "https://github.com/4-20ma/ModbusMaster",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/4-20ma/ModbusMaster-0.10.3.zip",
      "archiveFileName": "ModbusMaster-0.10.3.zip",
      "size": 1056482,
      "checksum": "SHA-256:4c61225d2fd44753b8ed2c3c886fafbf1540674b4880a4399405e6ff765db15a"
    },
    {
      "name": "ModbusMaster",
      "version": "0.11.0",
      "author": "Doc Walker",
      "maintainer": "Doc Walker \u003c4-20ma@wvfans.net\u003e",
      "sentence": "Enlighten your Arduino to be a Modbus master.",
      "paragraph": "Enables communication with Modbus slaves over RS232/485 (via RTU protocol). Requires an RS232/485 transceiver.",
      "website": "https://github.com/4-20ma/ModbusMaster",
      "category": "Communication",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/4-20ma/ModbusMaster-0.11.0.zip",
      "archiveFileName": "ModbusMaster-0.11.0.zip",
      "size": 1236739,
      "checksum": "SHA-256:af28cc4cfef1130e91ef4c8a810f4a709ee6546d10928acd6ef18ceb28c069b7"
    },
    {
      "name": "Akafugu Four Letter Word Library",
      "version": "1.0.0",
      "author": "Akafugu",
      "maintainer": "Akafugu \u003cinfo@akafugu.jp\u003e",
      "sentence": "Akafugu Four Letter Word Library",
      "paragraph": "Akafugu Four Letter Word Library",
      "website": "https://github.com/akafugu/FourLetterWord",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/akafugu/Akafugu_Four_Letter_Word_Library-1.0.0.zip",
      "archiveFileName": "Akafugu_Four_Letter_Word_Library-1.0.0.zip",
      "size": 10418,
      "checksum": "SHA-256:d04ae00d1220d179988db32b079412d24f7c64d9d26ed6d8d71f8b61d0794ee1"
    },
    {
      "name": "Akafugu TWIDisplay Library",
      "version": "1.0.0",
      "author": "Akafugu",
      "maintainer": "Akafugu \u003cinfo@akafugu.jp\u003e",
      "sentence": "Akafugu TWIDisplay Library",
      "paragraph": "Akafugu TWIDisplay Library",
      "website": "https://github.com/akafugu/TWIDisplayLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/akafugu/Akafugu_TWIDisplay_Library-1.0.0.zip",
      "archiveFileName": "Akafugu_TWIDisplay_Library-1.0.0.zip",
      "size": 11423,
      "checksum": "SHA-256:52e63196aa70c96723be68fba0d18c449cfa1717271f0e4c551af5b874a7a43e"
    },
    {
      "name": "Akafugu TWIKeyboard Library",
      "version": "1.0.0",
      "author": "Akafugu",
      "maintainer": "Akafugu \u003cinfo@akafugu.jp\u003e",
      "sentence": "Akafugu TWIKeyboard Library",
      "paragraph": "Akafugu TWIKeyboard Library",
      "website": "https://github.com/akafugu/TWIKeyboardLibrary",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/akafugu/Akafugu_TWIKeyboard_Library-1.0.0.zip",
      "archiveFileName": "Akafugu_TWIKeyboard_Library-1.0.0.zip",
      "size": 8613,
      "checksum": "SHA-256:ad9d8039567dc70f8513fab3941b37620741b85664a46aad9cabfce159b7882e"
    },
    {
      "name": "Akafugu TWILiquidCrystal Library",
      "version": "1.0.0",
      "author": "Akafugu",
      "maintainer": "Akafugu \u003cinfo@akafugu.jp\u003e",
      "sentence": "Akafugu TWILiquidCrystal Library",
      "paragraph": "Akafugu TWILiquidCrystal Library",
      "website": "https://github.com/akafugu/TWILiquidCrystalLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/akafugu/Akafugu_TWILiquidCrystal_Library-1.0.0.zip",
      "archiveFileName": "Akafugu_TWILiquidCrystal_Library-1.0.0.zip",
      "size": 21960,
      "checksum": "SHA-256:0e54aec6de8b61c6e8d03c5cc982856a206130d40251fc883052ce9bf56a75be"
    },
    {
      "name": "Akafugu WireRtc Library",
      "version": "1.0.0",
      "author": "Akafugu",
      "maintainer": "Akafugu \u003cinfo@akafugu.jp\u003e",
      "sentence": "Akafugu WireRtc Library",
      "paragraph": "Akafugu WireRtc Library",
      "website": "https://github.com/akafugu/WireRtcLibrary",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/akafugu/Akafugu_WireRtc_Library-1.0.0.zip",
      "archiveFileName": "Akafugu_WireRtc_Library-1.0.0.zip",
      "size": 11378,
      "checksum": "SHA-256:5f3e748d913e37508e19dbfd9f25880f883474cc10dba5fe8dc7d4c06c8da79c"
    },
    {
      "name": "HttpClient",
      "version": "2.2.0",
      "author": "Adrian McEwen \u003cadrianm@mcqn.com\u003e",
      "maintainer": "Adrian McEwen \u003cadrianm@mcqn.com\u003e",
      "sentence": "Library to easily make HTTP GET, POST and PUT requests to a web server.",
      "paragraph": "Works with any class derived from Client - so switching between Ethernet, WiFi and GSMClient requires minimal code changes.",
      "website": "http://github.com/amcewen/HttpClient",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/amcewen/HttpClient-2.2.0.zip",
      "archiveFileName": "HttpClient-2.2.0.zip",
      "size": 12849,
      "checksum": "SHA-256:3d48d9e64102720b7aecf13dc8fc778f36e569398a4b2a593fa820a74b91750e"
    },
    {
      "name": "Tsunami",
      "version": "1.0.0",
      "author": "Nick Johnson \u003cnick@arachnidlabs.com\u003e",
      "maintainer": "Nick Johnson \u003cnick@arachnidlabs.com\u003e",
      "sentence": "Library for interfacing with the Tsunami's hardware peripherals.",
      "paragraph": "Provides an easy to use API for programming the Tsunami.",
      "website": "https://github.com/arachnidlabs/tsunami-arduino",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/arachnidlabs/Tsunami-1.0.0.zip",
      "archiveFileName": "Tsunami-1.0.0.zip",
      "size": 18011,
      "checksum": "SHA-256:f9c7fbcae738bc4cad50c32efdd0486cefb6b66250649496d13cd7d92b3046bc"
    },
    {
      "name": "TVout",
      "version": "1.0.0",
      "author": "mdmetzle@gmail.com",
      "maintainer": "Avamander \u003cavamander@gmail.com\u003e",
      "sentence": "A library for generating PAL or NTSC video output with an AVR.",
      "paragraph": "Supports PAL and NTSC with the max resolution of 128 times 96 pixels.",
      "website": "https://github.com/Avamander/arduino-tvout/",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Avamander/TVout-1.0.0.zip",
      "archiveFileName": "TVout-1.0.0.zip",
      "size": 61024,
      "checksum": "SHA-256:1b8ac2f16400a475989322e5a2e29159af83a0024f35a6395756ef2680fee824"
    },
    {
      "name": "TVout",
      "version": "1.0.1",
      "author": "mdmetzle@gmail.com",
      "maintainer": "Avamander \u003cavamander@gmail.com\u003e",
      "sentence": "A library for generating PAL or NTSC video output with an AVR.",
      "paragraph": "Supports PAL and NTSC with the max resolution of 128 times 96 pixels.",
      "website": "https://github.com/Avamander/arduino-tvout/",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Avamander/TVout-1.0.1.zip",
      "archiveFileName": "TVout-1.0.1.zip",
      "size": 62204,
      "checksum": "SHA-256:e166330aa0f458d728da53461c7e90b148d7c47a32d0f35429d081673ac21222"
    },
    {
      "name": "Awesome",
      "version": "0.1.0",
      "author": "Chris Palmer \u003cchris@awesomeshield.com\u003e",
      "maintainer": "Chris Palmer \u003cchris@awesomeshield.com\u003e",
      "sentence": "The library that supports the Awesome Shield PCB.",
      "paragraph": "An integral part of the Awesome Shield learning ecosystem. Learn more at AwesomeShield dot com.",
      "website": "https://github.com/awesomeshield/Awesome-Shield-Library",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/awesomeshield/Awesome-0.1.0.zip",
      "archiveFileName": "Awesome-0.1.0.zip",
      "size": 9825,
      "checksum": "SHA-256:2238327a0921eb77bd15f9ad156b6e30368196f89e0af6b232f0b5632156c623"
    },
    {
      "name": "ArduinoJson",
      "version": "4.0.0",
      "author": "Benoit Blanchon \u003chttp://blog.benoitblanchon.fr/\u003e",
      "maintainer": "Benoit Blanchon \u003chttp://blog.benoitblanchon.fr/\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino",
      "paragraph": "Supports JSON parsing and formatting. Uses fixed memory allocation.",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bblanchon/ArduinoJson-4.0.0.zip",
      "archiveFileName": "ArduinoJson-4.0.0.zip",
      "size": 1295575,
      "checksum": "SHA-256:059b69df3d971cb4972edfcdfe6de71619730821ca32264d3e6c280187e6bfa3"
    },
    {
      "name": "ArduinoJson",
      "version": "5.0.0",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bblanchon/ArduinoJson-5.0.0.zip",
      "archiveFileName": "ArduinoJson-5.0.0.zip",
      "size": 1301052,
      "checksum": "SHA-256:51f31a94917b941c9346ed2b531e94ce7a74bb0a511a90015466d40da35a675b"
    },
    {
      "name": "ArduinoJson",
      "version": "5.0.1",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bblanchon/ArduinoJson-5.0.1.zip",
      "archiveFileName": "ArduinoJson-5.0.1.zip",
      "size": 1310077,
      "checksum": "SHA-256:5edeb460a8ce53381aa58f70923f0554236d25efc86edf0990530915d346aebd"
    },
    {
      "name": "ArduinoJson",
      "version": "5.0.2",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bblanchon/ArduinoJson-5.0.2.zip",
      "archiveFileName": "ArduinoJson-5.0.2.zip",
      "size": 1311007,
      "checksum": "SHA-256:676543c4842fec91d237c3c2ba7316bc03f12a4c0f0d6b6c181b709ea1a70b7e"
    },
    {
      "name": "ArduinoJson",
      "version": "5.0.3",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bblanchon/ArduinoJson-5.0.3.zip",
      "archiveFileName": "ArduinoJson-5.0.3.zip",
      "size": 1312123,
      "checksum": "SHA-256:00df908be3c0e75fb670c5121d7b07874cddea6daca2a85017f441aac6fc6dc7"
    },
    {
      "name": "ArduinoJson",
      "version": "5.0.4",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bblanchon/ArduinoJson-5.0.4.zip",
      "archiveFileName": "ArduinoJson-5.0.4.zip",
      "size": 1317392,
      "checksum": "SHA-256:70506ce4ab6886e5d13082d60a872cf2be1913c2772e1cff2f10ce0d4775c712"
    },
    {
      "name": "ArduinoJson",
      "version": "5.0.5",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bblanchon/ArduinoJson-5.0.5.zip",
      "archiveFileName": "ArduinoJson-5.0.5.zip",
      "size": 1318613,
      "checksum": "SHA-256:420bcb6e8e2a174789bf918e1d85dc88ad435a8b1e0e713f301a49aa7de084b8"
    },
    {
      "name": "ArduinoJson",
      "version": "5.0.6",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bblanchon/ArduinoJson-5.0.6.zip",
      "archiveFileName": "ArduinoJson-5.0.6.zip",
      "size": 1318824,
      "checksum": "SHA-256:e9d063e33365373b1514d1ecdf1db84d386ff4bbc3be0b16b4409ac3962399c7"
    },
    {
      "name": "ArduinoJson",
      "version": "5.0.7",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bblanchon/ArduinoJson-5.0.7.zip",
      "archiveFileName": "ArduinoJson-5.0.7.zip",
      "size": 1318370,
      "checksum": "SHA-256:f1a63035314e36b74d1459f625cd789da701e9d82cda07ac4548948576e50e15"
    },
    {
      "name": "ArduinoJson",
      "version": "5.0.8",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bblanchon/ArduinoJson-5.0.8.zip",
      "archiveFileName": "ArduinoJson-5.0.8.zip",
      "size": 1324924,
      "checksum": "SHA-256:b97baa5ec9ecb3e202860c9f71121068ef20cd50bc60b320a30f104c6c6dd2fa"
    },
    {
      "name": "ArduinoJson",
      "version": "5.1.0",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bblanchon/ArduinoJson-5.1.0.zip",
      "archiveFileName": "ArduinoJson-5.1.0.zip",
      "size": 1330552,
      "checksum": "SHA-256:68169309743361602d327d64a024b2de87ce6cf8c6cadc1e5ec922a2c1513cd6"
    },
    {
      "name": "ArduinoJson",
      "version": "5.1.0-beta.1",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bblanchon/ArduinoJson-5.1.0-beta.1.zip",
      "archiveFileName": "ArduinoJson-5.1.0-beta.1.zip",
      "size": 1334506,
      "checksum": "SHA-256:60b7a76ccc27aceea19fd48ebceeb48ae3bb85ec517f47fd452ab4f352dbeb2f"
    },
    {
      "name": "ArduinoJson",
      "version": "5.1.0-beta.2",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bblanchon/ArduinoJson-5.1.0-beta.2.zip",
      "archiveFileName": "ArduinoJson-5.1.0-beta.2.zip",
      "size": 1334470,
      "checksum": "SHA-256:fa2c6037c4e34db197b23096fb8bab0c79d8e10d16813455c4a2ed1931626121"
    },
    {
      "name": "ArduinoJson",
      "version": "5.1.1",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "An efficient and elegant JSON library for Arduino.",
      "paragraph": "Like this project? Please star it on GitHub!",
      "website": "https://github.com/bblanchon/ArduinoJson",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bblanchon/ArduinoJson-5.1.1.zip",
      "archiveFileName": "ArduinoJson-5.1.1.zip",
      "size": 1330843,
      "checksum": "SHA-256:0b18dd80d1c82d7d00d7ae3e3778e818e0c3bb152e255ad2e9544ed2714c90d4"
    },
    {
      "name": "ALA",
      "version": "2.0.0",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino Light Animation (ALA) is a library",
      "paragraph": "Arduino Light Animation (ALA) is a library for Arduino boards to simplify the development of light animations using LEDs and LED strips.",
      "website": "https://github.com/bportaluri/ALA",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bportaluri/ALA-2.0.0.zip",
      "archiveFileName": "ALA-2.0.0.zip",
      "size": 899031,
      "checksum": "SHA-256:5d0752eadfcf5bc83aa0e5f6f3f36e818563135f1e0f577d55d6400a10cb394b"
    },
    {
      "name": "ALA",
      "version": "2.1.0",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino Light Animation (ALA) is a library",
      "paragraph": "Arduino Light Animation (ALA) is a library for Arduino boards to simplify the development of light animations using LEDs and LED strips.",
      "website": "https://github.com/bportaluri/ALA",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bportaluri/ALA-2.1.0.zip",
      "archiveFileName": "ALA-2.1.0.zip",
      "size": 899516,
      "checksum": "SHA-256:1678b8dc139f8a3f7eafc4d05aced34a39afc182021574b46536e6fb5de66109"
    },
    {
      "name": "ALA",
      "version": "2.2.0",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino Light Animation (ALA) is a library",
      "paragraph": "Arduino Light Animation (ALA) is a library for Arduino boards to simplify the development of light animations using LEDs and LED strips.",
      "website": "https://github.com/bportaluri/ALA",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bportaluri/ALA-2.2.0.zip",
      "archiveFileName": "ALA-2.2.0.zip",
      "size": 899516,
      "checksum": "SHA-256:d2068c023352c916097c805e648567547bd1f58618ac51cd2e74914387ac17cd"
    },
    {
      "name": "ALA",
      "version": "2.3.0",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino Light Animation (ALA) is a library",
      "paragraph": "Arduino Light Animation (ALA) is a library for Arduino boards to simplify the development of light animations using LEDs and LED strips.",
      "website": "https://github.com/bportaluri/ALA",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bportaluri/ALA-2.3.0.zip",
      "archiveFileName": "ALA-2.3.0.zip",
      "size": 900677,
      "checksum": "SHA-256:b223bcf08868396c3fcb432e55af76fd687d661d48af66618fc17afc4d103626"
    },
    {
      "name": "PID",
      "version": "1.1.1",
      "author": "Brett Beauregard",
      "maintainer": "Brett Beauregard",
      "sentence": "PID controller",
      "paragraph": "A PID controller seeks to keep some input variable close to a desired setpoint by adjusting an output. The way in which it does this can be 'tuned' by adjusting three parameters (P,I,D).",
      "website": "http://playground.arduino.cc/Code/PIDLibrary",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/br3ttb/PID-1.1.1.zip",
      "archiveFileName": "PID-1.1.1.zip",
      "size": 7938,
      "checksum": "SHA-256:462315c0ae342da3749448450d72f08ff331916dfedb75b95eb64c3ff14faf1f"
    },
    {
      "name": "PCD8544",
      "version": "1.4.2",
      "author": "Carlos Rodrigues",
      "maintainer": "Carlos Rodrigues \u003ccefrodrigues@gmail.com\u003e",
      "sentence": "Philips PCD8544 or compatible LCD library.",
      "paragraph": "PCD8544 supports monochrome LCDs most commonly found on old Nokia phones. This is a minimal library intended for low memory usage.",
      "website": "https://github.com/carlosefr/pcd8544",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/carlosefr/PCD8544-1.4.2.zip",
      "archiveFileName": "PCD8544-1.4.2.zip",
      "size": 12834,
      "checksum": "SHA-256:f41770ade29a6508347a369ecbffc67bd671810ee0fb596d20429aa26774f477"
    },
    {
      "name": "PCD8544",
      "version": "1.4.3",
      "author": "Carlos Rodrigues",
      "maintainer": "Carlos Rodrigues \u003ccefrodrigues@gmail.com\u003e",
      "sentence": "Philips PCD8544 or compatible LCD library.",
      "paragraph": "PCD8544 supports monochrome LCDs most commonly found on old Nokia phones. This is a minimal library intended for low memory usage.",
      "website": "https://github.com/carlosefr/pcd8544",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/carlosefr/PCD8544-1.4.3.zip",
      "archiveFileName": "PCD8544-1.4.3.zip",
      "size": 13284,
      "checksum": "SHA-256:846398c8bff8f6085f6d96b7feff35e8d5d428305e893a4c79a1fec531e5768e"
    },
    {
      "name": "MagStripe",
      "version": "1.8.2",
      "author": "Carlos Rodrigues",
      "maintainer": "Carlos Rodrigues \u003ccefrodrigues@gmail.com\u003e",
      "sentence": "Decode data from TTL (raw) magnetic card readers.",
      "paragraph": "MagStripe supports decoding any of the three tracks from standard magnetic stripe cards using a TTL (raw) card reader.",
      "website": "https://github.com/carlosefr/magstripelib",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/carlosefr/MagStripe-1.8.2.zip",
      "archiveFileName": "MagStripe-1.8.2.zip",
      "size": 8680,
      "checksum": "SHA-256:3ea93b64e1d22875b929c34930d2172583d4d8d75234c5f89ab8be874852f62b"
    },
    {
      "name": "BLE SDK for Arduino",
      "version": "1.0.1",
      "author": "RedBearLab",
      "maintainer": "RedBearLab \u003csupport@redbearlab.com\u003e",
      "sentence": "Nordic BLE SDK for Arduino for nRF8001 products such as the BLE Shield, Blend and Blend Micro.",
      "paragraph": "Provides a library and a lot of tutorials/examples for developing BLE application using Nordic nRF8001 BLE connectivity chip for Arduino.",
      "website": "https://github.com/cheong2k/ble-sdk-arduino",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Cheong2K/BLE_SDK_for_Arduino-1.0.1.zip",
      "archiveFileName": "BLE_SDK_for_Arduino-1.0.1.zip",
      "size": 6064431,
      "checksum": "SHA-256:2ea71ec1d1c6eb484146e21304e822ac013894672ed1bf5e5833e985958402bb"
    },
    {
      "name": "BitBool",
      "version": "1.1.1",
      "author": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "Easily control bit sets, just like an array!",
      "paragraph": "This library provides an efficient and easy to use method for dealing with individual bits. The library is in fact a drop-in replacement for a bool or boolean array. However it has many more possibilities and is perfect for use on embedded systems. The main feature of this library is the fact it allows bits to be read and written using a simple array subscript notation.",
      "website": "https://arduino.land/Code/BitBool/",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Chris--A/BitBool-1.1.1.zip",
      "archiveFileName": "BitBool-1.1.1.zip",
      "size": 3172,
      "checksum": "SHA-256:387caddd3a9903ff42022b10cd672da85794640100d12b6e3804249415f963fb"
    },
    {
      "name": "BitBool",
      "version": "1.1.2",
      "author": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "Easily control bit sets, just like an array!",
      "paragraph": "This library provides an efficient and easy to use method for dealing with individual bits. The library is in fact a drop-in replacement for a bool or boolean array. However it has many more possibilities and is perfect for use on embedded systems. The main feature of this library is the fact it allows bits to be read and written using a simple array subscript notation.",
      "website": "https://arduino.land/Code/BitBool/",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Chris--A/BitBool-1.1.2.zip",
      "archiveFileName": "BitBool-1.1.2.zip",
      "size": 3216,
      "checksum": "SHA-256:00c161037580159086e8614576163e9e47d0a9e8c39f45e954a75da6b12c45ed"
    },
    {
      "name": "BitBool",
      "version": "1.1.3",
      "author": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "Easily control bit sets, just like an array!",
      "paragraph": "This library provides an efficient and easy to use method for dealing with individual bits. The library is in fact a drop-in replacement for a bool or boolean array. However it has many more possibilities and is perfect for use on embedded systems. The main feature of this library is the fact it allows bits to be read and written using a simple array subscript notation.",
      "website": "https://arduino.land/Code/BitBool/",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Chris--A/BitBool-1.1.3.zip",
      "archiveFileName": "BitBool-1.1.3.zip",
      "size": 4300,
      "checksum": "SHA-256:14cf798a6716dcb31050e7b996438ef87edd4ca9920d72bf92f78bf1cc07becf"
    },
    {
      "name": "BitBool",
      "version": "1.2.0",
      "author": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "The ultimate bit manipulation tool.",
      "paragraph": "This library provides an efficient and easy to use method for dealing with individual bits. The library is in fact a drop-in replacement for a bool or boolean array. However it has many more possibilities and is perfect for use on embedded systems. The main feature of this library is the fact it allows bits to be read and written using a simple array subscript notation.",
      "website": "https://arduino.land/Code/BitBool/",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Chris--A/BitBool-1.2.0.zip",
      "archiveFileName": "BitBool-1.2.0.zip",
      "size": 5406,
      "checksum": "SHA-256:67893a29637728a712b0eb0c6a6db20c0005dd42b425e8254d261f7c1b98c7b9"
    },
    {
      "name": "Keypad",
      "version": "3.1.0",
      "author": "Mark Stanley, Alexander Brevig",
      "maintainer": "Community https://github.com/Chris--A/Keypad",
      "sentence": "Keypad is a library for using matrix style keypads with the Arduino.",
      "paragraph": "As of version 3.0 it now supports mulitple keypresses. This library is based upon the Keypad Tutorial. It was created to promote Hardware Abstraction. It improves readability of the code by hiding the pinMode and digitalRead calls for the user.",
      "website": "http://playground.arduino.cc/Code/Keypad",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Chris--A/Keypad-3.1.0.zip",
      "archiveFileName": "Keypad-3.1.0.zip",
      "size": 30215,
      "checksum": "SHA-256:9a717d3f812a2aedb52c5af93993893f3b2a05335615c6e2dbc7f0317e693610"
    },
    {
      "name": "Keypad",
      "version": "3.1.1",
      "author": "Mark Stanley, Alexander Brevig",
      "maintainer": "Community https://github.com/Chris--A/Keypad",
      "sentence": "Keypad is a library for using matrix style keypads with the Arduino.",
      "paragraph": "As of version 3.0 it now supports mulitple keypresses. This library is based upon the Keypad Tutorial. It was created to promote Hardware Abstraction. It improves readability of the code by hiding the pinMode and digitalRead calls for the user.",
      "website": "http://playground.arduino.cc/Code/Keypad",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Chris--A/Keypad-3.1.1.zip",
      "archiveFileName": "Keypad-3.1.1.zip",
      "size": 30222,
      "checksum": "SHA-256:da9084f5898c9cf5ebf344e12ae213a3ecb6c8aa8e9d345dc34b605758d41c82"
    },
    {
      "name": "PrintEx",
      "version": "1.1.6",
      "author": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "A printing \u0026 formatting enhancement for Stream \u0026 Print based libraries.",
      "paragraph": "Enhance your projects with an Arduino tailored set of functionality. Includes streaming (in/out), printf with floating point support, repitition and EEPROM/PROGMEM access.",
      "website": "https://github.com/Chris--A/PrintEx#printex-library-for-arduino-",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Chris--A/PrintEx-1.1.6.zip",
      "archiveFileName": "PrintEx-1.1.6.zip",
      "size": 29090,
      "checksum": "SHA-256:eed90d56ea7042a8b8a0defa7d1d4fe5d524a335a0376ad62b008ac6d9f21834"
    },
    {
      "name": "PrintEx",
      "version": "1.1.8",
      "author": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "A printing \u0026 formatting enhancement for Stream \u0026 Print based libraries.",
      "paragraph": "Enhance your projects with an Arduino tailored set of functionality. Includes streaming (in/out), printf with floating point support, repitition and EEPROM/PROGMEM access.",
      "website": "https://github.com/Chris--A/PrintEx#printex-library-for-arduino-",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Chris--A/PrintEx-1.1.8.zip",
      "archiveFileName": "PrintEx-1.1.8.zip",
      "size": 30371,
      "checksum": "SHA-256:601925311563c39660fcc9929ccb3fd91079347c804415f7645f6fc13a28ae9b"
    },
    {
      "name": "PrintEx",
      "version": "1.1.9",
      "author": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "A printing \u0026 formatting enhancement for Stream \u0026 Print based libraries.",
      "paragraph": "Enhance your projects with an Arduino tailored set of functionality. Includes streaming (in/out), printf with floating point support, repitition and EEPROM/PROGMEM access.",
      "website": "https://github.com/Chris--A/PrintEx#printex-library-for-arduino-",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Chris--A/PrintEx-1.1.9.zip",
      "archiveFileName": "PrintEx-1.1.9.zip",
      "size": 30407,
      "checksum": "SHA-256:059f084db9da94de62914e9a5e5a3b796325e2ec9260edb1e00f7e56594f2243"
    },
    {
      "name": "SmallSetup",
      "version": "1.0.0",
      "author": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "Optimize the Arduino setup routines.",
      "paragraph": "This library reorders the way Arduino starts. Depending on your particular application, savings can be from 20 up to hundreds of bytes. Testing is encouraged as not every application may benefit, however this may allow you to squeeze in a little extra code.",
      "website": "https://arduino.land/Code/SmallSetup/",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Chris--A/SmallSetup-1.0.0.zip",
      "archiveFileName": "SmallSetup-1.0.0.zip",
      "size": 3832,
      "checksum": "SHA-256:cd139693ff591fa4971b775a98799bfe1bf470bb4acc6ccbf49ef367112e33ee"
    },
    {
      "name": "MP3Player",
      "version": "1.0.0",
      "author": "Cytron Technologies Sdn Bhd \u003csupport@cytron.com.my\u003e",
      "maintainer": "Cytron Technologies Sdn Bhd \u003cwww.cytron.com.my\u003e",
      "sentence": "Library for playing MP3 files",
      "paragraph": "This library works with Cytron Tech MP3 shield",
      "website": "https://github.com/CytronTechnologies/Cytron_MP3Shield",
      "category": "Audio",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/CytronTechnologies/MP3Player-1.0.0.zip",
      "archiveFileName": "MP3Player-1.0.0.zip",
      "size": 220931,
      "checksum": "SHA-256:8ef513ba94395b305dc7c4fdbc278c4fc34c5fa1c109b29f8da5e133de0c002f"
    },
    {
      "name": "StereoSID",
      "version": "2.0.3",
      "author": "Christoph Haberer,Mario Patino,Giovanni Giorgi",
      "maintainer": "Giovani Giorgi",
      "sentence": "MOS6581 Stereo SID Emulator Arduino Library",
      "paragraph": "This library emulates the SID sound chip of the famous Commodore 64 with enhanched stereo support.",
      "website": "http://gioorgi.com/tag/stereosid/",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/daitangio/StereoSID-2.0.3.zip",
      "archiveFileName": "StereoSID-2.0.3.zip",
      "size": 14832,
      "checksum": "SHA-256:78ff8a227bd02ea3a7b138b25b728c6729982c2cfee550aff02b81bb148662f6"
    },
    {
      "name": "Cardinal",
      "version": "1.0.0",
      "author": "DaAwesomeP",
      "maintainer": "DaAwesomeP",
      "license": "Apache-2.0",
      "sentence": "An Arduino library that takes input in degrees and output a string or integer for the 4, 8, 16, or 32 compass headings (like North, South, East, and West).",
      "paragraph": "Cardinal is an Arduino library that takes input in degrees and output a string or integer for the 4, 8, 16, or 32 compass headings (like North, South, East, and West). It also makes available environment variables for the minimum, maximum, and middle azimuth of all of the 32 directions. It works fantastically when paired with a magnetometer.",
      "website": "https://github.com/DaAwesomeP/arduino-cardinal",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/DaAwesomeP/Cardinal-1.0.0.zip",
      "archiveFileName": "Cardinal-1.0.0.zip",
      "size": 12230,
      "checksum": "SHA-256:6bd3cac8a89fc6cfa89abb90a62fb1bbea7c66f1532d5a0119e9c9fced802ad1"
    },
    {
      "name": "Exosite",
      "version": "2.3.10",
      "author": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "maintainer": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "sentence": "Easily interface with Exosite's simple data APIs.",
      "paragraph": "This allows you to easily read and write data to Exosite's One Platform.",
      "website": "https://github.com/exosite-garage/arduino_exosite_library/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/exosite-garage/Exosite-2.3.10.zip",
      "archiveFileName": "Exosite-2.3.10.zip",
      "size": 2443970,
      "checksum": "SHA-256:906ff2ca0e96d26554ebb00ca3c7562c0aacf6993b1a783a264ee3e68f65b943"
    },
    {
      "name": "Exosite",
      "version": "2.3.3",
      "author": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "maintainer": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "sentence": "Easily interface with Exosite's simple data APIs.",
      "paragraph": "This allows you to easily read and write data to Exosite's One Platform.",
      "website": "https://github.com/exosite-garage/arduino_exosite_library/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/exosite-garage/Exosite-2.3.3.zip",
      "archiveFileName": "Exosite-2.3.3.zip",
      "size": 260284,
      "checksum": "SHA-256:5806196d1f4ef1f627b134314ca577b3371709a5f423f394d4b49d637984b705"
    },
    {
      "name": "Exosite",
      "version": "2.3.5",
      "author": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "maintainer": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "sentence": "Easily interface with Exosite's simple data APIs.",
      "paragraph": "This allows you to easily read and write data to Exosite's One Platform.",
      "website": "https://github.com/exosite-garage/arduino_exosite_library/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/exosite-garage/Exosite-2.3.5.zip",
      "archiveFileName": "Exosite-2.3.5.zip",
      "size": 403752,
      "checksum": "SHA-256:1d8a4af89f0c59f3f6d2d6d28ea3b730af4d3493a2af78af05c1bc37f134b273"
    },
    {
      "name": "Exosite",
      "version": "2.3.6",
      "author": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "maintainer": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "sentence": "Easily interface with Exosite's simple data APIs.",
      "paragraph": "This allows you to easily read and write data to Exosite's One Platform.",
      "website": "https://github.com/exosite-garage/arduino_exosite_library/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/exosite-garage/Exosite-2.3.6.zip",
      "archiveFileName": "Exosite-2.3.6.zip",
      "size": 403937,
      "checksum": "SHA-256:9ac31389ca20be9410cea2a9bda9e4b4a4ee213154d1a7c4030cb45ee41cfebe"
    },
    {
      "name": "Exosite",
      "version": "2.3.7",
      "author": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "maintainer": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "sentence": "Easily interface with Exosite's simple data APIs.",
      "paragraph": "This allows you to easily read and write data to Exosite's One Platform.",
      "website": "https://github.com/exosite-garage/arduino_exosite_library/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/exosite-garage/Exosite-2.3.7.zip",
      "archiveFileName": "Exosite-2.3.7.zip",
      "size": 404943,
      "checksum": "SHA-256:373e3edb2fef051755619629b8786c4be183686687406a0b8441c121e2f7f1a5"
    },
    {
      "name": "Exosite",
      "version": "2.3.9",
      "author": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "maintainer": "Patrick Barrett \u003cpatrickbarrett@exosite.com\u003e",
      "sentence": "Easily interface with Exosite's simple data APIs.",
      "paragraph": "This allows you to easily read and write data to Exosite's One Platform.",
      "website": "https://github.com/exosite-garage/arduino_exosite_library/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/exosite-garage/Exosite-2.3.9.zip",
      "archiveFileName": "Exosite-2.3.9.zip",
      "size": 2443894,
      "checksum": "SHA-256:b768d8948bfb412ee2bc01376e0292908ad260e4200fb44e9a0fb4e6a75c9674"
    },
    {
      "name": "Pin",
      "version": "1.0.0",
      "author": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "maintainer": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "sentence": "An easy to use Arduino library for fast digital I/O using port manipulation.",
      "paragraph": "Supports Arduino Mega, Arduino Uno, and Arduino Leonardo.",
      "website": "https://github.com/fenichelar/Pin",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/fenichelar/Pin-1.0.0.zip",
      "archiveFileName": "Pin-1.0.0.zip",
      "size": 42738,
      "checksum": "SHA-256:8e65b0ad098264908443c0c2d84ce093535e37576a741fbe3c29e3c1ad6c1401"
    },
    {
      "name": "Pin",
      "version": "2.0.0",
      "author": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "maintainer": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "sentence": "An easy to use Arduino library for fast digital I/O using port manipulation.",
      "paragraph": "Capable of simultaneous operations on multiple Pins. Supports Arduino Mega, Arduino Uno, and Arduino Leonardo.",
      "website": "https://github.com/fenichelar/Pin",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/fenichelar/Pin-2.0.0.zip",
      "archiveFileName": "Pin-2.0.0.zip",
      "size": 44595,
      "checksum": "SHA-256:077edfd8a272b7b55c60cf894183e27c098fa5ada5c788085e597238acfda6e7"
    },
    {
      "name": "Pin",
      "version": "2.1.0",
      "author": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "maintainer": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "sentence": "An easy to use Arduino library for fast digital I/O using port manipulation.",
      "paragraph": "Capable of simultaneous operations on multiple Pins. Supports Arduino Mega, Arduino Uno, and Arduino Leonardo.",
      "website": "https://github.com/fenichelar/Pin",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/fenichelar/Pin-2.1.0.zip",
      "archiveFileName": "Pin-2.1.0.zip",
      "size": 44848,
      "checksum": "SHA-256:5efa782a68ac9c63909e49b0051d3a2aea66f8aa46b04cb256db164712997bbc"
    },
    {
      "name": "Pin",
      "version": "2.2.0",
      "author": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "maintainer": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "sentence": "An easy to use Arduino library for fast digital I/O using port manipulation.",
      "paragraph": "Capable of simultaneous operations on multiple Pins. Supports Arduino Mega, Arduino Uno, and Arduino Leonardo.",
      "website": "https://github.com/fenichelar/Pin",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/fenichelar/Pin-2.2.0.zip",
      "archiveFileName": "Pin-2.2.0.zip",
      "size": 45036,
      "checksum": "SHA-256:830288a99b3234eadb8584c0a85ea5d2968c7f6e3edd34c8c7a3fa7412b07cc5"
    },
    {
      "name": "Pin",
      "version": "2.2.1",
      "author": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "maintainer": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "sentence": "An easy to use Arduino library for fast digital I/O using port manipulation.",
      "paragraph": "Capable of simultaneous operations on multiple Pins. Supports Arduino Mega, Arduino Uno, and Arduino Leonardo.",
      "website": "https://github.com/fenichelar/Pin",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/fenichelar/Pin-2.2.1.zip",
      "archiveFileName": "Pin-2.2.1.zip",
      "size": 45118,
      "checksum": "SHA-256:bf0ba47c7edd566964093a2292a89e65b94283a44ae95d2d18431101d6b0d164"
    },
    {
      "name": "Pin",
      "version": "2.2.2",
      "author": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "maintainer": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "sentence": "An easy to use Arduino library for fast digital I/O using port manipulation.",
      "paragraph": "Capable of simultaneous operations on multiple Pins. Supports Arduino Mega, Arduino Uno, and Arduino Leonardo.",
      "website": "https://github.com/fenichelar/Pin",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/fenichelar/Pin-2.2.2.zip",
      "archiveFileName": "Pin-2.2.2.zip",
      "size": 45198,
      "checksum": "SHA-256:c8fe56f5d5109b82567c03084c71c11ed9c58c4bcc1ee51ac55ee9c4a7386b38"
    },
    {
      "name": "Pin",
      "version": "2.2.3",
      "author": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "maintainer": "Alec Fenichel \u003cfenichelar@gatech.edu\u003e",
      "sentence": "An easy to use Arduino library for fast digital I/O using port manipulation.",
      "paragraph": "Capable of simultaneous operations on multiple Pins. Supports Arduino Mega, Arduino Uno, and Arduino Leonardo.",
      "website": "https://pin.fenichelar.com",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/fenichelar/Pin-2.2.3.zip",
      "archiveFileName": "Pin-2.2.3.zip",
      "size": 45413,
      "checksum": "SHA-256:0aaedbe3de51bea065a84e8c077c62534d92c835724217a74f78692879b8831a"
    },
    {
      "name": "USB Host Shield Library 2.0",
      "version": "1.0.0",
      "author": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e, Alexei Glushchenko (Circuits@Home) \u003calex-gl@mail.ru\u003e",
      "maintainer": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e",
      "sentence": "Revision 2.0 of MAX3421E-based USB Host Shield Library.",
      "paragraph": "Supports HID devices, FTDI, ADK, ACM, PL2303, Bluetooth HID devices, SPP communication and mass storage devices. Furthermore it supports PS3, PS4, PS Buzz, Wii and Xbox controllers.",
      "website": "https://github.com/felis/USB_Host_Shield_2.0",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/felis/USB_Host_Shield_Library_2_0-1.0.0.zip",
      "archiveFileName": "USB_Host_Shield_Library_2_0-1.0.0.zip",
      "size": 355293,
      "checksum": "SHA-256:440617dc701825c4b68d2d5eb56ebae722ab60ce306ff81b66227270e120e723"
    },
    {
      "name": "USB Host Shield Library 2.0",
      "version": "1.1.0",
      "author": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e, Alexei Glushchenko (Circuits@Home) \u003calex-gl@mail.ru\u003e",
      "maintainer": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e",
      "sentence": "Revision 2.0 of MAX3421E-based USB Host Shield Library.",
      "paragraph": "Supports HID devices, FTDI, ADK, ACM, PL2303, Bluetooth HID devices, SPP communication and mass storage devices. Furthermore it supports PS3, PS4, PS Buzz, Wii and Xbox controllers.",
      "website": "https://github.com/felis/USB_Host_Shield_2.0",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/felis/USB_Host_Shield_Library_2_0-1.1.0.zip",
      "archiveFileName": "USB_Host_Shield_Library_2_0-1.1.0.zip",
      "size": 358405,
      "checksum": "SHA-256:3727a51418f09567e1dfc563dd5345b20e883631ba787b28d866efd6a30e3e16"
    },
    {
      "name": "USB Host Shield Library 2.0",
      "version": "1.1.1",
      "author": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e, Alexei Glushchenko (Circuits@Home) \u003calex-gl@mail.ru\u003e",
      "maintainer": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e",
      "sentence": "Revision 2.0 of MAX3421E-based USB Host Shield Library.",
      "paragraph": "Supports HID devices, FTDI, ADK, ACM, PL2303, Bluetooth HID devices, SPP communication and mass storage devices. Furthermore it supports PS3, PS4, PS Buzz, Wii and Xbox controllers.",
      "website": "https://github.com/felis/USB_Host_Shield_2.0",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/felis/USB_Host_Shield_Library_2_0-1.1.1.zip",
      "archiveFileName": "USB_Host_Shield_Library_2_0-1.1.1.zip",
      "size": 358540,
      "checksum": "SHA-256:2e535b833f7b00a4128ab6cdd9315a3abd4f1cc29cfe64b2b76c1df9481404e6"
    },
    {
      "name": "USB Host Shield Library 2.0",
      "version": "1.2.0",
      "author": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e, Alexei Glushchenko (Circuits@Home) \u003calex-gl@mail.ru\u003e",
      "maintainer": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e",
      "sentence": "Revision 2.0 of MAX3421E-based USB Host Shield Library.",
      "paragraph": "Supports HID devices, FTDI, ADK, ACM, PL2303, Bluetooth HID devices, SPP communication and mass storage devices. Furthermore it supports PS3, PS4, PS Buzz, Wii and Xbox controllers.",
      "website": "https://github.com/felis/USB_Host_Shield_2.0",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/felis/USB_Host_Shield_Library_2_0-1.2.0.zip",
      "archiveFileName": "USB_Host_Shield_Library_2_0-1.2.0.zip",
      "size": 359789,
      "checksum": "SHA-256:276f1036af2862c40f4f30dec0a5fe25a8a9c8687f9c051e9898f90b9dc60b71"
    },
    {
      "name": "USB Host Shield Library 2.0",
      "version": "1.2.1",
      "author": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e, Alexei Glushchenko (Circuits@Home) \u003calex-gl@mail.ru\u003e",
      "maintainer": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e",
      "sentence": "Revision 2.0 of MAX3421E-based USB Host Shield Library.",
      "paragraph": "Supports HID devices, FTDI, ADK, ACM, PL2303, Bluetooth HID devices, SPP communication and mass storage devices. Furthermore it supports PS3, PS4, PS Buzz, Wii and Xbox controllers.",
      "website": "https://github.com/felis/USB_Host_Shield_2.0",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/felis/USB_Host_Shield_Library_2_0-1.2.1.zip",
      "archiveFileName": "USB_Host_Shield_Library_2_0-1.2.1.zip",
      "size": 359952,
      "checksum": "SHA-256:7bc09ae54dad1d35541a9880f49d86393018f1e62bae04451e8b9c07c569513b"
    },
    {
      "name": "FTOLED",
      "version": "1.0.0",
      "author": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "maintainer": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "sentence": "Library to drive Freetronics OLED128 128x128 display.",
      "paragraph": "Supports graphics operations (test, images, etc.) on the OLED128. Can probably be used with other SSD1351 based displays. Manual at https://github.com/freetronics/FTOLED/wiki",
      "website": "https://github.com/freetronics/FTOLED/",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/freetronics/FTOLED-1.0.0.zip",
      "archiveFileName": "FTOLED-1.0.0.zip",
      "size": 320736,
      "checksum": "SHA-256:7d606059fe71398a3838c825ad31de6f6be7830de379b27b53a470f59a727f6e"
    },
    {
      "name": "FTOLED",
      "version": "1.1.0",
      "author": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "maintainer": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "sentence": "Library to drive Freetronics OLED128 128x128 display.",
      "paragraph": "Supports graphics operations (test, images, etc.) on the OLED128. Can probably be used with other SSD1351 based displays. Manual at https://github.com/freetronics/FTOLED/wiki",
      "website": "https://github.com/freetronics/FTOLED/",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/freetronics/FTOLED-1.1.0.zip",
      "archiveFileName": "FTOLED-1.1.0.zip",
      "size": 320935,
      "checksum": "SHA-256:143c7b748eb3a575ee82d35ebd88ad5adf7a180f9eb0a889a6213a2c3cf48337"
    },
    {
      "name": "FTOLED",
      "version": "1.1.2",
      "author": "Freetronics",
      "maintainer": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "sentence": "Library to drive Freetronics OLED128 128x128 display.",
      "paragraph": "Supports graphics operations (test, images, etc.) on the OLED128. Can probably be used with other SSD1351 based displays. Manual at https://github.com/freetronics/FTOLED/wiki",
      "website": "https://github.com/freetronics/FTOLED/",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/freetronics/FTOLED-1.1.2.zip",
      "archiveFileName": "FTOLED-1.1.2.zip",
      "size": 320934,
      "checksum": "SHA-256:a418a425b996315fcf737ef8eb3eabe204abe43a910dc4b3423d3921f76f84b0"
    },
    {
      "name": "FTRGBLED",
      "version": "1.0.0",
      "author": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "maintainer": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "sentence": "Freetronics RGBLED module (WS2801-based) driver library.",
      "paragraph": "Display RGB colours on a chain of WS2801-based Freetronics RGBLEDs (or compatible).",
      "website": "https://github.com/freetronics/FTRGBLED/",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/freetronics/FTRGBLED-1.0.0.zip",
      "archiveFileName": "FTRGBLED-1.0.0.zip",
      "size": 9326,
      "checksum": "SHA-256:8d53df09a2045a42357bb0be7aa807d108cff13ade331530dd52116b4e4ee6f7"
    },
    {
      "name": "DMD2",
      "version": "0.0.1",
      "author": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "maintainer": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "sentence": "Updated (beta) library for Freetronics DMD dot matrix displays.",
      "paragraph": "Supports graphics operations (test, images, etc.) Still experimental, the stable library is called called \"DMD\"",
      "website": "https://github.com/freetronics/DMD2/",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/freetronics/DMD2-0.0.1.zip",
      "archiveFileName": "DMD2-0.0.1.zip",
      "size": 51157,
      "checksum": "SHA-256:245d35b68cf95b0465e285ab426266b32947a92bb21bccb3326a4991a1cc73d8"
    },
    {
      "name": "DMD2",
      "version": "0.0.3",
      "author": "Freetronics",
      "maintainer": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "sentence": "Updated (beta) library for Freetronics DMD dot matrix displays.",
      "paragraph": "Supports graphics operations (test, images, etc.) Still experimental, the stable library is called called \"DMD\"",
      "website": "https://github.com/freetronics/DMD2/",
      "category": "Display",
      "architectures": [
        "avr",
        "sam",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/freetronics/DMD2-0.0.3.zip",
      "archiveFileName": "DMD2-0.0.3.zip",
      "size": 52049,
      "checksum": "SHA-256:d679995b25384f8e0ec00a6f62df68a3cb94120533a049c5c20dfc6a829caf18"
    },
    {
      "name": "BaroLibrary",
      "version": "1.0.0",
      "author": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "maintainer": "Angus Gratton \u003cangus@freetronics.com\u003e",
      "sentence": "Library for Measurement Specialties MS5637-02BA03 Altimeter/Pressure sensor (including Freetronics BARO module).",
      "website": "https://github.com/freetronics/BaroSensor",
      "category": "Sensors",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/freetronics/BaroLibrary-1.0.0.zip",
      "archiveFileName": "BaroLibrary-1.0.0.zip",
      "size": 19069,
      "checksum": "SHA-256:fe05973c6497a727adbb6daa801b48cad401f4f6f45bdae594b528982b2a8379"
    },
    {
      "name": "UTFT_SdRaw",
      "version": "1.2.0",
      "author": "Graham Lawrence \u003cghlawrence2000@yahoo.co.uk\u003e",
      "maintainer": "Graham Lawrence \u003cghlawrence2000@yahoo.co.uk\u003e",
      "sentence": "A library that adds high speed image drawing functions from SD to UTFT.",
      "paragraph": "Supports PAN/SCALE/CPLD Page from SD also basic drawing from Serial source.",
      "website": "https://github.com/ghlawrence2000/UTFT_SdRaw",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ghlawrence2000/UTFT_SdRaw-1.2.0.zip",
      "archiveFileName": "UTFT_SdRaw-1.2.0.zip",
      "size": 3687349,
      "checksum": "SHA-256:063599200aeb59d45f31a24a4ba3be16abd3f9f5d9d68c9b16814b6c81712eeb"
    },
    {
      "name": "UTFT_SdRaw",
      "version": "1.2.2",
      "author": "Graham Lawrence \u003cghlawrence2000@yahoo.co.uk\u003e",
      "maintainer": "Graham Lawrence \u003cghlawrence2000@yahoo.co.uk\u003e",
      "sentence": "A library that adds high speed image drawing functions from SD to UTFT.",
      "paragraph": "Supports PAN/SCALE/CPLD Page from SD also basic drawing from Serial source.",
      "website": "https://github.com/ghlawrence2000/UTFT_SdRaw",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ghlawrence2000/UTFT_SdRaw-1.2.2.zip",
      "archiveFileName": "UTFT_SdRaw-1.2.2.zip",
      "size": 3852674,
      "checksum": "SHA-256:79805c7643fd82262e07563e9e43248f6c2bbc83a5f96194e530bdd6663ccd1a"
    },
    {
      "name": "UTFT_SdRaw",
      "version": "1.2.3",
      "author": "Graham Lawrence \u003cghlawrence2000@yahoo.co.uk\u003e",
      "maintainer": "Graham Lawrence \u003cghlawrence2000@yahoo.co.uk\u003e",
      "sentence": "A library that adds high speed image drawing functions from SD to UTFT.",
      "paragraph": "Supports load/pan/loadcpld from SD and loadS for drawing images from Serial source.",
      "website": "https://github.com/ghlawrence2000/UTFT_SdRaw",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ghlawrence2000/UTFT_SdRaw-1.2.3.zip",
      "archiveFileName": "UTFT_SdRaw-1.2.3.zip",
      "size": 3855543,
      "checksum": "SHA-256:f23220b01ab6687124e19d90e33d84fa572d6a6902b87228e189b9071fc1bde0"
    },
    {
      "name": "EnableInterrupt",
      "version": "0.6.0",
      "author": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "maintainer": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "sentence": "Assign an interrupt to any supported pin on all Arduinos (includes Due / not Gemma) and ATmega 644/1284.",
      "paragraph": "Provides a ponsistent API across chips, architectures, and interrupt types. Makes External, Pin Change, and Due pin interrupts operate similarly. Code optimized for speed; includes an extra-high-speed mode for speed critical code.",
      "website": "https://github.com/GreyGnome/EnableInterrupt",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/GreyGnome/EnableInterrupt-0.6.0.zip",
      "archiveFileName": "EnableInterrupt-0.6.0.zip",
      "size": 2789764,
      "checksum": "SHA-256:4c8cc9b31588067cb58beb6d803ed9204eddee9bc65606dc571b601c338512a5"
    },
    {
      "name": "EnableInterrupt",
      "version": "0.8.2",
      "author": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "maintainer": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "sentence": "Assign an interrupt to any supported pin on all Arduinos (includes Due / not Gemma) and ATmega 644/1284.",
      "paragraph": "Provides a consistent API across chips, architectures, and interrupt types. Makes External, Pin Change, and Due pin interrupts operate similarly. Code optimized for speed; includes an extra-high-speed mode for speed critical code.",
      "website": "https://github.com/GreyGnome/EnableInterrupt",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/GreyGnome/EnableInterrupt-0.8.2.zip",
      "archiveFileName": "EnableInterrupt-0.8.2.zip",
      "size": 2801432,
      "checksum": "SHA-256:5511889dd39b3104be24c6768ca1ce95fb38ba8a679c6c5daea23478184badeb"
    },
    {
      "name": "EnableInterrupt",
      "version": "0.9.0",
      "author": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "maintainer": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "sentence": "Assign an interrupt to any supported pin on all Arduinos (includes Due) and ATmega 644/1284.",
      "paragraph": "Provides a consistent API across chips, architectures, and interrupt types. Makes External, Pin Change, and Due pin interrupts operate similarly. Code optimized for speed; includes an extra-high-speed mode for speed critical code.",
      "website": "https://github.com/GreyGnome/EnableInterrupt",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/GreyGnome/EnableInterrupt-0.9.0.zip",
      "archiveFileName": "EnableInterrupt-0.9.0.zip",
      "size": 2809628,
      "checksum": "SHA-256:685d898bde229e3123f32b4d10ddbbdde414fefd8f6100db74a617db866d5102"
    },
    {
      "name": "EnableInterrupt",
      "version": "0.9.1",
      "author": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "maintainer": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "sentence": "Assign an interrupt to any supported pin on all Arduinos, plus ATtiny 84/85 and ATmega 644/1284.",
      "paragraph": "Provides a consistent API across chips, architectures, and interrupt types. Makes External and Pin Change on the ATmega series, and Due and Zero pin interrupts operate similarly. Code optimized for speed; includes an extra-high-speed mode for speed critical code.",
      "website": "https://github.com/GreyGnome/EnableInterrupt",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/GreyGnome/EnableInterrupt-0.9.1.zip",
      "archiveFileName": "EnableInterrupt-0.9.1.zip",
      "size": 2811209,
      "checksum": "SHA-256:287598b578abd2b1a37e1ec1a51e1a7aa24a556a3d059a4cfb8f3073cc0ed7ac"
    },
    {
      "name": "EnableInterrupt",
      "version": "0.9.2",
      "author": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "maintainer": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "sentence": "Assign an interrupt to any supported pin on all Arduinos, plus ATtiny 84/85 and ATmega 644/1284.",
      "paragraph": "Provides a consistent API across chips, architectures, and interrupt types. Makes External and Pin Change on the ATmega series, and Due and Zero pin interrupts operate similarly. Code optimized for speed; includes an extra-high-speed mode for speed critical code.",
      "website": "https://github.com/GreyGnome/EnableInterrupt",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/GreyGnome/EnableInterrupt-0.9.2.zip",
      "archiveFileName": "EnableInterrupt-0.9.2.zip",
      "size": 2811468,
      "checksum": "SHA-256:73936609c85d1e81957eeddc2846c1dbea5ab18fe583b53bf15087a9b06332f8"
    },
    {
      "name": "EnableInterrupt",
      "version": "0.9.3",
      "author": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "maintainer": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "sentence": "Assign an interrupt to any supported pin on all Arduinos, plus ATtiny 84/85 and ATmega 644/1284.",
      "paragraph": "Provides a consistent API across chips, architectures, and interrupt types. Makes External and Pin Change on the ATmega series, and Due and Zero pin interrupts operate similarly. Code optimized for speed; includes an extra-high-speed mode for speed critical code.",
      "website": "https://github.com/GreyGnome/EnableInterrupt",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/GreyGnome/EnableInterrupt-0.9.3.zip",
      "archiveFileName": "EnableInterrupt-0.9.3.zip",
      "size": 2811651,
      "checksum": "SHA-256:2aad8b4fae2c06c38cbf3dba79da88067914bf9e243622c1cc9b29032f8bbd6b"
    },
    {
      "name": "EnableInterrupt",
      "version": "0.9.4",
      "author": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "maintainer": "Mike \"GreyGnome\" Schwager \u003cmschwage@gmail.com\u003e",
      "sentence": "Assign an interrupt to any supported pin on all Arduinos, plus ATtiny 84/85 and ATmega 644/1284.",
      "paragraph": "Provides a consistent API across chips, architectures, and interrupt types. Makes External and Pin Change on the ATmega series, and Due and Zero pin interrupts operate similarly. Code optimized for speed; includes an extra-high-speed mode for speed critical code.",
      "website": "https://github.com/GreyGnome/EnableInterrupt",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/GreyGnome/EnableInterrupt-0.9.4.zip",
      "archiveFileName": "EnableInterrupt-0.9.4.zip",
      "size": 2811884,
      "checksum": "SHA-256:9979379dd71501177bf68a6daa8263c996ae982029b6de605bf898cfb3262fad"
    },
    {
      "name": "Pushetta",
      "version": "1.0.0",
      "author": "Fabrizio Guglielmino \u003cguglielmino@gumino.com\u003e",
      "maintainer": "Fabrizio Guglielmino \u003cguglielmino@gumino.com\u003e",
      "sentence": "The library to use Pushetta service, a service to push notifications to mobile phones and other devices",
      "paragraph": "Pushetta is a Web API that provides an unificated way to send realtime notifications to multiple devices. Used with Arduino Yun it's possible to send alert, informations or any data in realtime to groups of subscribers (more on pushetta web site)",
      "website": "https://github.com/guglielmino/arduino-pushetta-lib",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/guglielmino/Pushetta-1.0.0.zip",
      "archiveFileName": "Pushetta-1.0.0.zip",
      "size": 4518,
      "checksum": "SHA-256:f89b11eaa3bab494f4e66ab959a098147e91aa08c200e832d03976a12c572a7b"
    },
    {
      "name": "OneSheeld",
      "version": "1.5.0",
      "author": "Integreight, Inc. \u003cinfo@integreight.com\u003e",
      "maintainer": "Eslam Ali \u003ceali@integreight.com\u003e, Islam Mustafa \u003cislam@integreight.com\u003e, Mustafa Fayez \u003cmustafa@integreight.com\u003e",
      "sentence": "It allows you to control your 1Sheeld(s).",
      "paragraph": "1Sheeld is an All-In-One Arduino shield that lets you use your smartphone capabilites (Sensors, Internet,...etc) to power your Arduino projects.",
      "website": "http://www.1sheeld.com/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Integreight/OneSheeld-1.5.0.zip",
      "archiveFileName": "OneSheeld-1.5.0.zip",
      "size": 151104,
      "checksum": "SHA-256:f05a120cc1593297e0e67780eb3c6433ec00f40c0578a0918c0a68143443586a"
    },
    {
      "name": "OneSheeld",
      "version": "1.6.0",
      "author": "Integreight, Inc. \u003cinfo@integreight.com\u003e",
      "maintainer": "Eslam Ali \u003ceali@integreight.com\u003e, Islam Mustafa \u003cislam@integreight.com\u003e, Mustafa Fayez \u003cmustafa@integreight.com\u003e",
      "sentence": "It allows you to control your 1Sheeld(s).",
      "paragraph": "1Sheeld is an All-In-One Arduino shield that lets you use your smartphone capabilites (Sensors, Internet,...etc) to power your Arduino projects.",
      "website": "http://www.1sheeld.com/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Integreight/OneSheeld-1.6.0.zip",
      "archiveFileName": "OneSheeld-1.6.0.zip",
      "size": 174260,
      "checksum": "SHA-256:42974390e562b4801725546211fb8033bef42caf8e19efdd2dbb0fee04d6d170"
    },
    {
      "name": "OneSheeld",
      "version": "1.6.1",
      "author": "Integreight, Inc. \u003cinfo@integreight.com\u003e",
      "maintainer": "Eslam Ali \u003ceali@integreight.com\u003e, Islam Mustafa \u003cislam@integreight.com\u003e, Mustafa Fayez \u003cmustafa@integreight.com\u003e",
      "sentence": "It allows you to control your 1Sheeld(s).",
      "paragraph": "1Sheeld is an All-In-One Arduino shield that lets you use your smartphone capabilites (Sensors, Internet,...etc) to power your Arduino projects.",
      "website": "http://www.1sheeld.com/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Integreight/OneSheeld-1.6.1.zip",
      "archiveFileName": "OneSheeld-1.6.1.zip",
      "size": 173466,
      "checksum": "SHA-256:a309dadc8a7aab464fc7fee6bf2ee898c84414ef50176504b543ec3b8e946d83"
    },
    {
      "name": "OneSheeld",
      "version": "1.7.0",
      "author": "Integreight, Inc. \u003cinfo@integreight.com\u003e",
      "maintainer": "Eslam Ali \u003ceali@integreight.com\u003e, Islam Mustafa \u003cislam@integreight.com\u003e, Mustafa Fayez \u003cmustafa@integreight.com\u003e",
      "sentence": "It allows you to control your 1Sheeld(s).",
      "paragraph": "1Sheeld is an All-In-One Arduino shield that lets you use your smartphone capabilites (Sensors, Internet,...etc) to power your Arduino projects.",
      "website": "http://www.1sheeld.com/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Integreight/OneSheeld-1.7.0.zip",
      "archiveFileName": "OneSheeld-1.7.0.zip",
      "size": 175685,
      "checksum": "SHA-256:93181a4d255fe762f08644dfb97dce30a1c1edb97f393257a920aab6565d59d8"
    },
    {
      "name": "OneSheeld",
      "version": "1.8.0",
      "author": "Integreight, Inc. \u003cinfo@integreight.com\u003e",
      "maintainer": "Eslam Ali \u003ceali@integreight.com\u003e, Islam Mustafa \u003cislam@integreight.com\u003e, Mustafa Fayez \u003cmustafa@integreight.com\u003e",
      "sentence": "It allows you to control your 1Sheeld(s).",
      "paragraph": "1Sheeld is an All-In-One Arduino shield that lets you use your smartphone capabilites (Sensors, Internet,...etc) to power your Arduino projects.",
      "website": "http://www.1sheeld.com/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Integreight/OneSheeld-1.8.0.zip",
      "archiveFileName": "OneSheeld-1.8.0.zip",
      "size": 178553,
      "checksum": "SHA-256:7f71e47d0fe15d317535facc16d8622a2997a54f3027b90acbaf2a30bb9d3a8a"
    },
    {
      "name": "Iobeam",
      "version": "0.1.0",
      "author": "iobeam \u003chello@iobeam.com\u003e",
      "maintainer": "Rob Kiefer \u003crob@iobeam.com\u003e",
      "sentence": "Client library for using the iobeam cloud.",
      "paragraph": "Iobeam is a data analysis platform for connected devices. This library allows Arduino clients to register and send data to the iobeam cloud for processing.",
      "website": "https://www.iobeam.com",
      "category": "Data Processing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/iobeam/Iobeam-0.1.0.zip",
      "archiveFileName": "Iobeam-0.1.0.zip",
      "size": 46661,
      "checksum": "SHA-256:f0f435999cad5f2f56ebd40b374895433676a8a295b155c3b1acefe28d5c2609"
    },
    {
      "name": "ArduinoThread",
      "version": "2.0.0",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "A simple way to run Threads on Arduino",
      "paragraph": "This Library helps to maintain organized and to facilitate the use of multiple tasks. We can use Timers Interrupts, and make it really powerfull, running \"pseudo-background\" tasks on the rug.",
      "website": "https://github.com/ivanseidel/ArduinoThread",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ivanseidel/ArduinoThread-2.0.0.zip",
      "archiveFileName": "ArduinoThread-2.0.0.zip",
      "size": 24165,
      "checksum": "SHA-256:98c8b956cc30cf714523644daf0f4c381eae76e031f6f34d7b7a5069774e4ba7"
    },
    {
      "name": "ArduinoThread",
      "version": "2.0.2",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "A simple way to run Threads on Arduino",
      "paragraph": "This Library helps to maintain organized and to facilitate the use of multiple tasks. We can use Timers Interrupts, and make it really powerfull, running \"pseudo-background\" tasks on the rug.",
      "website": "https://github.com/ivanseidel/ArduinoThread",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ivanseidel/ArduinoThread-2.0.2.zip",
      "archiveFileName": "ArduinoThread-2.0.2.zip",
      "size": 24211,
      "checksum": "SHA-256:c269c6141ee798112c380c2348eb0962e01dfc7f1ad4fa2a930b7470c5383aa8"
    },
    {
      "name": "ArduinoThread",
      "version": "2.0.3",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "A simple way to run Threads on Arduino",
      "paragraph": "This Library helps to maintain organized and to facilitate the use of multiple tasks. We can use Timers Interrupts, and make it really powerfull, running \"pseudo-background\" tasks on the rug.",
      "website": "https://github.com/ivanseidel/ArduinoThread",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ivanseidel/ArduinoThread-2.0.3.zip",
      "archiveFileName": "ArduinoThread-2.0.3.zip",
      "size": 24748,
      "checksum": "SHA-256:d324c9ba64a65378165d3560d7f429acd905ed5b095818bf059e466d10d29bab"
    },
    {
      "name": "ArduinoSensors",
      "version": "2.0.0",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "A Library of Libraries of Sensors",
      "paragraph": "REQUIRES \u003cArduinoThread\u003e  Library. This library was made to provide lot's of out-of-the-box features, such as 'Interfaces', 'Threadable' sensors, and reliability over C++ Objects.",
      "website": "https://github.com/ivanseidel/ArduinoSensors",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ivanseidel/ArduinoSensors-2.0.0.zip",
      "archiveFileName": "ArduinoSensors-2.0.0.zip",
      "size": 82021,
      "checksum": "SHA-256:23ec6373a88836fe780397894e6b394a536bc9075b3f5eda5baefd0c646461e1"
    },
    {
      "name": "ArduinoSensors",
      "version": "1.1.0",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "A Library of Libraries of Sensors",
      "paragraph": "REQUIRES \u003cArduinoThread\u003e  Library. This library was made to provide lot`s of out-of-the-box features, such as 'Interfaces', 'Threadable' sensors, and reliability over C++ Objects.",
      "website": "https://github.com/ivanseidel/ArduinoSensors",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ivanseidel/ArduinoSensors-1.1.0.zip",
      "archiveFileName": "ArduinoSensors-1.1.0.zip",
      "size": 82019,
      "checksum": "SHA-256:8b06cd8849870d8bd84ef617ef24dae82cfa23d47d09834374c672ad5261ec57"
    },
    {
      "name": "DueTimer",
      "version": "1.4.5",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "Timer Library fully implemented for Arduino DUE",
      "paragraph": "There are 9 Timer objects already instantiated for you: Timer0, Timer1, Timer2, Timer3, Timer4, Timer5, Timer6, Timer7 and Timer8.",
      "website": "https://github.com/ivanseidel/DueTimer",
      "category": "Timing",
      "architectures": [
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ivanseidel/DueTimer-1.4.5.zip",
      "archiveFileName": "DueTimer-1.4.5.zip",
      "size": 10421,
      "checksum": "SHA-256:aa95b7eddc774e62c5d8a846b5c358880d0ca1c4efed0869271053a5f0ac178e"
    },
    {
      "name": "DueTimer",
      "version": "1.4.6",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "Timer Library fully implemented for Arduino DUE",
      "paragraph": "There are 9 Timer objects already instantiated for you: Timer0, Timer1, Timer2, Timer3, Timer4, Timer5, Timer6, Timer7 and Timer8.",
      "website": "https://github.com/ivanseidel/DueTimer",
      "category": "Timing",
      "architectures": [
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ivanseidel/DueTimer-1.4.6.zip",
      "archiveFileName": "DueTimer-1.4.6.zip",
      "size": 10429,
      "checksum": "SHA-256:9fcd31a93511b58af91c036506d1622a062662c896a7561f549a929d8ca2ee6c"
    },
    {
      "name": "DueTimer",
      "version": "1.4.7",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "Timer Library fully implemented for Arduino DUE",
      "paragraph": "There are 9 Timer objects already instantiated for you: Timer0, Timer1, Timer2, Timer3, Timer4, Timer5, Timer6, Timer7 and Timer8.",
      "website": "https://github.com/ivanseidel/DueTimer",
      "category": "Timing",
      "architectures": [
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ivanseidel/DueTimer-1.4.7.zip",
      "archiveFileName": "DueTimer-1.4.7.zip",
      "size": 10828,
      "checksum": "SHA-256:b0a348c078d65dc8cc96186435143e35ac9f95aa81458777a603d108cbe3ce33"
    },
    {
      "name": "LinkedList",
      "version": "1.2.2",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "A fully implemented LinkedList made to work with Arduino projects",
      "paragraph": "The objective of this library is to create a pattern for projects. If you need to use a List of: int, float, objects, Lists or Wales. This is what you are looking for.",
      "website": "https://github.com/ivanseidel/LinkedList",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ivanseidel/LinkedList-1.2.2.zip",
      "archiveFileName": "LinkedList-1.2.2.zip",
      "size": 7002,
      "checksum": "SHA-256:d080606d4ac42d68b9b2e3dba764f8cb40a94c5a6a9030181278fc08fd404bbc"
    },
    {
      "name": "Gaussian",
      "version": "1.0.4",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "Gaussian math and Moving Average made easy",
      "paragraph": "Library that makes Gaussian work easy to use with C++ and Arduino. REQUIRES \u003cLinkedList\u003e Class if using GaussianAverage.",
      "website": "https://github.com/ivanseidel/Gaussian",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ivanseidel/Gaussian-1.0.4.zip",
      "archiveFileName": "Gaussian-1.0.4.zip",
      "size": 9719,
      "checksum": "SHA-256:9dc46032ebf060196cb99ba5648cee21dee857ad225caae02942faef1dda5da5"
    },
    {
      "name": "Gaussian",
      "version": "1.0.5",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "Gaussian math, Kalman Filters and Moving Averages made easy",
      "paragraph": "Simple to use and Object Oriented Class to deal with Gaussian and Moving Averages math. REQUIRES LinkedList Class if using GaussianAverage.",
      "website": "https://github.com/ivanseidel/Gaussian",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ivanseidel/Gaussian-1.0.5.zip",
      "archiveFileName": "Gaussian-1.0.5.zip",
      "size": 9728,
      "checksum": "SHA-256:28b3d8844bce7bca0f0827ff675f436321ea3d4282367fa7b5b728faf8236d6d"
    },
    {
      "name": "Gaussian",
      "version": "1.0.6",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "Gaussian math, Kalman Filters and Moving Averages made easy",
      "paragraph": "Simple to use and Object Oriented Class to deal with Gaussian and Moving Averages math. REQUIRES LinkedList Class if using GaussianAverage.",
      "website": "https://github.com/ivanseidel/Gaussian",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ivanseidel/Gaussian-1.0.6.zip",
      "archiveFileName": "Gaussian-1.0.6.zip",
      "size": 9733,
      "checksum": "SHA-256:25d03dd7f08e08bf099e42cffeb4c8bb5c1c9b6be7463a2e0f4c9c8fa366f1d7"
    },
    {
      "name": "Gaussian",
      "version": "1.0.7",
      "author": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "maintainer": "Ivan Seidel \u003civanseidel@gmail.com\u003e",
      "sentence": "Gaussian math, Kalman Filters and Moving Averages made easy",
      "paragraph": "Simple to use and Object Oriented Class to deal with Gaussian and Moving Averages math. REQUIRES LinkedList Class if using GaussianAverage.",
      "website": "https://github.com/ivanseidel/Gaussian",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ivanseidel/Gaussian-1.0.7.zip",
      "archiveFileName": "Gaussian-1.0.7.zip",
      "size": 10015,
      "checksum": "SHA-256:b253dba123cb89d71b2760f13c76c996bd062f126d53100a42006a3ef84304ad"
    },
    {
      "name": "arduino-menusystem",
      "version": "2.0.0",
      "author": "Jon Black \u003cjon@humblecoder.com\u003e",
      "maintainer": "Jon Black \u003cjon@humblecoder.com\u003e",
      "sentence": "A library for implementing a menu system",
      "paragraph": "Supports nesting and tracks the current selected item.",
      "website": "https://github.com/jonblack/arduino-menusystem",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/jonblack/arduino_menusystem-2.0.0.zip",
      "archiveFileName": "arduino_menusystem-2.0.0.zip",
      "size": 13058,
      "checksum": "SHA-256:0287304cd510978107180f67bc27e8bdfdbda36a56aa5273c6fadb0887ad09f0"
    },
    {
      "name": "arduino-menusystem",
      "version": "2.0.1",
      "author": "Jon Black \u003cjon@humblecoder.com\u003e",
      "maintainer": "Jon Black \u003cjon@humblecoder.com\u003e",
      "sentence": "A library for implementing a menu system",
      "paragraph": "Supports nesting and tracks the current selected item.",
      "website": "https://github.com/jonblack/arduino-menusystem",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/jonblack/arduino_menusystem-2.0.1.zip",
      "archiveFileName": "arduino_menusystem-2.0.1.zip",
      "size": 16537,
      "checksum": "SHA-256:598d0d96fc6d411a5e8ce10bd6091d7b113399b1dbd9698debaf776ef961187c"
    },
    {
      "name": "arduino-menusystem",
      "version": "2.0.2",
      "author": "Jon Black \u003cjon@humblecoder.com\u003e",
      "maintainer": "Jon Black \u003cjon@humblecoder.com\u003e",
      "sentence": "A library for implementing a menu system",
      "paragraph": "Supports nesting and tracks the current selected item.",
      "website": "https://github.com/jonblack/arduino-menusystem",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/jonblack/arduino_menusystem-2.0.2.zip",
      "archiveFileName": "arduino_menusystem-2.0.2.zip",
      "size": 20328,
      "checksum": "SHA-256:03450993feff752326bacfececed914a8cf03e8fe0aad0581a2d1323379015dc"
    },
    {
      "name": "arduino-fsm",
      "version": "2.0.0",
      "author": "Jon Black \u003cjon@humblecoder.com\u003e",
      "maintainer": "Jon Black \u003cjon@humblecoder.com\u003e",
      "sentence": "A library for implementing a finite state machine",
      "paragraph": "Supports events for exiting and entering states.",
      "website": "https://github.com/jonblack/arduino-fsm",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/jonblack/arduino_fsm-2.0.0.zip",
      "archiveFileName": "arduino_fsm-2.0.0.zip",
      "size": 4356,
      "checksum": "SHA-256:ab06048cd2e2306d525a1273484758721195d3cf9bce3ea8a2c6224dc27b1bca"
    },
    {
      "name": "arduino-fsm",
      "version": "2.1.0",
      "author": "Jon Black \u003cjon@humblecoder.com\u003e",
      "maintainer": "Jon Black \u003cjon@humblecoder.com\u003e",
      "sentence": "A library for implementing a finite state machine",
      "paragraph": "Supports events for exiting and entering states.",
      "website": "https://github.com/jonblack/arduino-fsm",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/jonblack/arduino_fsm-2.1.0.zip",
      "archiveFileName": "arduino_fsm-2.1.0.zip",
      "size": 5503,
      "checksum": "SHA-256:d26fd73154df8da4378674328ef5d0ee507bdb284bee26a97fce56b038c94637"
    },
    {
      "name": "aREST",
      "version": "2.1.0",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "RESTful API for the Arduino platform.",
      "paragraph": "A simple library that implements a REST API for Arduino. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/marcoschwartz/aREST-2.1.0.zip",
      "archiveFileName": "aREST-2.1.0.zip",
      "size": 27296,
      "checksum": "SHA-256:a781cab41018b37af48eed616261891967c4e808c30d87002409121d8bcd703c"
    },
    {
      "name": "aREST",
      "version": "1.9.9",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "RESTful API for the Arduino platform.",
      "paragraph": "A simple library that implements a REST API for Arduino. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/marcoschwartz/aREST-1.9.9.zip",
      "archiveFileName": "aREST-1.9.9.zip",
      "size": 22375,
      "checksum": "SHA-256:03c1dbc0cb54fa15b6aa549c952825b55145c6878131373720da0f041df9cc69"
    },
    {
      "name": "aREST",
      "version": "1.9.7",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "RESTful API for the Arduino platform.",
      "paragraph": "A simple library that implements a REST API for Arduino. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/marcoschwartz/aREST-1.9.7.zip",
      "archiveFileName": "aREST-1.9.7.zip",
      "size": 21384,
      "checksum": "SHA-256:e7d1a91813853a492f79606568e803bc4254919ab9902d3d6a8c1eb3a75ae31f"
    },
    {
      "name": "aREST",
      "version": "2.0.1",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "RESTful API for the Arduino platform.",
      "paragraph": "A simple library that implements a REST API for Arduino. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/marcoschwartz/aREST-2.0.1.zip",
      "archiveFileName": "aREST-2.0.1.zip",
      "size": 24906,
      "checksum": "SHA-256:e4ea483bd4a28c8e7a268f51dc7231041e6fac22f1d9cc9546e99f14964b273e"
    },
    {
      "name": "aREST",
      "version": "2.0.3",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "RESTful API for the Arduino platform.",
      "paragraph": "A simple library that implements a REST API for Arduino. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/marcoschwartz/aREST-2.0.3.zip",
      "archiveFileName": "aREST-2.0.3.zip",
      "size": 27297,
      "checksum": "SHA-256:87fa6f51eb121d6e6012eb2b42673e351b446634ca9e798ba13acebb56dd6a6b"
    },
    {
      "name": "aREST",
      "version": "2.1.1",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "RESTful API for the Arduino platform.",
      "paragraph": "A simple library that implements a REST API for Arduino. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/marcoschwartz/aREST-2.1.1.zip",
      "archiveFileName": "aREST-2.1.1.zip",
      "size": 27336,
      "checksum": "SHA-256:4b0eb47744905b3b3294067f7d46ea76e8b6a642fa329ef53d3e252f686a2ded"
    },
    {
      "name": "aREST UI",
      "version": "1.0.1",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "A graphical user interface for Arduino based on the aREST API.",
      "paragraph": "A graphical user interface for Arduino based on the aREST API. It is designed to be universal and currently supports REST calls via HTTP, Serial \u0026 BLE.  See more at: http://arest.io/",
      "website": "https://github.com/marcoschwartz/aREST_UI",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/marcoschwartz/aREST_UI-1.0.1.zip",
      "archiveFileName": "aREST_UI-1.0.1.zip",
      "size": 8143,
      "checksum": "SHA-256:e287b00d4364f5ccd95d3777cb3e47d236ee2de32a5ff77a8975b6fffcd40421"
    },
    {
      "name": "LiquidCrystal_I2C",
      "version": "1.1.0",
      "author": "Marco Schwartz",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "A library for DFRobot I2C LCD displays.",
      "paragraph": "A library for DFRobot I2C LCD displays. It allows to control DFRobot I2C displays with commands similar to the Arduino LiquidCrystal library.",
      "website": "https://github.com/marcoschwartz/LiquidCrystal_I2C",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/marcoschwartz/LiquidCrystal_I2C-1.1.0.zip",
      "archiveFileName": "LiquidCrystal_I2C-1.1.0.zip",
      "size": 19792,
      "checksum": "SHA-256:6b67d0064c55d64f3ef0cb05795b1fc612054e6aa80ea5f1f65b426f7f8ed9f9"
    },
    {
      "name": "LiquidCrystal_I2C",
      "version": "1.1.2",
      "author": "Frank de Brabander",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "A library for I2C LCD displays.",
      "paragraph": "The library allows to control I2C displays with functions extremely similar to LiquidCrystal library. THIS LIBRARY MIGHT NOT BE COMPATIBLE WITH EXISTING SKETCHES.",
      "website": "https://github.com/marcoschwartz/LiquidCrystal_I2C",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/marcoschwartz/LiquidCrystal_I2C-1.1.2.zip",
      "archiveFileName": "LiquidCrystal_I2C-1.1.2.zip",
      "size": 19856,
      "checksum": "SHA-256:7bcd8657a26644081bdfa9d8c9bb22937fcb2be08bb5aba02fff3756bc4291fb"
    },
    {
      "name": "LiquidCrystal I2C",
      "version": "1.1.1",
      "author": "Frank de Brabander",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "A library for I2C LCD displays.",
      "paragraph": "The library allows to control I2C displays with functions extremely similar to LiquidCrystal library. THIS LIBRARY MIGHT NOT BE COMPATIBLE WITH EXISTING SKETCHES.",
      "website": "https://github.com/marcoschwartz/LiquidCrystal_I2C",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/marcoschwartz/LiquidCrystal_I2C-1.1.1.zip",
      "archiveFileName": "LiquidCrystal_I2C-1.1.1.zip",
      "size": 19855,
      "checksum": "SHA-256:54b2d4ef7592a1eccf32a8e090be8778cb61d54cec12d9c9eb55945daf6236f5"
    },
    {
      "name": "LiquidCrystal I2C",
      "version": "1.1.2",
      "author": "Frank de Brabander",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "A library for I2C LCD displays.",
      "paragraph": "The library allows to control I2C displays with functions extremely similar to LiquidCrystal library. THIS LIBRARY MIGHT NOT BE COMPATIBLE WITH EXISTING SKETCHES.",
      "website": "https://github.com/marcoschwartz/LiquidCrystal_I2C",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/marcoschwartz/LiquidCrystal_I2C-1.1.2.zip",
      "archiveFileName": "LiquidCrystal_I2C-1.1.2.zip",
      "size": 19858,
      "checksum": "SHA-256:1a8756bec354c95361efe68171eff341ae788a07b549709114134a8a5e475657"
    },
    {
      "name": "SPIFlash",
      "version": "1.0.0",
      "author": "Marzogh",
      "maintainer": "Marzogh \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond W25Q80BV SPI flash library for Arduino",
      "paragraph": "Winbond W25Q80BV SPI flash library for Arduino",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Marzogh/SPIFlash-1.0.0.zip",
      "archiveFileName": "SPIFlash-1.0.0.zip",
      "size": 23467,
      "checksum": "SHA-256:a1fa1ffca85aae76b0f76e0da4af753fc7bc1b986eefeccd4f3e7abc27cad12a"
    },
    {
      "name": "SPIFlash",
      "version": "1.0.1",
      "author": "Prajwal Bhattaram",
      "maintainer": "Prajwal Bhattaram \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond W25Q80BV SPI flash library for Arduino.",
      "paragraph": "In its current form the library enables reading and writing bytes from and to various locations, reading and writing pages, sector, block and chip erase, powering down for low power operation and continuous read functions.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Marzogh/SPIFlash-1.0.1.zip",
      "archiveFileName": "SPIFlash-1.0.1.zip",
      "size": 23858,
      "checksum": "SHA-256:cfc1869af224e10800497795c1734061d616e15f6c2f70564ebecf53973e34c6"
    },
    {
      "name": "SPIFlash",
      "version": "1.2.0",
      "author": "Prajwal Bhattaram",
      "maintainer": "Prajwal Bhattaram \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond W25Q80BV SPI flash library for Arduino.",
      "paragraph": "This library enables reading and writing bytes from and to various locations, reading and writing pages, sector, block and chip erase, powering down for low power operation and continuous read functions. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Marzogh/SPIFlash-1.2.0.zip",
      "archiveFileName": "SPIFlash-1.2.0.zip",
      "size": 26074,
      "checksum": "SHA-256:271ce7cf8ce7c9a514acfad751daaf99afd75f9b81e62dcdeab3bd26dc9f6c0c"
    },
    {
      "name": "SPIFlash",
      "version": "1.2.1",
      "author": "Prajwal Bhattaram",
      "maintainer": "Prajwal Bhattaram \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond W25Q80BV SPI flash library for Arduino.",
      "paragraph": "This library enables reading and writing bytes from and to various locations, reading and writing pages, sector, block and chip erase, powering down for low power operation and continuous read functions. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Marzogh/SPIFlash-1.2.1.zip",
      "archiveFileName": "SPIFlash-1.2.1.zip",
      "size": 25879,
      "checksum": "SHA-256:2579679d46fd55a8c9f1ffa3e65bb07f74c40b87b696cb067cd875d043816c9c"
    },
    {
      "name": "SPIFlash",
      "version": "1.2.2",
      "author": "Prajwal Bhattaram",
      "maintainer": "Prajwal Bhattaram \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond W25Q80BV SPI flash library for Arduino.",
      "paragraph": "This library enables reading and writing bytes from and to various locations, reading and writing pages, sector, block and chip erase, powering down for low power operation and continuous read functions. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Marzogh/SPIFlash-1.2.2.zip",
      "archiveFileName": "SPIFlash-1.2.2.zip",
      "size": 25882,
      "checksum": "SHA-256:27b65597fdb6a8f5a703e72e4d530e584f8af762db5000ee40dd0f184d914f36"
    },
    {
      "name": "SPIFlash",
      "version": "1.3.0",
      "author": "Marzogh",
      "maintainer": "Marzogh \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond SPI flash library for Arduino.",
      "paragraph": "This library enables read, write, erase and power functions on the following Winbond NOR Flash chips - W25X05CL, W25X10BV, W25X20BV, W25X40BV, W25Q80BV, W25Q16BV, W25Q32BV, W25Q64BV \u0026 W25Q128BV. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Marzogh/SPIFlash-1.3.0.zip",
      "archiveFileName": "SPIFlash-1.3.0.zip",
      "size": 66660,
      "checksum": "SHA-256:cbd045381d3f4e749988a48afd60b08cb7215082383d84641c7bfe8c6d88024e"
    },
    {
      "name": "SPIFlash",
      "version": "1.3.1",
      "author": "Marzogh",
      "maintainer": "Marzogh \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond SPI flash library for Arduino.",
      "paragraph": "This library enables read, write, erase and power functions on the following Winbond NOR Flash chips - W25X05CL, W25X10BV, W25X20BV, W25X40BV, W25Q80BV, W25Q16BV, W25Q32BV, W25Q64BV \u0026 W25Q128BV. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Marzogh/SPIFlash-1.3.1.zip",
      "archiveFileName": "SPIFlash-1.3.1.zip",
      "size": 68218,
      "checksum": "SHA-256:da88a38eca6232971772c34810300d49a1b18b451067f117220f4b465c06f251"
    },
    {
      "name": "SPIFlash",
      "version": "1.3.2",
      "author": "Marzogh",
      "maintainer": "Marzogh \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond SPI flash library for Arduino.",
      "paragraph": "This library enables read, write, erase and power functions on the following Winbond NOR Flash chips - W25X05CL, W25X10BV, W25X20BV, W25X40BV, W25Q80BV, W25Q16BV, W25Q32BV, W25Q64BV \u0026 W25Q128BV. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Marzogh/SPIFlash-1.3.2.zip",
      "archiveFileName": "SPIFlash-1.3.2.zip",
      "size": 70252,
      "checksum": "SHA-256:e20678106ac30555a14dc4c960c924335b7d56f9028610eef5e92b37e68b8d5b"
    },
    {
      "name": "SPIFlash",
      "version": "2.0.0",
      "author": "Marzogh",
      "maintainer": "Marzogh \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond SPI flash library for Arduino.",
      "paragraph": "This library enables read, write, erase and power functions on the following Winbond NOR Flash chips - W25X05CL, W25X10BV, W25X20BV, W25X40BV, W25Q80BV, W25Q16BV, W25Q32BV, W25Q64BV \u0026 W25Q128BV. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Marzogh/SPIFlash-2.0.0.zip",
      "archiveFileName": "SPIFlash-2.0.0.zip",
      "size": 75518,
      "checksum": "SHA-256:3d499a810c4099b953aaa306a0bda0529a0acb7e3e0bb7e2bbc0d0d63826dd3d"
    },
    {
      "name": "SPIFlash",
      "version": "2.1.0",
      "author": "Marzogh",
      "maintainer": "Marzogh \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond SPI flash library for Arduino.",
      "paragraph": "This library enables read, write, erase and power functions on the following Winbond NOR Flash chips - W25X05CL, W25X10BV, W25X20BV, W25X40BV, W25Q80BV, W25Q16BV, W25Q32BV, W25Q64BV \u0026 W25Q128BV. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Marzogh/SPIFlash-2.1.0.zip",
      "archiveFileName": "SPIFlash-2.1.0.zip",
      "size": 76312,
      "checksum": "SHA-256:ea9d73bd9ee05811efe41326121696da63c3df1fdd7e834881ab1dd1a406745b"
    },
    {
      "name": "SPIFlash",
      "version": "2.1.1",
      "author": "Marzogh",
      "maintainer": "Marzogh \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond SPI flash library for Arduino.",
      "paragraph": "This library enables read, write, erase and power functions on the following Winbond NOR Flash chips - W25X05CL, W25X10BV, W25X20BV, W25X40BV, W25Q80BV, W25Q16BV, W25Q32BV, W25Q64BV \u0026 W25Q128BV. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Marzogh/SPIFlash-2.1.1.zip",
      "archiveFileName": "SPIFlash-2.1.1.zip",
      "size": 76506,
      "checksum": "SHA-256:0db8ced6596e6a45c1145598c18db46092b3e2bfdaa96e8af2508772611c6800"
    },
    {
      "name": "SPIFlash",
      "version": "2.2.0",
      "author": "Prajwal Bhattaram",
      "maintainer": "Prajwal Bhattaram \u003cmarzogh@icloud.com\u003e",
      "sentence": "Winbond SPI flash library for Arduino.",
      "paragraph": "This library enables read, write, erase and power functions on the following Winbond NOR Flash chips - W25X05CL, W25X10BV, W25X20BV, W25X40BV, W25Q80BV, W25Q16BV, W25Q32BV, W25Q64BV \u0026 W25Q128BV. Refer to change log for further information about this release.",
      "website": "https://github.com/Marzogh/SPIFlash",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Marzogh/SPIFlash-2.2.0.zip",
      "archiveFileName": "SPIFlash-2.2.0.zip",
      "size": 80921,
      "checksum": "SHA-256:9c0deeffd1d8dedc3aaaf506757fd066f9d75b3229d855592c621424883ae8d7"
    },
    {
      "name": "DMXSerial",
      "version": "1.2.0",
      "author": "Matthias Hertel",
      "maintainer": "Matthias Hertel \u003cwww.mathertel.de\u003e",
      "sentence": "Enables DMX communication using the built-in serial port for Arduino boards UNO, Leonardo, Mega.",
      "paragraph": "This is a library to implement DMX controllers and devices.",
      "website": "http://www.mathertel.de/Arduino/DMXSerial.aspx",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mathertel/DMXSerial-1.2.0.zip",
      "archiveFileName": "DMXSerial-1.2.0.zip",
      "size": 13084,
      "checksum": "SHA-256:7806222a9daabb70677fbe184c9080e9132cc756bbc08c4ef78bcc2ec648b970"
    },
    {
      "name": "DMXSerial",
      "version": "1.3.0",
      "author": "Matthias Hertel",
      "maintainer": "Matthias Hertel \u003cwww.mathertel.de\u003e",
      "sentence": "Enables DMX communication using the built-in serial port for Arduino boards UNO, Leonardo, Mega.",
      "paragraph": "This is a library for implementing DMX controllers and devices.",
      "website": "http://www.mathertel.de/Arduino/DMXSerial.aspx",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mathertel/DMXSerial-1.3.0.zip",
      "archiveFileName": "DMXSerial-1.3.0.zip",
      "size": 13512,
      "checksum": "SHA-256:9d84507eb15ce01f26640ea0eb8ac262cdb71a4445e8b36de57ebc8b5fd1ba10"
    },
    {
      "name": "DMXSerial2",
      "version": "1.1.0",
      "author": "Matthias Hertel",
      "maintainer": "Matthias Hertel, http://www.mathertel.de",
      "sentence": "Enables building DMX/RDM devices using the built-in serial port for Arduino boards UNO, Leonardo, Mega.",
      "paragraph": "This is a library to implement a DMX devices that also listen and respond to RDM commands to retrieve information from the DMX devices.",
      "website": "http://www.mathertel.de/Arduino/DMXSerial2.aspx",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mathertel/DMXSerial2-1.1.0.zip",
      "archiveFileName": "DMXSerial2-1.1.0.zip",
      "size": 28586,
      "checksum": "SHA-256:abde725694d3724347841fecf7997264d434adf6187c325ad704f26aa514994a"
    },
    {
      "name": "DMXSerial2",
      "version": "1.2.0",
      "author": "Matthias Hertel",
      "maintainer": "Matthias Hertel, http://www.mathertel.de",
      "sentence": "Enables building DMX/RDM devices using the built-in serial port for Arduino boards UNO, Leonardo, Mega.",
      "paragraph": "This is a library to implement a DMX devices that also listen and respond to RDM commands to retrieve information from the DMX devices.",
      "website": "http://www.mathertel.de/Arduino/DMXSerial2.aspx",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mathertel/DMXSerial2-1.2.0.zip",
      "archiveFileName": "DMXSerial2-1.2.0.zip",
      "size": 28725,
      "checksum": "SHA-256:77fb1bfa243f391df2575d8e3b8530961ecd989938e27f03915d26e233034856"
    },
    {
      "name": "Radio",
      "version": "1.0.0",
      "author": "Matthias Hertel",
      "maintainer": "Matthias Hertel, \u003cwww.mathertel.de\u003e",
      "sentence": "Library for controlling FM radio receiver chips.",
      "paragraph": "This library implements the functions to control the FM radio receiver chips TEA5767, RDA5807M, SI4703, SI4705 to build a FM radio receiver. The library unifies the functions for all the chips so they may be swapped on demand.",
      "website": "http://www.mathertel.de/Arduino/RadioLibrary.aspx",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mathertel/Radio-1.0.0.zip",
      "archiveFileName": "Radio-1.0.0.zip",
      "size": 113237,
      "checksum": "SHA-256:47d3c10c75cb914cf8b4aa0c47e0a83f20a5726090f172a8fd616e937af8d921"
    },
    {
      "name": "ThingSpeak",
      "version": "1.0.1",
      "author": "MathWorks \u003cthingspeak@mathworks.com\u003e",
      "maintainer": "MathWorks \u003cthingspeak@mathworks.com\u003e",
      "sentence": "ThingSpeak Communication Library for Arduino",
      "paragraph": "ThingSpeak ( https://www.thingspeak.com ) is a free IoT service for building systems that collect, analyze, and react to their environments.",
      "website": "https://www.thingspeak.com/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mathworks/ThingSpeak-1.0.1.zip",
      "archiveFileName": "ThingSpeak-1.0.1.zip",
      "size": 146595,
      "checksum": "SHA-256:8d661e6a42d15798b05ef72344df1e7f9e5725fcded9bb74eb8040ca9adc401b"
    },
    {
      "name": "ThingSpeak",
      "version": "1.1.0",
      "author": "MathWorks \u003cthingspeak@mathworks.com\u003e",
      "maintainer": "MathWorks \u003cthingspeak@mathworks.com\u003e",
      "sentence": "ThingSpeak Communication Library for Arduino \u0026 ESP8266",
      "paragraph": "ThingSpeak ( https://www.thingspeak.com ) is a free IoT service for building systems that collect, analyze, and react to their environments.",
      "website": "https://www.thingspeak.com/",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mathworks/ThingSpeak-1.1.0.zip",
      "archiveFileName": "ThingSpeak-1.1.0.zip",
      "size": 148770,
      "checksum": "SHA-256:da46e638a8c88244d4f57c1a349b7ba09d0867ee17de67e85acea9d1eb0d3350"
    },
    {
      "name": "ThingSpeak",
      "version": "1.1.1",
      "author": "MathWorks \u003cthingspeak@mathworks.com\u003e",
      "maintainer": "MathWorks \u003cthingspeak@mathworks.com\u003e",
      "sentence": "ThingSpeak Communication Library for Arduino \u0026 ESP8266",
      "paragraph": "ThingSpeak ( https://www.thingspeak.com ) is a free IoT service for building systems that collect, analyze, and react to their environments.",
      "website": "https://www.thingspeak.com/",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mathworks/ThingSpeak-1.1.1.zip",
      "archiveFileName": "ThingSpeak-1.1.1.zip",
      "size": 149980,
      "checksum": "SHA-256:bb2c70861c5205ba48016a41a6ec0b6904e6d59b9d368277c75436d7fd83ebcc"
    },
    {
      "name": "ThingSpeak",
      "version": "1.0.0",
      "author": "MathWorks \u003cthingspeak@mathworks.com\u003e",
      "maintainer": "MathWorks \u003cthingspeak@mathworks.com\u003e",
      "sentence": "ThingSpeak Communication Library for Arduino",
      "paragraph": "ThingSpeak ( https://www.thingspeak.com ) is a free IoT service for building systems that collect, analyze, and react to their environments.",
      "website": "https://www.thingspeak.com/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mathworks/ThingSpeak-1.0.0.zip",
      "archiveFileName": "ThingSpeak-1.0.0.zip",
      "size": 30813,
      "checksum": "SHA-256:eac32ac3735f713ec8957265db85dfad1006f6a1603dabdb6a2b5335a6c1bc07"
    },
    {
      "name": "DallasTemperature",
      "version": "3.7.2",
      "author": "Miles Burton \u003cmiles@mnetcs.com\u003e, Tim Newsome \u003cnuisance@casualhacker.net\u003e, Guil Barros \u003cgfbarros@bappos.com\u003e, Rob Tillaart \u003crob.tillaart@gmail.com\u003e",
      "maintainer": "Miles Burton \u003cmiles@mnetcs.com\u003e",
      "sentence": "Arduino Library for Dallas Temperature ICs",
      "paragraph": "Supports DS18B20, DS18S20, DS1822, DS1820",
      "website": "https://github.com/milesburton/Arduino-Temperature-Control-Library",
      "category": "Sensor",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/milesburton/DallasTemperature-3.7.2.zip",
      "archiveFileName": "DallasTemperature-3.7.2.zip",
      "size": 26295,
      "checksum": "SHA-256:5126587c1c2aad8d5b5bf08e5d9ed55a640e9d4d911f38e710be3ff85b1d6ca3"
    },
    {
      "name": "DallasTemperature",
      "version": "3.7.5",
      "author": "Miles Burton \u003cmiles@mnetcs.com\u003e, Tim Newsome \u003cnuisance@casualhacker.net\u003e, Guil Barros \u003cgfbarros@bappos.com\u003e, Rob Tillaart \u003crob.tillaart@gmail.com\u003e",
      "maintainer": "Miles Burton \u003cmiles@mnetcs.com\u003e",
      "sentence": "Arduino Library for Dallas Temperature ICs",
      "paragraph": "Supports DS18B20, DS18S20, DS1822, DS1820",
      "website": "https://github.com/milesburton/Arduino-Temperature-Control-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/milesburton/DallasTemperature-3.7.5.zip",
      "archiveFileName": "DallasTemperature-3.7.5.zip",
      "size": 27463,
      "checksum": "SHA-256:4e89b355f004bf7d8ddb09b295f3090ed5eac7a3227e6fecbe88f84a3dee92a7"
    },
    {
      "name": "DallasTemperature",
      "version": "3.7.6",
      "author": "Miles Burton \u003cmiles@mnetcs.com\u003e, Tim Newsome \u003cnuisance@casualhacker.net\u003e, Guil Barros \u003cgfbarros@bappos.com\u003e, Rob Tillaart \u003crob.tillaart@gmail.com\u003e",
      "maintainer": "Miles Burton \u003cmiles@mnetcs.com\u003e",
      "sentence": "Arduino Library for Dallas Temperature ICs",
      "paragraph": "Supports DS18B20, DS18S20, DS1822, DS1820",
      "website": "https://github.com/milesburton/Arduino-Temperature-Control-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/milesburton/DallasTemperature-3.7.6.zip",
      "archiveFileName": "DallasTemperature-3.7.6.zip",
      "size": 27562,
      "checksum": "SHA-256:e700dc89799bd5ee1d31349b367cee46e1862d26669f26c531974ca7b2a2e40e"
    },
    {
      "name": "MINDSi",
      "version": "2.0.0",
      "author": "MINDSi corp.",
      "maintainer": "MINDSi \u003ccode@mymindsi.com\u003e",
      "sentence": "Code to assist with running MINDSi robots",
      "paragraph": "This library contains code for running all the sensors sold with MINDSi kits, and examples for each chassis",
      "website": "http://mindsieducation.com/programming-resources",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/MINDS-i/MINDSi-2.0.0.zip",
      "archiveFileName": "MINDSi-2.0.0.zip",
      "size": 28366,
      "checksum": "SHA-256:3ff5339cc7c551aa24e0e5a5fb917eafd73e6ab0cc49b1d6370c48b5284563dc"
    },
    {
      "name": "MINDSi",
      "version": "2.1.0",
      "author": "MINDSi corp.",
      "maintainer": "MINDSi \u003ccode@mymindsi.com\u003e",
      "sentence": "Code to assist with running MINDSi robots",
      "paragraph": "This library contains code for running all the sensors sold with MINDSi kits, and examples for each chassis",
      "website": "http://mindsieducation.com/programming-resources",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/MINDS-i/MINDSi-2.1.0.zip",
      "archiveFileName": "MINDSi-2.1.0.zip",
      "size": 28527,
      "checksum": "SHA-256:f527ba330ca7471643da577b01fbfdc5c30e3ef5da5875897c2bf733d53b9c5b"
    },
    {
      "name": "MINDSi",
      "version": "2.2.0",
      "author": "MINDSi corp.",
      "maintainer": "MINDSi \u003ccode@mymindsi.com\u003e",
      "sentence": "Code to assist with running MINDSi robots",
      "paragraph": "This library contains code for running all the sensors sold with MINDSi kits, and examples for each chassis",
      "website": "http://mindsieducation.com/programming-resources",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/MINDS-i/MINDSi-2.2.0.zip",
      "archiveFileName": "MINDSi-2.2.0.zip",
      "size": 32762,
      "checksum": "SHA-256:a066d724a0175baa0bbc93a0438ab08d56cf98d5da1342d378240d8c06ab7f5e"
    },
    {
      "name": "MINDSi",
      "version": "2.2.1",
      "author": "MINDSi corp.",
      "maintainer": "MINDSi \u003ccode@mymindsi.com\u003e",
      "sentence": "Code to assist with running MINDSi robots",
      "paragraph": "This library contains code for running all the sensors sold with MINDSi kits, and examples for each chassis",
      "website": "http://mindsieducation.com/programming-resources",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/MINDS-i/MINDSi-2.2.1.zip",
      "archiveFileName": "MINDSi-2.2.1.zip",
      "size": 32837,
      "checksum": "SHA-256:8d1ebc7ff00dc0313df9828278468650a4689051a8a5f06ce3dcc232d2af16e8"
    },
    {
      "name": "MINDSi",
      "version": "2.2.2",
      "author": "MINDSi corp.",
      "maintainer": "MINDSi \u003ccode@mymindsi.com\u003e",
      "sentence": "Code to assist with running MINDSi robots",
      "paragraph": "This library contains code for running all the sensors sold with MINDSi kits, and examples for each chassis",
      "website": "http://mindsieducation.com/programming-resources",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/MINDS-i/MINDSi-2.2.2.zip",
      "archiveFileName": "MINDSi-2.2.2.zip",
      "size": 32826,
      "checksum": "SHA-256:f2c17459e09ac829bcbb29e8ab35b8b91ce6f53eae1784b62138935f3417fc78"
    },
    {
      "name": "Mirobot",
      "version": "2.0.0",
      "author": "Ben Pirt \u003cben@pirt.co.uk\u003e",
      "maintainer": "Ben Pirt \u003cben@pirt.co.uk\u003e",
      "sentence": "This is the library that makes Mirobot (http://mirobot.io) work.",
      "paragraph": "Mirobot is an easy to use robotics kit for teaching kids about technology. This library contains the main firmware as well as the routines you need to program it yourself directly.",
      "website": "http://mirobot.io",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mirobot/Mirobot-2.0.0.zip",
      "archiveFileName": "Mirobot-2.0.0.zip",
      "size": 23980,
      "checksum": "SHA-256:b5499998a7c412700305fa8c88031569de07298d0921bc0a0185e6875a1d6fc0"
    },
    {
      "name": "Mirobot",
      "version": "2.0.1",
      "author": "Ben Pirt \u003cben@pirt.co.uk\u003e",
      "maintainer": "Ben Pirt \u003cben@pirt.co.uk\u003e",
      "sentence": "This is the library that makes Mirobot (http://mirobot.io) work.",
      "paragraph": "Mirobot is an easy to use robotics kit for teaching kids about technology. This library contains the main firmware as well as the routines you need to program it yourself directly.",
      "website": "http://mirobot.io",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mirobot/Mirobot-2.0.1.zip",
      "archiveFileName": "Mirobot-2.0.1.zip",
      "size": 24554,
      "checksum": "SHA-256:3af26620d894b56233de673d1e95db6235a035c7ada60308578e91b534c6a579"
    },
    {
      "name": "Mirobot",
      "version": "2.0.2",
      "author": "Ben Pirt \u003cben@pirt.co.uk\u003e",
      "maintainer": "Ben Pirt \u003cben@pirt.co.uk\u003e",
      "sentence": "This is the library that makes Mirobot (http://mirobot.io) work.",
      "paragraph": "Mirobot is an easy to use robotics kit for teaching kids about technology. This library contains the main firmware as well as the routines you need to program it yourself directly.",
      "website": "http://mirobot.io",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mirobot/Mirobot-2.0.2.zip",
      "archiveFileName": "Mirobot-2.0.2.zip",
      "size": 24387,
      "checksum": "SHA-256:0ad8945823a706467ad80cf91dca619f17e77bca7b23f3a870fdb6185759160d"
    },
    {
      "name": "Mirobot",
      "version": "2.0.6",
      "author": "Ben Pirt \u003cben@pirt.co.uk\u003e",
      "maintainer": "Ben Pirt \u003cben@pirt.co.uk\u003e",
      "sentence": "This is the library that makes Mirobot (http://mirobot.io) work.",
      "paragraph": "Mirobot is an easy to use robotics kit for teaching kids about technology. This library contains the main firmware as well as the routines you need to program it yourself directly.",
      "website": "http://mirobot.io",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mirobot/Mirobot-2.0.6.zip",
      "archiveFileName": "Mirobot-2.0.6.zip",
      "size": 25093,
      "checksum": "SHA-256:af51f9df60f42737d469540aeee71749a1a0063ad3ad50c42579710093916573"
    },
    {
      "name": "ArduinoUnit",
      "version": "2.1.0",
      "author": "Matthew Murdoch",
      "maintainer": "Matthew Murdoch \u003cmatthew.murdoch.0@gmail.com\u003e",
      "sentence": "Unit test framework for arduino projects.",
      "paragraph": "ArduinoUnit is a unit testing framework for Arduino libraries.",
      "website": "https://github.com/mmurdoch/arduinounit",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mmurdoch/ArduinoUnit-2.1.0.zip",
      "archiveFileName": "ArduinoUnit-2.1.0.zip",
      "size": 297056,
      "checksum": "SHA-256:c77505a14fb99a34d44b2394a9bd2f4d1da709123127df9ed08390ba5cf2fabe"
    },
    {
      "name": "JTAG",
      "version": "1.0.1",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mrjimenez/JTAG-1.0.1.zip",
      "archiveFileName": "JTAG-1.0.1.zip",
      "size": 52386,
      "checksum": "SHA-256:344d7d1eded8d20f97102bebec912a15a4fb908c858206ad0277773f74d505bb"
    },
    {
      "name": "JTAG",
      "version": "1.0.10",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mrjimenez/JTAG-1.0.10.zip",
      "archiveFileName": "JTAG-1.0.10.zip",
      "size": 77524,
      "checksum": "SHA-256:50c8dc6bec4b986ec8146a9cd8da8255cf273eb380302d22ca9958157b9fd7ce"
    },
    {
      "name": "JTAG",
      "version": "1.0.11",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mrjimenez/JTAG-1.0.11.zip",
      "archiveFileName": "JTAG-1.0.11.zip",
      "size": 79866,
      "checksum": "SHA-256:cc7b686ed7bb689a123ea5a24f0a26cdda7f57c57dbc34ee243f7bf2f8294142"
    },
    {
      "name": "JTAG",
      "version": "1.0.12",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mrjimenez/JTAG-1.0.12.zip",
      "archiveFileName": "JTAG-1.0.12.zip",
      "size": 79993,
      "checksum": "SHA-256:8cc92047fb049e7242aef7db1bc9066cde970b90af0099a689afb956474fef4f"
    },
    {
      "name": "JTAG",
      "version": "1.0.13",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mrjimenez/JTAG-1.0.13.zip",
      "archiveFileName": "JTAG-1.0.13.zip",
      "size": 80029,
      "checksum": "SHA-256:d23c107302cb88a158d837aed56efc1e53bfc212136d114fef1f58a8e6390237"
    },
    {
      "name": "JTAG",
      "version": "1.0.14",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mrjimenez/JTAG-1.0.14.zip",
      "archiveFileName": "JTAG-1.0.14.zip",
      "size": 80091,
      "checksum": "SHA-256:b6f793857bf131d4edcac7ee35beb10438ede0ad6ac0e7fb68f3ee5f5c993c24"
    },
    {
      "name": "JTAG",
      "version": "1.0.3",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mrjimenez/JTAG-1.0.3.zip",
      "archiveFileName": "JTAG-1.0.3.zip",
      "size": 60315,
      "checksum": "SHA-256:f12e6a2ca4083b19036a0756c709a588c72db74b98f03d943a6b2a8e4ea594dc"
    },
    {
      "name": "JTAG",
      "version": "1.0.5",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mrjimenez/JTAG-1.0.5.zip",
      "archiveFileName": "JTAG-1.0.5.zip",
      "size": 67288,
      "checksum": "SHA-256:66493356bcbe16871d320caf8aeb43d25ef0c830ce1fb31dfc84225aa1ebba84"
    },
    {
      "name": "JTAG",
      "version": "1.0.6",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mrjimenez/JTAG-1.0.6.zip",
      "archiveFileName": "JTAG-1.0.6.zip",
      "size": 67655,
      "checksum": "SHA-256:378b73063edfb6339f44d2c5a029b00e474fe2666582796c81fced6fd3d128ce"
    },
    {
      "name": "JTAG",
      "version": "1.0.7",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mrjimenez/JTAG-1.0.7.zip",
      "archiveFileName": "JTAG-1.0.7.zip",
      "size": 67655,
      "checksum": "SHA-256:cfe833ee4f446ce9a2573dd35b02c840877804c69226b883c648939a9fd0ba49"
    },
    {
      "name": "JTAG",
      "version": "1.0.8",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mrjimenez/JTAG-1.0.8.zip",
      "archiveFileName": "JTAG-1.0.8.zip",
      "size": 67632,
      "checksum": "SHA-256:37a7de17ea81c1074fb3341cc5392ad9094f777ecfeb12ea083f99d120881b0b"
    },
    {
      "name": "JTAG",
      "version": "1.0.9",
      "author": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "maintainer": "Marcelo Jimenez \u003cmarcelo.jimenez@gmail.com\u003e",
      "sentence": "A library to perform JTAG operations and play XSVF.",
      "paragraph": "This library is an API to perform JTAG operations and play XSVF files.",
      "website": "https://github.com/mrjimenez/JTAG",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mrjimenez/JTAG-1.0.9.zip",
      "archiveFileName": "JTAG-1.0.9.zip",
      "size": 75662,
      "checksum": "SHA-256:5b5f243fd17a85bc68dfe5e57dcdb4ec254fbc148eaa5d757b88fabf95327441"
    },
    {
      "name": "AtTouch",
      "version": "1.0.4",
      "author": "Noah Shibley, Michael Grant",
      "maintainer": "Noah Shibley",
      "sentence": "Arduino Library for the Atmel AT42QT1070 QTouch 7-channel Sensor IC via i2c.",
      "paragraph": "Supports Wire or I2c libraries.",
      "website": "https://github.com/nullboundary/AtTouch",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/nullboundary/AtTouch-1.0.4.zip",
      "archiveFileName": "AtTouch-1.0.4.zip",
      "size": 6416,
      "checksum": "SHA-256:2c4c204547bed213f2c1e38025db85f61f3e266ebff789b351ae7deee4362c01"
    },
    {
      "name": "SST25VF",
      "version": "0.1.0",
      "author": "Noah Shibley",
      "maintainer": "Noah Shibley",
      "sentence": "Arduino Library for controlling the SST Nor Serial Flash SST25VF family.",
      "paragraph": "Much of the code in the library is Based on SST code from: (Rugged Circuits and Wusik) Should work for SST25VF004, SST25VF016, SST25VF064, etc.",
      "website": "https://github.com/nullboundary/SST25VF",
      "category": "Data Storage",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/nullboundary/SST25VF-0.1.0.zip",
      "archiveFileName": "SST25VF-0.1.0.zip",
      "size": 4106,
      "checksum": "SHA-256:2795f09086d3178e8e9f2a02f7298f59863b1658b8d3b07788445651e2e6ea2a"
    },
    {
      "name": "Comp6DOF_n0m1",
      "version": "0.1.1",
      "author": "Noah Shibley, Michael Grant",
      "maintainer": "Noah Shibley",
      "sentence": "An Arduino Library for compass tilt compensation and hard iron offset",
      "paragraph": "Arduino Library for compass tilt compensation and hard iron offset. Part of this code was ported to C from the Freescale appnote AN4248. http://www.freescale.com/files/sensors/doc/app_note/AN4248.pdf The sine function comes from Dave Dribin's TrigInt lib. https://bitbucket.org/ddribin/trigint",
      "website": "https://github.com/n0m1/Comp6DOF_n0m1",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/n0m1/Comp6DOF_n0m1-0.1.1.zip",
      "archiveFileName": "Comp6DOF_n0m1-0.1.1.zip",
      "size": 15602,
      "checksum": "SHA-256:03d8636ffeed644ea496f988f6cc685e1cee98c9db551bf973cc152c46700dcf"
    },
    {
      "name": "MMA8453_n0m1",
      "version": "1.0.1",
      "author": "Noah Shibley, Michael Grant",
      "maintainer": "Noah Shibley",
      "sentence": "an Arduino Library for the Freescale MMA8453Q \u0026 MMA8452Q accelerometer.",
      "paragraph": "This library has been tested with the Freescale MMA8453Q and MMA8452Q Accelerometer chips. MMA8451 has 14bits digital resolution and it is not implemented in this version.",
      "website": "https://github.com/n0m1/MMA8453_n0m1",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/n0m1/MMA8453_n0m1-1.0.1.zip",
      "archiveFileName": "MMA8453_n0m1-1.0.1.zip",
      "size": 12547,
      "checksum": "SHA-256:7c427ce7ff8f33e488590533be037bbd55a516c6705c4e7de86645dd6bb93e7e"
    },
    {
      "name": "Sleep_n0m1",
      "version": "1.0.0",
      "author": "Noah Shibley, Michael Grant",
      "maintainer": "Noah Shibley",
      "sentence": "A library that sets the Arduino into sleep mode for a specified length of time, or until an interrupt",
      "paragraph": "An Arduino library to place the arduino into sleep mode for a specific length of time, or a specific number of sleep cycles.",
      "website": "https://github.com/n0m1/Sleep_n0m1",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/n0m1/Sleep_n0m1-1.0.0.zip",
      "archiveFileName": "Sleep_n0m1-1.0.0.zip",
      "size": 8520,
      "checksum": "SHA-256:49a23528a1f5c15d65d1acc1d059e1421a55350e79ee2d194906f48b82ef8ad4"
    },
    {
      "name": "AnalogTouch",
      "version": "1.0.0",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "AnalogTouch library for Arduino",
      "paragraph": "Measures the capacitive touch of an analog Arduino pin.",
      "website": "https://github.com/NicoHood/AnalogTouch",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/NicoHood/AnalogTouch-1.0.0.zip",
      "archiveFileName": "AnalogTouch-1.0.0.zip",
      "size": 5224,
      "checksum": "SHA-256:8c904342d0d14d31dad6f4333ca9ba2432d550c57fcae44544fa06f6cf66bd3f"
    },
    {
      "name": "MSGEQ7",
      "version": "1.2.0",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "Library for Musicvisualization with MSGEQ7",
      "paragraph": "Reads MSGEQ7 IC with 7 different frequencies: 63Hz, 160Hz, 400Hz, 1kHz, 2.5kHz, 6.25KHz, 16kHz",
      "website": "https://github.com/NicoHood/MSGEQ7",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/NicoHood/MSGEQ7-1.2.0.zip",
      "archiveFileName": "MSGEQ7-1.2.0.zip",
      "size": 2053832,
      "checksum": "SHA-256:1f9450de35d180e90c4105565e7963323145b1fef1f83a6134cfde29bd64942d"
    },
    {
      "name": "MSGEQ7",
      "version": "1.2.1",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "Library for Musicvisualization with MSGEQ7",
      "paragraph": "Reads MSGEQ7 IC with 7 different frequencies: 63Hz, 160Hz, 400Hz, 1kHz, 2.5kHz, 6.25KHz, 16kHz",
      "website": "https://github.com/NicoHood/MSGEQ7",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/NicoHood/MSGEQ7-1.2.1.zip",
      "archiveFileName": "MSGEQ7-1.2.1.zip",
      "size": 2576085,
      "checksum": "SHA-256:65213157889268fa8ee46532985a11c72857865044829b75da6c9988c69b430d"
    },
    {
      "name": "PinChangeInterrupt",
      "version": "1.2.0",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "A simple \u0026 compact PinChangeInterrupt library for Arduino.",
      "paragraph": "PinChangeInterrupt library with a resource friendly implementation (API and LowLevel). PinChangeInterrupts are different than normal Interrupts. See readme for more information.",
      "website": "https://github.com/NicoHood/PinChangeInterrupt",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/NicoHood/PinChangeInterrupt-1.2.0.zip",
      "archiveFileName": "PinChangeInterrupt-1.2.0.zip",
      "size": 53653,
      "checksum": "SHA-256:fa1cef4bbc5159f82930cb1693c33d4bf2c66c2ec4c1a4a943ad1ebd5ab7935e"
    },
    {
      "name": "PinChangeInterrupt",
      "version": "1.2.1",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "A simple \u0026 compact PinChangeInterrupt library for Arduino.",
      "paragraph": "PinChangeInterrupt library with a resource friendly implementation (API and LowLevel). PinChangeInterrupts are different than normal Interrupts. See readme for more information.",
      "website": "https://github.com/NicoHood/PinChangeInterrupt",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/NicoHood/PinChangeInterrupt-1.2.1.zip",
      "archiveFileName": "PinChangeInterrupt-1.2.1.zip",
      "size": 54210,
      "checksum": "SHA-256:7aa28ad37a21ce53c2e70aabf77879ac10b64ade528efbad9951f46b52fd345c"
    },
    {
      "name": "PinChangeInterrupt",
      "version": "1.2.2",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "A simple \u0026 compact PinChangeInterrupt library for Arduino.",
      "paragraph": "PinChangeInterrupt library with a resource friendly implementation (API and LowLevel). PinChangeInterrupts are different than normal Interrupts. See readme for more information.",
      "website": "https://github.com/NicoHood/PinChangeInterrupt",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/NicoHood/PinChangeInterrupt-1.2.2.zip",
      "archiveFileName": "PinChangeInterrupt-1.2.2.zip",
      "size": 55065,
      "checksum": "SHA-256:f42237c526a5c52c1bc912ac22f76a7f3544ccf5060104c60427ea07c7011093"
    },
    {
      "name": "Ucglib",
      "version": "1.3.0",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "A library for true color TFTs and OLEDs",
      "paragraph": "Supported display controller: ST7735, ILI9341, PCF8833, SSD1351, LD50T6160, ILI9163, SSD1331, SEPS225. Features: 18 Bit color depth, many fonts.",
      "website": "https://github.com/olikraus/ucglib",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/olikraus/Ucglib-1.3.0.zip",
      "archiveFileName": "Ucglib-1.3.0.zip",
      "size": 4366352,
      "checksum": "SHA-256:54f7e88fe8592876faa087e771218991b07b3481fd3114b02d29b10cc171daa4"
    },
    {
      "name": "Ucglib",
      "version": "1.3.3",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "A library for true color TFTs and OLEDs",
      "paragraph": "Supported display controller: ST7735, ILI9341, PCF8833, SSD1351, LD50T6160, ILI9163, SSD1331, SEPS225. Features: 18 Bit color depth, many fonts.",
      "website": "https://github.com/olikraus/ucglib",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/olikraus/Ucglib-1.3.3.zip",
      "archiveFileName": "Ucglib-1.3.3.zip",
      "size": 4377505,
      "checksum": "SHA-256:19200d105afc2a4c7bef08a7a902ce8f18cdd849a1fbce1508b9df9bff42f9fb"
    },
    {
      "name": "U8glib",
      "version": "1.18.0",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "A library for monochrome TFTs and OLEDs",
      "paragraph": "Supported display controller: SSD1306, SSD1309, SSD1322, SSD1325, SSD1327, SH1106, UC1601, UC1610, UC1611, UC1701, ST7565, ST7920, KS0108, LC7981, PCD8544, PCF8812, SBN1661, TLS8204, T6963.",
      "website": "https://github.com/olikraus/u8glib",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/olikraus/U8glib-1.18.0.zip",
      "archiveFileName": "U8glib-1.18.0.zip",
      "size": 1195270,
      "checksum": "SHA-256:c77768ccd35127990b80cca202807774e7863f24abe4102581d9b4ed8b6f9c5a"
    },
    {
      "name": "thermistor",
      "version": "1.0.0",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "NTC thermistor library",
      "paragraph": "Simple thermistor library for NTC's. Steinhart–Hart equation approach.",
      "website": "https://github.com/panStamp/thermistor.git",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/panStamp/thermistor-1.0.0.zip",
      "archiveFileName": "thermistor-1.0.0.zip",
      "size": 7476,
      "checksum": "SHA-256:f3962de9b35c1629073dfc275e9b409c9ca207da1941d23db3244cf33073abcf"
    },
    {
      "name": "THERMISTOR",
      "version": "1.0.1",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "NTC thermistor library",
      "paragraph": "Simple thermistor library for NTC's. Steinhart–Hart equation approach.",
      "website": "https://github.com/panStamp/thermistor.git",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/panStamp/THERMISTOR-1.0.1.zip",
      "archiveFileName": "THERMISTOR-1.0.1.zip",
      "size": 7485,
      "checksum": "SHA-256:63bd8fa37e2f61d8ad4b57953e2f223eb7a523480162b1723bd7c8abc737f9d8"
    },
    {
      "name": "SWAP",
      "version": "1.0.0",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "Library for the Freescale MMA8652 3-axis accelerometer",
      "paragraph": "Library for the Freescale MMA8652 3-axis accelerometer",
      "website": "https://github.com/panStamp/mma8652.git",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/panStamp/SWAP-1.0.0.zip",
      "archiveFileName": "SWAP-1.0.0.zip",
      "size": 14177,
      "checksum": "SHA-256:25b2ab635b3677f6f88fd3b93e908640c8922b316400987617b13fd609ed035b"
    },
    {
      "name": "SWAP",
      "version": "1.0.1",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "paragraph": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "website": "https://github.com/panStamp/swap.git",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/panStamp/SWAP-1.0.1.zip",
      "archiveFileName": "SWAP-1.0.1.zip",
      "size": 101574,
      "checksum": "SHA-256:875cf202d123d155fbe0c2700abe250a911ff534c508cfa61e7ab89cd2cba502"
    },
    {
      "name": "SWAP",
      "version": "1.0.2",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "paragraph": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "website": "https://github.com/panStamp/swap.git",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/panStamp/SWAP-1.0.2.zip",
      "archiveFileName": "SWAP-1.0.2.zip",
      "size": 100436,
      "checksum": "SHA-256:63419b1579ed4fd6ebbf8d907478fbd44eda3b3e2bbb0191c72232ee97177d9c"
    },
    {
      "name": "SWAP",
      "version": "1.0.4",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "paragraph": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "website": "https://github.com/panStamp/swap.git",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/panStamp/SWAP-1.0.4.zip",
      "archiveFileName": "SWAP-1.0.4.zip",
      "size": 108950,
      "checksum": "SHA-256:293c057bfbf7e942eae0e85b0ca2a1e292fbe6cd6c6d4efde09d83c0fa75b655"
    },
    {
      "name": "SWAP",
      "version": "1.0.5",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "paragraph": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios",
      "website": "https://github.com/panStamp/swap.git",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/panStamp/SWAP-1.0.5.zip",
      "archiveFileName": "SWAP-1.0.5.zip",
      "size": 116511,
      "checksum": "SHA-256:9d95021108463efaf1a3074446c87828094ac4e7e2967412a3c07c3c22a95fde"
    },
    {
      "name": "MMA8652",
      "version": "1.0.1",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "Library for the Freescale MMA8652 3-axis accelerometer",
      "paragraph": "Library for the Freescale MMA8652 3-axis accelerometer",
      "website": "https://github.com/panStamp/mma8652.git",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/panStamp/MMA8652-1.0.1.zip",
      "archiveFileName": "MMA8652-1.0.1.zip",
      "size": 14216,
      "checksum": "SHA-256:be236bb81b61a7a10784df609df4f2a83e2f8c21d8e73fc41f210899db2e78ec"
    },
    {
      "name": "SRAM",
      "version": "1.0.1",
      "author": "panStamp",
      "maintainer": "panStamp \u003ccontact@panstamp.com\u003e",
      "sentence": "Simple library for serial SRAM IC's",
      "paragraph": "Simple library for SPI Static RAM IC's like Microchip 23K256",
      "website": "https://github.com/panStamp/sram.git",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/panStamp/SRAM-1.0.1.zip",
      "archiveFileName": "SRAM-1.0.1.zip",
      "size": 6666,
      "checksum": "SHA-256:572f422d52e1254cbfc1c56d4fbe938ea160943b79306f43b90edbe5be3fcf28"
    },
    {
      "name": "elapsedMillis",
      "version": "1.0.1",
      "author": "Peter Feerick \u003cpeter.feerick@gmail.com\u003e",
      "maintainer": "Peter Feerick \u003cpeter.feerick@gmail.com\u003e",
      "sentence": "Makes coding responsive sketches easier.",
      "paragraph": "When using delay(), your code can not (easily) respond to user input while the delay is happening (unless you use interrupts or complex timer code). This library makes this easy by allowing you to create variables (objects) that automatically increase as time elapses. It is easy to check if a certain time has elapsed, while your program performs other work or checks for user input.",
      "website": "http://github.com/pfeerick/elapsedMillis/wiki",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/pfeerick/elapsedMillis-1.0.1.zip",
      "archiveFileName": "elapsedMillis-1.0.1.zip",
      "size": 8496,
      "checksum": "SHA-256:88fe7119bd6abfd735c3656748f065795cda9572fc1e038cbab71f4b26ecb93a"
    },
    {
      "name": "elapsedMillis",
      "version": "1.0.3",
      "author": "Peter Feerick \u003cpeter.feerick@gmail.com\u003e",
      "maintainer": "Peter Feerick \u003cpeter.feerick@gmail.com\u003e",
      "sentence": "Makes coding responsive sketches easier.",
      "paragraph": "When using delay(), your code can not (easily) respond to user input while the delay is happening (unless you use interrupts or complex timer code). This library makes this easy by allowing you to create variables (objects) that automatically increase as time elapses. It is easy to check if a certain time has elapsed, while your program performs other work or checks for user input.",
      "website": "http://github.com/pfeerick/elapsedMillis/wiki",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/pfeerick/elapsedMillis-1.0.3.zip",
      "archiveFileName": "elapsedMillis-1.0.3.zip",
      "size": 8539,
      "checksum": "SHA-256:f6cc3339d443ac11eaec1505ba2e2a573925e6e87fdd9baaccadcdd55955e3c4"
    },
    {
      "name": "AMIS30543",
      "version": "1.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "AMIS-30543 SPI stepper motor driver library",
      "paragraph": "This is a library for the Arduino IDE that helps use the SPI interface of the AMIS-30543 micro-stepping stepper motor driver.",
      "website": "https://github.com/pololu/amis-30543-arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/pololu/AMIS30543-1.0.0.zip",
      "archiveFileName": "AMIS30543-1.0.0.zip",
      "size": 17686,
      "checksum": "SHA-256:a657df481ebe5f692c59ad399c5682827b9520111ec497be03af4ff5b05f4f3a"
    },
    {
      "name": "AMIS30543",
      "version": "1.1.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "AMIS-30543 SPI stepper motor driver library",
      "paragraph": "This is a library for the Arduino IDE that helps use the SPI interface of the AMIS-30543 micro-stepping stepper motor driver.",
      "website": "https://github.com/pololu/amis-30543-arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/pololu/AMIS30543-1.1.0.zip",
      "archiveFileName": "AMIS30543-1.1.0.zip",
      "size": 18635,
      "checksum": "SHA-256:a57aba72d22f830e40435eb67beeadff54c3ea5ad9d79945b10d8032108495db"
    },
    {
      "name": "APA102",
      "version": "1.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "APA102 LED strip library",
      "paragraph": "This library helps control addressable RGB LED strips based on the APA102/APA102C RGB LED controller IC.  It provides full access to the 24-bit color register and 5-bit brightness register of each APA102 LED.",
      "website": "https://github.com/pololu/apa102-arduino",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/pololu/APA102-1.0.0.zip",
      "archiveFileName": "APA102-1.0.0.zip",
      "size": 20469,
      "checksum": "SHA-256:8c67eb84dc9f0a18b845e5dd46403e41472bce90965958b4b10213b15a06adc6"
    },
    {
      "name": "AStar32U4",
      "version": "1.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "A-Star 32U4 Arduino library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with the on-board hardware on Pololu A-Star 32U4 controllers.",
      "website": "https://github.com/pololu/a-star-32u4-arduino-library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/pololu/AStar32U4-1.0.0.zip",
      "archiveFileName": "AStar32U4-1.0.0.zip",
      "size": 55014,
      "checksum": "SHA-256:ec44a8c90bcae8698edc8182d13c5e9934378854b0b25e667f1c6cca744f7dd4"
    },
    {
      "name": "AStar32U4",
      "version": "1.0.2",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "A-Star 32U4 Arduino library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with the on-board hardware on Pololu A-Star 32U4 controllers.",
      "website": "https://github.com/pololu/a-star-32u4-arduino-library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/pololu/AStar32U4-1.0.2.zip",
      "archiveFileName": "AStar32U4-1.0.2.zip",
      "size": 55190,
      "checksum": "SHA-256:44bb2736e6db90a47288440f7c01623129ed29ac103024af6806ad85685fc4e6"
    },
    {
      "name": "AStar32U4",
      "version": "1.0.3",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "A-Star 32U4 Arduino library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with the on-board hardware on Pololu A-Star 32U4 controllers.",
      "website": "https://github.com/pololu/a-star-32u4-arduino-library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/pololu/AStar32U4-1.0.3.zip",
      "archiveFileName": "AStar32U4-1.0.3.zip",
      "size": 55239,
      "checksum": "SHA-256:98ea0a1593fac2b9e18c552254ecbf2a57cf7719952bc060267568b2aebbb80b"
    },
    {
      "name": "PololuMaestro",
      "version": "1.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Pololu Maestro Servo Controller library for Arduino",
      "paragraph": "This is a library for the Arduino IDE that helps interface with a Maestro Servo Controller. It communicates with Maestros using the Serial Protocol described in the Maestro Servo Controller User's Guide Section 5, \"Serial Interface\".",
      "website": "https://github.com/pololu/maestro-arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/pololu/PololuMaestro-1.0.0.zip",
      "archiveFileName": "PololuMaestro-1.0.0.zip",
      "size": 14967,
      "checksum": "SHA-256:1b7d3b0714f5f4d37583064813a4cbfcd17b6c0fdbd8d43cacf441d5c26b4d4e"
    },
    {
      "name": "Zumo32U4",
      "version": "1.1.1",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Zumo 32U4 Arduino library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with the on-board hardware on the Pololu Zumo 32U4 robot.",
      "website": "https://github.com/pololu/zumo-32u4-arduino-library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/pololu/Zumo32U4-1.1.1.zip",
      "archiveFileName": "Zumo32U4-1.1.1.zip",
      "size": 128437,
      "checksum": "SHA-256:ce19dc57bff133c49e151147f0f8c1898144d1fa2e3e07cc65608a22ecee1733"
    },
    {
      "name": "Printoo_Library",
      "version": "1.0.0",
      "author": "Luis Magalhaes \u003cluis.magalhaes@ydreams.com\u003e",
      "maintainer": "Luis Magalhaes \u003cluis.magalhaes@ydreams.com\u003e",
      "sentence": "The library for the Printoo modules.",
      "paragraph": "All the functions to control the Printoo modules within the same library ! Awesome !",
      "website": "http://www.printoo.com/",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/printoo/Printoo_Library-1.0.0.zip",
      "archiveFileName": "Printoo_Library-1.0.0.zip",
      "size": 31863,
      "checksum": "SHA-256:fffa5fae935e540b520999a1ed803d59dffeaf1cbca8c34ce5b6fe7486a97669"
    },
    {
      "name": "Printoo_Library",
      "version": "1.0.1",
      "author": "Printoo \u003cenquiries@printoo.pt\u003e",
      "maintainer": "Luis Magalhaes \u003cluis.magalhaes@ydreams.com\u003e",
      "sentence": "The library for the Printoo modules.",
      "paragraph": "All the functions to control the Printoo modules within the same library !",
      "website": "http://www.printoo.pt/",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/printoo/Printoo_Library-1.0.1.zip",
      "archiveFileName": "Printoo_Library-1.0.1.zip",
      "size": 31962,
      "checksum": "SHA-256:83130252fda76236f8475a8f1d5f54ea7791e496d5f0e0cb214d5eeaaa6a43e7"
    },
    {
      "name": "Printoo_Library",
      "version": "1.0.2",
      "author": "Printoo \u003cenquiries@printoo.pt\u003e",
      "maintainer": "Luis Magalhaes \u003cluis.magalhaes@ydreams.com\u003e",
      "sentence": "The library for the Printoo modules.",
      "paragraph": "All the functions to control the Printoo modules within the same library !",
      "website": "http://www.printoo.pt/",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/printoo/Printoo_Library-1.0.2.zip",
      "archiveFileName": "Printoo_Library-1.0.2.zip",
      "size": 31962,
      "checksum": "SHA-256:dcd12e85fdd8296b9c3213ad20cc736d2508baf27b8021eeee43a45998af22e4"
    },
    {
      "name": "Quirkbot",
      "version": "0.2.2",
      "author": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "Install this library to be able to use the Quirbot API.",
      "website": "http://quirkbot.com/",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Quirkbot/Quirkbot-0.2.2.zip",
      "archiveFileName": "Quirkbot-0.2.2.zip",
      "size": 50537,
      "checksum": "SHA-256:0a39e63b39ca36a6949c23e3dec8999ad14b6a812d3d542028deedb0cff94e07"
    },
    {
      "name": "Quirkbot",
      "version": "0.2.3",
      "author": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "Install this library to be able to use the Quirbot API.",
      "website": "http://quirkbot.com/",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Quirkbot/Quirkbot-0.2.3.zip",
      "archiveFileName": "Quirkbot-0.2.3.zip",
      "size": 51326,
      "checksum": "SHA-256:8f4d75c68e129706115e953522638a8e5e69980a7faf8021b2d500413d672cc9"
    },
    {
      "name": "Quirkbot",
      "version": "0.2.4",
      "author": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "Install this library to be able to use the Quirbot API.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Quirkbot/Quirkbot-0.2.4.zip",
      "archiveFileName": "Quirkbot-0.2.4.zip",
      "size": 51343,
      "checksum": "SHA-256:c350872a88e4028c7e1e991381e79f7e40d891003edabb0d467bbfc320ebdc69"
    },
    {
      "name": "Quirkbot",
      "version": "0.2.5",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "Install this library to be able to use the Quirbot API.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Quirkbot/Quirkbot-0.2.5.zip",
      "archiveFileName": "Quirkbot-0.2.5.zip",
      "size": 51343,
      "checksum": "SHA-256:18717c404f10ad325eb5444dbc7894482daf1e395182e7823b6e5dafbdd2be9d"
    },
    {
      "name": "Quirkbot",
      "version": "0.2.6",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Quirkbot/Quirkbot-0.2.6.zip",
      "archiveFileName": "Quirkbot-0.2.6.zip",
      "size": 51431,
      "checksum": "SHA-256:9633db26f044ca0873997d6a6846645ad326ea8f3e6935f6a68eb334309b11ed"
    },
    {
      "name": "Quirkbot",
      "version": "0.3.1",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Quirkbot/Quirkbot-0.3.1.zip",
      "archiveFileName": "Quirkbot-0.3.1.zip",
      "size": 58883,
      "checksum": "SHA-256:ebc5b7f74a88d26d1925004703946357dd366a29b0086b6269a97f4723841a38"
    },
    {
      "name": "Quirkbot",
      "version": "0.3.2",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Quirkbot/Quirkbot-0.3.2.zip",
      "archiveFileName": "Quirkbot-0.3.2.zip",
      "size": 58883,
      "checksum": "SHA-256:249f0cca4a5bb87a975325dd1532c5c82c44af628d3e3762cf3face4c8d81703"
    },
    {
      "name": "Quirkbot",
      "version": "0.3.3",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Quirkbot/Quirkbot-0.3.3.zip",
      "archiveFileName": "Quirkbot-0.3.3.zip",
      "size": 58963,
      "checksum": "SHA-256:a53b27f1f331765416db91a277d5d44ce2784f34fda48b1700674460f1adde58"
    },
    {
      "name": "Quirkbot",
      "version": "0.4.1",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Quirkbot/Quirkbot-0.4.1.zip",
      "archiveFileName": "Quirkbot-0.4.1.zip",
      "size": 58967,
      "checksum": "SHA-256:042970b9c73a78a08089b6e40dd4fcf05436cfd1caedd24681e755654cd84a25"
    },
    {
      "name": "Quirkbot",
      "version": "0.4.2",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Quirkbot/Quirkbot-0.4.2.zip",
      "archiveFileName": "Quirkbot-0.4.2.zip",
      "size": 57468,
      "checksum": "SHA-256:7857f6620631fcc543f53338b52d76ce9874b0231d318b377aadf86c1258bdc5"
    },
    {
      "name": "Quirkbot",
      "version": "0.4.3",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Quirkbot/Quirkbot-0.4.3.zip",
      "archiveFileName": "Quirkbot-0.4.3.zip",
      "size": 58359,
      "checksum": "SHA-256:e4c5f0271facb478148b309ed8fe4105155555b696950b98b70fb298b0d2fa74"
    },
    {
      "name": "Quirkbot",
      "version": "0.4.4",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Quirkbot/Quirkbot-0.4.4.zip",
      "archiveFileName": "Quirkbot-0.4.4.zip",
      "size": 58624,
      "checksum": "SHA-256:4e3db13ff37448cc607f52764ade47a93f1cae98cb840737e81fb9cbdc1387f7"
    },
    {
      "name": "Quirkbot",
      "version": "0.5.0",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Quirkbot/Quirkbot-0.5.0.zip",
      "archiveFileName": "Quirkbot-0.5.0.zip",
      "size": 60949,
      "checksum": "SHA-256:41edc81201cb2b74a921658c5c47c6a1c1112e9ebbaac322d2a93fee8a1a8303"
    },
    {
      "name": "Quirkbot",
      "version": "0.5.1",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Quirkbot/Quirkbot-0.5.1.zip",
      "archiveFileName": "Quirkbot-0.5.1.zip",
      "size": 61674,
      "checksum": "SHA-256:0631905235e1bbfcf62765e2b899b9482964f786c5e74694bb3d51e0cf227f6d"
    },
    {
      "name": "Quirkbot",
      "version": "1.1.0",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Quirkbot/Quirkbot-1.1.0.zip",
      "archiveFileName": "Quirkbot-1.1.0.zip",
      "size": 47210,
      "checksum": "SHA-256:7f46037063c296bf6054c5cf196102da948e00e47904d8e73dcf8c9debf9be02"
    },
    {
      "name": "Quirkbot",
      "version": "1.1.1",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Quirkbot/Quirkbot-1.1.1.zip",
      "archiveFileName": "Quirkbot-1.1.1.zip",
      "size": 48027,
      "checksum": "SHA-256:c879ed7acd3497f6ec54af4273e4f2c70a02a07e8ad92bd1944f5671733a5b18"
    },
    {
      "name": "Quirkbot",
      "version": "1.2.0",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Quirkbot/Quirkbot-1.2.0.zip",
      "archiveFileName": "Quirkbot-1.2.0.zip",
      "size": 50204,
      "checksum": "SHA-256:a32054a18bb024ba3d6b8696119a79f9b575e2fd4f6424a70f1ecdb3c876a75c"
    },
    {
      "name": "Quirkbot",
      "version": "2.0.0",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Quirkbot/Quirkbot-2.0.0.zip",
      "archiveFileName": "Quirkbot-2.0.0.zip",
      "size": 50156,
      "checksum": "SHA-256:9c1fd2c904d92e61c95eb11ec1e48908b6fe1c5e824fcb7d0b8e6c80588f208c"
    },
    {
      "name": "Quirkbot",
      "version": "2.0.1",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Quirkbot/Quirkbot-2.0.1.zip",
      "archiveFileName": "Quirkbot-2.0.1.zip",
      "size": 50234,
      "checksum": "SHA-256:235a78a40091297085969032ab620b04b84fd06d59845a3446a775df23337eec"
    },
    {
      "name": "Quirkbot",
      "version": "2.0.2",
      "author": "Quirkbot",
      "maintainer": "Paulo Barcelos \u003cpaulo@quirkbot.com\u003e",
      "sentence": "Allows you to program Quirkbots.",
      "paragraph": "The library is designed to be used with Quirkbot hardware. While other Arduinos boards might work, they are not supported. For instructions on how to install official Quirkbot boards, visit https://github.com/Quirkbot/QuirkbotArduinoHardware/releases.",
      "website": "https://github.com/Quirkbot/QuirkbotArduinoLibrary",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Quirkbot/Quirkbot-2.0.2.zip",
      "archiveFileName": "Quirkbot-2.0.2.zip",
      "size": 50242,
      "checksum": "SHA-256:c3290e5cbf5d96ba51511d105c8a6013abb0798e4a6bc2c135f711b4ae0e8541"
    },
    {
      "name": "RBL_nRF8001",
      "version": "1.0.0",
      "author": "Cheong",
      "maintainer": "Cheong \u003ccheong@redbearlab.com\u003e",
      "sentence": "An Arduino library for the nRF8001 products such as the BLE Shield and Blend.",
      "paragraph": "Providing a simple service (TxRx) for exchanging data between nRF8001 and BLE Central (e.g. iPhone 6), this library requires Nordic BLE SDK for Arduino to function, please also install that library.",
      "website": "https://github.com/RedBearLab/nRF8001",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/RedBearLab/RBL_nRF8001-1.0.0.zip",
      "archiveFileName": "RBL_nRF8001-1.0.0.zip",
      "size": 52705,
      "checksum": "SHA-256:90fc6348f25f5fa0e5de1c9bc7db7f7f6cc3a9c69c565977539b188c61da838b"
    },
    {
      "name": "Ospom",
      "version": "0.1.1",
      "author": "Scott Tomko \u003cstaff@ReefPOM.com\u003e, Greg Tomko \u003cstaff@ReefPOM.com\u003e",
      "maintainer": "Scott Tomko \u003cstaff@ReefPOM.com\u003e",
      "sentence": "A library allowing any arduino to connect to the internet without an ethernet or wifi shield.",
      "paragraph": "It works by connecting via USB to an internet conected linux cpu and OSPOM's servers, bypassing annoying router setup.  The linux software necessary is in a seperate repository in ospom's BitBucket.  Pre-loaded o-droids are also available at ReefPOM.com",
      "website": "www.bitbucket.org/reefpom/ospom",
      "category": "Cloud",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ReefPOM/Ospom-0.1.1.zip",
      "archiveFileName": "Ospom-0.1.1.zip",
      "size": 19942,
      "checksum": "SHA-256:fffcf8927c3d64ce23eb33762cf48c70e4908711d6b38236892321e727ee3401"
    },
    {
      "name": "Ospom",
      "version": "0.1.3",
      "author": "Scott Tomko \u003cstaff@ReefPOM.com\u003e, Greg Tomko \u003cstaff@ReefPOM.com\u003e",
      "maintainer": "Scott Tomko \u003cstaff@ReefPOM.com\u003e",
      "sentence": "A library allowing any arduino to be displayed on the internet for free via ospom.com.",
      "paragraph": "It works by connecting via USB to an internet conected linux cpu and OSPOM's servers, bypassing annoying router setup.  The linux software necessary is in a seperate repository in ospom's BitBucket.  Pre-loaded o-droids are also available at ReefPOM.com",
      "website": "https://github.com/ReefPOM/OSPOM",
      "category": "Cloud",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ReefPOM/Ospom-0.1.3.zip",
      "archiveFileName": "Ospom-0.1.3.zip",
      "size": 14039,
      "checksum": "SHA-256:9a6c5702f9d03b43312f7c10ea65f6d5ba7c0e623c1a4255c6e05ad148d36486"
    },
    {
      "name": "Ospom",
      "version": "0.1.31",
      "author": "Scott Tomko \u003cstaff@ReefPOM.com\u003e, Greg Tomko \u003cstaff@ReefPOM.com\u003e, Linda Close \u003cstaff@ReefPOM.com\u003e",
      "maintainer": "Scott Tomko \u003cstaff@ReefPOM.com\u003e",
      "sentence": "Ospom is FaceBook for your Arduino.",
      "paragraph": "A library allowing any arduino to be displayed on the internet for free via ospom.com/user. It works by connecting via USB to any internet conected linux cpu and OSPOM's servers, bypassing annoying router setup.  The linux software necessary is in a seperate repository at BitBucket.org/ReefPOM.  Pre-loaded micro-SD cards forRaspberry Pi, Odroid, and pcDuino are also available upon request, and at ReefPOM.com.",
      "website": "https://github.com/ReefPOM/OSPOM",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ReefPOM/Ospom-0.1.31.zip",
      "archiveFileName": "Ospom-0.1.31.zip",
      "size": 16543,
      "checksum": "SHA-256:e83a778b368a0cbf711c7dc312f020d1ea90206a2d3a65646869b232eb20b41f"
    },
    {
      "name": "Analog Buttons",
      "version": "1.1.0",
      "author": "AgileWare",
      "maintainer": "Roberto Lo Giacco \u003crlogiacco@gmail.com\u003e",
      "sentence": "Arduino multi button support library",
      "paragraph": "Arduino multi button support library",
      "website": "https://github.com/rlogiacco/AnalogButtons",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/rlogiacco/Analog_Buttons-1.1.0.zip",
      "archiveFileName": "Analog_Buttons-1.1.0.zip",
      "size": 304569,
      "checksum": "SHA-256:2fbd6e3566813ab65fba6d8a462fedf84b52d78630fdc9afdd62f94cef9a9225"
    },
    {
      "name": "MicroDebug",
      "version": "1.1.0",
      "author": "AgileWare",
      "maintainer": "Roberto Lo Giacco \u003crlogiacco@gmail.com\u003e",
      "sentence": "Arduino debugging support library",
      "paragraph": "Arduino debugging support library",
      "website": "https://github.com/rlogiacco/MicroDebug",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/rlogiacco/MicroDebug-1.1.0.zip",
      "archiveFileName": "MicroDebug-1.1.0.zip",
      "size": 15631,
      "checksum": "SHA-256:6cd94ea5751eefb7920ccaa7a0d830458cf01ce4a29265dadb024b34ed70b7e6"
    },
    {
      "name": "Voltage Reference",
      "version": "1.2.0",
      "author": "AgileWare",
      "maintainer": "Roberto Lo Giacco \u003crlogiacco@gmail.com\u003e",
      "sentence": "Arduino voltage reference library",
      "paragraph": "Arduino voltage reference library",
      "website": "https://github.com/rlogiacco/VoltageReference",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/rlogiacco/Voltage_Reference-1.2.0.zip",
      "archiveFileName": "Voltage_Reference-1.2.0.zip",
      "size": 177745,
      "checksum": "SHA-256:7c157f285ed409ab4019557d50747dd1a9e856b13c2ce8e225ae14fb6ff87706"
    },
    {
      "name": "BobaBlox",
      "version": "2.0.0",
      "author": "Robert Gallup \u003csupport@robertgallup.com\u003e",
      "maintainer": "Robert Gallup \u003csupport@robertgallup.com\u003e",
      "sentence": "A library that makes it easy to code simple hardware interactions with the Arduino.",
      "paragraph": "Buttons, LEDs, knobs (potentiometers), speakers, and photocells are currently supported.",
      "website": "https://github.com/robertgallup/BobaBlox",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/robertgallup/BobaBlox-2.0.0.zip",
      "archiveFileName": "BobaBlox-2.0.0.zip",
      "size": 20287,
      "checksum": "SHA-256:32d48b5a7bc0d56eb878c6d5d401356410dbfa72d1f848dd1a7748d5525b7181"
    },
    {
      "name": "RoboCore - Serial Relay",
      "version": "1.0.0",
      "author": "RoboCore Tecnologia (suporte@robocore.net)",
      "maintainer": "RoboCore Tecnologia (suporte@robocore.net)",
      "sentence": "Library for the Serial Relay module (https://www.robocore.net/modules.php?name=GR_LojaVirtual\u0026prod=663)",
      "paragraph": "Control up to 40 relays with only two pins.",
      "website": "https://github.com/RoboCore/SerialRelay",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/RoboCore/RoboCore___Serial_Relay-1.0.0.zip",
      "archiveFileName": "RoboCore___Serial_Relay-1.0.0.zip",
      "size": 9284,
      "checksum": "SHA-256:b90a895e3aa50c66c50aaed46d688bf78a5ce572eced7e0f65c79d5523e852ef"
    },
    {
      "name": "Robopoly PRismino",
      "version": "1.5.0",
      "author": "Karl Kangur, David Perrenoud, Robopoly",
      "maintainer": "Robopoly \u003crobopoly@epfl.ch\u003e",
      "sentence": "This library allows you to use all the functions of the Robopoly PRismino and the Robopoly Shield.",
      "website": "https://github.com/Robopoly/Robopoly_PRismino",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Robopoly/Robopoly_PRismino-1.5.0.zip",
      "archiveFileName": "Robopoly_PRismino-1.5.0.zip",
      "size": 18972,
      "checksum": "SHA-256:abc0eff5a79d2a68e685d972a8f3fca8f57aade69de4c57efbd36f2dfd25ebd7"
    },
    {
      "name": "Robopoly Linear Camera",
      "version": "0.2.0",
      "author": "Marco Pagnamenta, Karl Kangur, David Perrenoud, Robopoly",
      "maintainer": "Robopoly \u003crobopoly@epfl.ch\u003e",
      "sentence": "This library allows you to get data from the Robopoly Linear Camera.",
      "website": "https://github.com/Robopoly/Robopoly_PRismino",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Robopoly/Robopoly_Linear_Camera-0.2.0.zip",
      "archiveFileName": "Robopoly_Linear_Camera-0.2.0.zip",
      "size": 4997,
      "checksum": "SHA-256:7d8e2d81ff6e2d146aa5ba10f7e8a00837c9be4d92660796582ecc34b3c182ff"
    },
    {
      "name": "EasyVR",
      "version": "1.7.0",
      "author": "RoboTech-srl \u003csoftware@robotechsrl.com\u003e",
      "maintainer": "PPEscher \u003cppescher@users.noreply.github.com\u003e",
      "sentence": "A library for the EasyVR line of products.",
      "paragraph": "It implements the EasyVR communication protocol over any Arduino Serial port and a special Bridge mode for direct connection to the EasyVR Commander software running on a PC.",
      "website": "http://robotech-srl.github.io/EasyVR-Arduino/",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/RoboTech-srl/EasyVR-1.7.0.zip",
      "archiveFileName": "EasyVR-1.7.0.zip",
      "size": 162839,
      "checksum": "SHA-256:3fff9fc98037d0f4e568f020d18dde9ffbd43eb94eff87db81e967671980371a"
    },
    {
      "name": "EasyVR",
      "version": "1.7.1",
      "author": "RoboTech-srl \u003csoftware@robotechsrl.com\u003e",
      "maintainer": "PPEscher \u003cppescher@users.noreply.github.com\u003e",
      "sentence": "A library for the EasyVR line of products.",
      "paragraph": "It implements the EasyVR communication protocol over any Arduino Serial port and a special Bridge mode for direct connection to the EasyVR Commander software running on a PC.",
      "website": "http://robotech-srl.github.io/EasyVR-Arduino/",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/RoboTech-srl/EasyVR-1.7.1.zip",
      "archiveFileName": "EasyVR-1.7.1.zip",
      "size": 162851,
      "checksum": "SHA-256:568140ce49963755b2525552c00460f404b65c2b4748bcd2b1c7b8e540e8ddc0"
    },
    {
      "name": "EasyVR",
      "version": "1.8.0",
      "author": "RoboTech-srl \u003csoftware@robotechsrl.com\u003e",
      "maintainer": "PPEscher \u003cppescher@users.noreply.github.com\u003e",
      "sentence": "A library for the EasyVR line of products.",
      "paragraph": "It implements the EasyVR communication protocol over any Arduino Serial port and a special Bridge mode for direct connection to the EasyVR Commander software running on a PC.",
      "website": "http://robotech-srl.github.io/EasyVR-Arduino/",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/RoboTech-srl/EasyVR-1.8.0.zip",
      "archiveFileName": "EasyVR-1.8.0.zip",
      "size": 164644,
      "checksum": "SHA-256:8a9026f25093f8b01fc421a59806a8668af4d404bde6751276e1133ee784dfc5"
    },
    {
      "name": "EasyVR",
      "version": "1.8.1",
      "author": "RoboTech-srl \u003csoftware@robotechsrl.com\u003e",
      "maintainer": "PPEscher \u003cppescher@users.noreply.github.com\u003e",
      "sentence": "A library for the EasyVR line of products.",
      "paragraph": "It implements the EasyVR communication protocol over any Arduino Serial port and a special Bridge mode for direct connection to the EasyVR Commander software running on a PC.",
      "website": "http://robotech-srl.github.io/EasyVR-Arduino/",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/RoboTech-srl/EasyVR-1.8.1.zip",
      "archiveFileName": "EasyVR-1.8.1.zip",
      "size": 164762,
      "checksum": "SHA-256:3233bb4e6f82a92bf76c52a414c41ca2a3c9c869a504c9c1253ece13f878ccd5"
    },
    {
      "name": "BLEPeripheral",
      "version": "0.1.0",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for creating custom BLE peripherals.",
      "paragraph": "Supports nRF8001 and nRF51822 based boards/shields",
      "website": "https://github.com/sandeepmistry/arduino-BLEPeripheral",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sandeepmistry/BLEPeripheral-0.1.0.zip",
      "archiveFileName": "BLEPeripheral-0.1.0.zip",
      "size": 642052,
      "checksum": "SHA-256:785b429005cc950643079e78af9bdc23c7777b2cd0b5b3d455c7b6283cde7dbe"
    },
    {
      "name": "BLEPeripheral",
      "version": "0.1.1",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for creating custom BLE peripherals.",
      "paragraph": "Supports nRF8001 and nRF51822 based boards/shields",
      "website": "https://github.com/sandeepmistry/arduino-BLEPeripheral",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sandeepmistry/BLEPeripheral-0.1.1.zip",
      "archiveFileName": "BLEPeripheral-0.1.1.zip",
      "size": 643146,
      "checksum": "SHA-256:3c7b986c702a53018994ebf1b15ee53c45d2fd6e519587471d1c60a5d4e4831f"
    },
    {
      "name": "BLEPeripheral",
      "version": "0.1.2",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for creating custom BLE peripherals.",
      "paragraph": "Supports nRF8001 and nRF51822 based boards/shields",
      "website": "https://github.com/sandeepmistry/arduino-BLEPeripheral",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sandeepmistry/BLEPeripheral-0.1.2.zip",
      "archiveFileName": "BLEPeripheral-0.1.2.zip",
      "size": 643303,
      "checksum": "SHA-256:c0ba203e5985fbb794e7bb4ce06793a066a71be2d9be9161b4494a17dac13df5"
    },
    {
      "name": "BLEPeripheral",
      "version": "0.1.3",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for creating custom BLE peripherals.",
      "paragraph": "Supports nRF8001 and nRF51822 based boards/shields",
      "website": "https://github.com/sandeepmistry/arduino-BLEPeripheral",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sandeepmistry/BLEPeripheral-0.1.3.zip",
      "archiveFileName": "BLEPeripheral-0.1.3.zip",
      "size": 643991,
      "checksum": "SHA-256:dff6f70001b5c1c9404dd777e988cda1528a6411c7f311d9004236bc48c84a74"
    },
    {
      "name": "BLEPeripheral",
      "version": "0.1.4",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for creating custom BLE peripherals.",
      "paragraph": "Supports nRF8001 and nRF51822 based boards/shields",
      "website": "https://github.com/sandeepmistry/arduino-BLEPeripheral",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sandeepmistry/BLEPeripheral-0.1.4.zip",
      "archiveFileName": "BLEPeripheral-0.1.4.zip",
      "size": 644122,
      "checksum": "SHA-256:961c06ae6f1dd48485c707c127ffac24f0f0ac3414b802ee14da88d158292763"
    },
    {
      "name": "BLEPeripheral",
      "version": "0.1.5",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for creating custom BLE peripherals.",
      "paragraph": "Supports nRF8001 and nRF51822 based boards/shields",
      "website": "https://github.com/sandeepmistry/arduino-BLEPeripheral",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sandeepmistry/BLEPeripheral-0.1.5.zip",
      "archiveFileName": "BLEPeripheral-0.1.5.zip",
      "size": 644120,
      "checksum": "SHA-256:9ca63f14762f58ae55caf319c94c655cc7603e39d02d7c822cd465dcb5b75c39"
    },
    {
      "name": "BLEPeripheral",
      "version": "0.1.6",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for creating custom BLE peripherals.",
      "paragraph": "Supports nRF8001 and nRF51822 based boards/shields",
      "website": "https://github.com/sandeepmistry/arduino-BLEPeripheral",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sandeepmistry/BLEPeripheral-0.1.6.zip",
      "archiveFileName": "BLEPeripheral-0.1.6.zip",
      "size": 200304,
      "checksum": "SHA-256:2f2ac9359a6a58550f50f604f80406ea5b99e2e0f5c4096cbc18ccac4c395eba"
    },
    {
      "name": "BLEPeripheral",
      "version": "0.1.7",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for creating custom BLE peripherals.",
      "paragraph": "Supports nRF8001 and nRF51822 based boards/shields",
      "website": "https://github.com/sandeepmistry/arduino-BLEPeripheral",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sandeepmistry/BLEPeripheral-0.1.7.zip",
      "archiveFileName": "BLEPeripheral-0.1.7.zip",
      "size": 200314,
      "checksum": "SHA-256:a8ee39d1dbd0a897a0cb4ae14c1d08099228b38b81e2d648474c7a570f99b919"
    },
    {
      "name": "BLEPeripheral",
      "version": "0.1.8",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for creating custom BLE peripherals.",
      "paragraph": "Supports nRF8001 and nRF51822 based boards/shields",
      "website": "https://github.com/sandeepmistry/arduino-BLEPeripheral",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sandeepmistry/BLEPeripheral-0.1.8.zip",
      "archiveFileName": "BLEPeripheral-0.1.8.zip",
      "size": 200368,
      "checksum": "SHA-256:fe872e95027ee1016a469d9ac9eeecd71b7fb447b9a50132bda65e6679e7d79d"
    },
    {
      "name": "GPRSbee",
      "version": "1.2.0",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the SODAQ GPRSbee.",
      "paragraph": "It supports sending HTTP GET and POST, send data via FTP, and more.",
      "website": "https://github.com/SodaqMoja/GPRSbee",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/SodaqMoja/GPRSbee-1.2.0.zip",
      "archiveFileName": "GPRSbee-1.2.0.zip",
      "size": 80090,
      "checksum": "SHA-256:0b85f38f703f7dfafb6b2e5b746c8b0a12d2492e0e63036394f4229ad1d681c2"
    },
    {
      "name": "GPRSbee",
      "version": "1.3.0",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the SODAQ GPRSbee.",
      "paragraph": "It supports sending HTTP GET and POST, send data via FTP, and more.",
      "website": "https://github.com/SodaqMoja/GPRSbee",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/SodaqMoja/GPRSbee-1.3.0.zip",
      "archiveFileName": "GPRSbee-1.3.0.zip",
      "size": 81116,
      "checksum": "SHA-256:22ebe684e6aa78a66b9d48eca8886d83af70d535b7c3c8d91245313494a82389"
    },
    {
      "name": "RTCTimer",
      "version": "1.0.0",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library to easily perform scheduled tasks.",
      "paragraph": "from the Arduino main loop.",
      "website": "https://github.com/SodaqMoja/RTCTimer",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/SodaqMoja/RTCTimer-1.0.0.zip",
      "archiveFileName": "RTCTimer-1.0.0.zip",
      "size": 22562,
      "checksum": "SHA-256:80594003ac4805f141390359d1b62e6925ea62cc478d8a2fc1853a5fbe76c0f0"
    },
    {
      "name": "Sodaq_BMP085",
      "version": "1.2.0",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the BMP085/BMP180 Barometric Pressure + Temp sensor",
      "website": "https://github.com/SodaqMoja/Sodaq_BMP085",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/SodaqMoja/Sodaq_BMP085-1.2.0.zip",
      "archiveFileName": "Sodaq_BMP085-1.2.0.zip",
      "size": 6749,
      "checksum": "SHA-256:46f1fe5ee9d42ccaa972bb5d1dcfd98738caa49dcf61341b42f029b971fda6aa"
    },
    {
      "name": "Sodaq_BMP085",
      "version": "1.2.1",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the BMP085/BMP180 Barometric Pressure + Temp sensor",
      "website": "https://github.com/SodaqMoja/Sodaq_BMP085",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/SodaqMoja/Sodaq_BMP085-1.2.1.zip",
      "archiveFileName": "Sodaq_BMP085-1.2.1.zip",
      "size": 6757,
      "checksum": "SHA-256:cab44758f2e7ad9084e7115320a6445904ce859d6c4e9053917751d30b3d14d5"
    },
    {
      "name": "Sodaq_BMP085",
      "version": "1.3.0",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the BMP085/BMP180 Barometric Pressure + Temp sensor",
      "website": "https://github.com/SodaqMoja/Sodaq_BMP085",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/SodaqMoja/Sodaq_BMP085-1.3.0.zip",
      "archiveFileName": "Sodaq_BMP085-1.3.0.zip",
      "size": 6741,
      "checksum": "SHA-256:74fa51d76ed6f2de2473294973f514ca0211b790f142d91d46fef1931e5edf3d"
    },
    {
      "name": "Sodaq_BMP085",
      "version": "1.4.0",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the BMP085/BMP180 Barometric Pressure + Temp sensor",
      "website": "https://github.com/SodaqMoja/Sodaq_BMP085",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/SodaqMoja/Sodaq_BMP085-1.4.0.zip",
      "archiveFileName": "Sodaq_BMP085-1.4.0.zip",
      "size": 6948,
      "checksum": "SHA-256:0cc13414abd7d77d366bdfc617458f62f9e3ae1b94456170f747ed0a9e490c5c"
    },
    {
      "name": "Sodaq_SHT2x",
      "version": "1.1.0",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the SHT21 / SHT25 humidity and temperature sensors",
      "website": "https://github.com/SodaqMoja/Sodaq_SHT2x",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/SodaqMoja/Sodaq_SHT2x-1.1.0.zip",
      "archiveFileName": "Sodaq_SHT2x-1.1.0.zip",
      "size": 19196,
      "checksum": "SHA-256:ad6a7358a00af2de68f698283e11e83b1054727031a1a79ffbac99e8188b0cbc"
    },
    {
      "name": "Sodaq_SHT2x",
      "version": "1.2.0",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the SHT21 / SHT25 humidity and temperature sensors",
      "website": "https://github.com/SodaqMoja/Sodaq_SHT2x",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/SodaqMoja/Sodaq_SHT2x-1.2.0.zip",
      "archiveFileName": "Sodaq_SHT2x-1.2.0.zip",
      "size": 19488,
      "checksum": "SHA-256:b5c33928c3946d124a37ff76a712cc9bc0e2544793fda303d19d6965eefb4e38"
    },
    {
      "name": "Sodaq_DS3231",
      "version": "1.2.0",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the DS3231 RTC (Real Time Clock).",
      "website": "https://github.com/SodaqMoja/Sodaq_DS3231",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/SodaqMoja/Sodaq_DS3231-1.2.0.zip",
      "archiveFileName": "Sodaq_DS3231-1.2.0.zip",
      "size": 9808,
      "checksum": "SHA-256:42fc9ba2744159716496f7b3da21084c3c9da4f0f61be213e46572196f333ae7"
    },
    {
      "name": "Sodaq_PcInt",
      "version": "1.2.0",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library to deal with PCINT (Pin Change Interrupts)",
      "website": "https://github.com/SodaqMoja/Sodaq_PcInt",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/SodaqMoja/Sodaq_PcInt-1.2.0.zip",
      "archiveFileName": "Sodaq_PcInt-1.2.0.zip",
      "size": 4659,
      "checksum": "SHA-256:ab92d139797a4a9bfec0e028dc7d1331feb10ef96b332393bd4f978a78f46ed8"
    },
    {
      "name": "souliss",
      "version": "7.0.2",
      "author": "Souliss Team",
      "maintainer": "Souliss Team",
      "sentence": "SmartHome Networking Framework",
      "paragraph": "Build a network of multiple nodes over Ethernet, Wireless and RS485",
      "website": "http://souliss.github.io",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/souliss/souliss-7.0.2.zip",
      "archiveFileName": "souliss-7.0.2.zip",
      "size": 573793,
      "checksum": "SHA-256:afa5260a67f92184f7248b60c7ab177ca36fdd9b325c39935bfa13088bef776f"
    },
    {
      "name": "souliss",
      "version": "7.0.3",
      "author": "Souliss Team",
      "maintainer": "Souliss Team",
      "sentence": "SmartHome Networking Framework",
      "paragraph": "Build a network of multiple nodes over Ethernet, Wireless and RS485",
      "website": "http://souliss.github.io",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/souliss/souliss-7.0.3.zip",
      "archiveFileName": "souliss-7.0.3.zip",
      "size": 525530,
      "checksum": "SHA-256:a1139b43a7efbbe0281120d8e979e964aaad55f5890c8d52a5dab9a84e54fb5e"
    },
    {
      "name": "souliss",
      "version": "7.0.4",
      "author": "Souliss Team",
      "maintainer": "Souliss Team",
      "sentence": "SmartHome Networking Framework",
      "paragraph": "Build a network of multiple nodes over Ethernet, Wireless and RS485 for your smart home",
      "website": "http://souliss.github.io",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/souliss/souliss-7.0.4.zip",
      "archiveFileName": "souliss-7.0.4.zip",
      "size": 527864,
      "checksum": "SHA-256:4247e9508994828b3f529847c7d3e7e584ef4385885a3d97049a61e7f257e3d5"
    },
    {
      "name": "souliss",
      "version": "7.0.5",
      "author": "Souliss Team",
      "maintainer": "Souliss Team",
      "sentence": "SmartHome Networking Framework",
      "paragraph": "Build a network of multiple nodes over Ethernet, Wireless and RS485 for your smart home",
      "website": "http://souliss.github.io",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/souliss/souliss-7.0.5.zip",
      "archiveFileName": "souliss-7.0.5.zip",
      "size": 526865,
      "checksum": "SHA-256:c640480922f05eb5ad1b59d71ccb5519d6a5b9684fa8af047e7e84afda6f171d"
    },
    {
      "name": "souliss",
      "version": "7.0.6",
      "author": "Souliss Team",
      "maintainer": "Souliss Team",
      "sentence": "SmartHome Networking Framework",
      "paragraph": "Build a network of multiple nodes over Ethernet, Wireless and RS485 for your smart home",
      "website": "http://souliss.github.io",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/souliss/souliss-7.0.6.zip",
      "archiveFileName": "souliss-7.0.6.zip",
      "size": 535662,
      "checksum": "SHA-256:b16387720a0cbc76d13c30b39a0969fd385a165edb93c3293d582d5a9f04d07a"
    },
    {
      "name": "souliss",
      "version": "7.1.0",
      "author": "Souliss Team",
      "maintainer": "Souliss Team",
      "sentence": "SmartHome Networking Framework",
      "paragraph": "Build a network of multiple nodes over Ethernet, Wireless and RS485 for your smart home",
      "website": "http://souliss.github.io",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/souliss/souliss-7.1.0.zip",
      "archiveFileName": "souliss-7.1.0.zip",
      "size": 592292,
      "checksum": "SHA-256:ee0f7a8877d37d190173d1056fa8ffcb5f7c5237d04f2b4d6b4f0b57d7be55bb"
    },
    {
      "name": "souliss",
      "version": "7.1.1",
      "author": "Souliss Team",
      "maintainer": "Souliss Team",
      "sentence": "SmartHome Networking Framework",
      "paragraph": "Build a network of multiple nodes over WiFi/Ethernet, Wireless and RS485 for your smart home. Runs on AVRs and ESP8266.",
      "website": "http://souliss.github.io",
      "category": "Communication",
      "architectures": [
        "avr",
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/souliss/souliss-7.1.1.zip",
      "archiveFileName": "souliss-7.1.1.zip",
      "size": 607675,
      "checksum": "SHA-256:e404c289dfc517deaa2e62287061d514f146a33b6366dc2aaaf5ecdf64653b1b"
    },
    {
      "name": "Gamer",
      "version": "2.0.0",
      "author": "Mike Vanis \u003chello@mikevanis.com\u003e, Andy Sheen \u003candymsheen@gmail.com\u003e",
      "maintainer": "Mike Vanis \u003chello@mikevanis.com\u003e",
      "sentence": "A library for the DIY Gamer Kit by Technology Will Save Us.",
      "paragraph": "Makes interfacing with the Gamer's screen, buttons, IR, buzzer and other peripherals a walk in the park!",
      "website": "http://github.com/techwillsaveus/Gamer",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/techwillsaveus/Gamer-2.0.0.zip",
      "archiveFileName": "Gamer-2.0.0.zip",
      "size": 30788,
      "checksum": "SHA-256:fac8f3c515df9f72d82c4c8af215deacdc1392bbee7000086a98ead683490ff4"
    },
    {
      "name": "GamerIR",
      "version": "2.0.0",
      "author": "Mike Vanis \u003chello@mikevanis.com\u003e, Andy Sheen \u003candymsheen@gmail.com\u003e",
      "maintainer": "Mike Vanis \u003chello@mikevanis.com\u003e",
      "sentence": "Infrared communication library for the DIY Gamer Kit by Tech Will Save Us",
      "paragraph": "Makes interfacing with the Gamer's infrared transmitter and receiver a walk in the park!",
      "website": "http://github.com/techwillsaveus/GamerIR",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/techwillsaveus/GamerIR-2.0.0.zip",
      "archiveFileName": "GamerIR-2.0.0.zip",
      "size": 3065,
      "checksum": "SHA-256:c52b0b003342dd2b636dc15d99c30af960d2b03209068a398249905ab71824f7"
    },
    {
      "name": "SoftwareWire",
      "version": "1.3.2",
      "author": "Testato, Koepel",
      "maintainer": "Testato \u003cspeednpower@gmail.com\u003e",
      "sentence": "Creates a software I2C/TWI bus on every pins.",
      "paragraph": "The SoftwareWire is only I2C Master mode. More than one software I2C bus can be created. The clock pulse stretching is implemented, so the Slave can be another Arduino board",
      "website": "https://github.com/Testato/SoftwareWire",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Testato/SoftwareWire-1.3.2.zip",
      "archiveFileName": "SoftwareWire-1.3.2.zip",
      "size": 13784,
      "checksum": "SHA-256:f4094eadb53f40903acb0b800875f30c7d2cc26ea90db65d371c5c77ec54f98e"
    },
    {
      "name": "SoftwareWire",
      "version": "1.4.0",
      "author": "Testato, Koepel",
      "maintainer": "Testato \u003cspeednpower@gmail.com\u003e",
      "sentence": "Creates a software I2C/TWI bus on every pins.",
      "paragraph": "The SoftwareWire is only I2C Master mode. More than one software I2C bus can be created. The clock pulse stretching is implemented, so the Slave can be another Arduino board",
      "website": "https://github.com/Testato/SoftwareWire",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Testato/SoftwareWire-1.4.0.zip",
      "archiveFileName": "SoftwareWire-1.4.0.zip",
      "size": 14117,
      "checksum": "SHA-256:bedf6b04c268df4081587945967b21add90dbf2cc83c7acc05ccf93555dfcaad"
    },
    {
      "name": "DCF77",
      "version": "1.0.0",
      "author": "Thijs Elenbaas",
      "maintainer": "Thijs Elenbaas",
      "sentence": "Read and decode the atomic time broadcasted by the DCF77 radiostation.",
      "paragraph": "The DCF77 library has been designed to work in conjunction with Arduino Time library and allows a sketch to get the precise CET time and date as a standard C time_t. PLEASE NOTE: samples require Time and TimeZone libraries.",
      "website": "http://playground.arduino.cc/Code/DCF77",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/thijse/DCF77-1.0.0.zip",
      "archiveFileName": "DCF77-1.0.0.zip",
      "size": 306907,
      "checksum": "SHA-256:6df9c4609c461fcbd4da1383865186046498c891c4187a13fa6510619820ed50"
    },
    {
      "name": "EEPROMEx",
      "version": "1.0.0",
      "author": "Thijs Elenbaas",
      "maintainer": "Thijs Elenbaas",
      "sentence": "Extension of the standard Arduino EEPROM library.",
      "paragraph": "Extended for reading and writing basic types, structs, strings, arrays and more.",
      "website": "http://playground.arduino.cc/Code/EEPROMex",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/thijse/EEPROMEx-1.0.0.zip",
      "archiveFileName": "EEPROMEx-1.0.0.zip",
      "size": 86940,
      "checksum": "SHA-256:9eb7d1e33dae2a948be88417b8835e06034061e92d1d83956ad268b4782d51fd"
    },
    {
      "name": "CmdMessenger",
      "version": "4.0.0",
      "author": "Thijs Elenbaas, Valeriy Kucherenko",
      "maintainer": "Thijs Elenbaas",
      "sentence": "A serial messaging library for the Arduino and .NET/Mono platform.",
      "paragraph": "It uses serial port and Bluetooth as transport layer. To use CmdMessenger, we define a list of command identifiers, then attach callback / handler functions for received messages. PLEASE NOTE: samples requires PID and optionally Adafruit_MAX31855 libraries.",
      "website": "http://playground.arduino.cc/Code/CmdMessenger",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/thijse/CmdMessenger-4.0.0.zip",
      "archiveFileName": "CmdMessenger-4.0.0.zip",
      "size": 1414157,
      "checksum": "SHA-256:8900a0ec13947d4057834207792b9464016cb84ad82c60eae0773b5e43d620d5"
    },
    {
      "name": "thinger.io",
      "version": "1.0.0",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Library for connecting to the thinger.io IoT platform.",
      "paragraph": "Enable easy remote control of your things.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/thinger-io/thinger_io-1.0.0.zip",
      "archiveFileName": "thinger_io-1.0.0.zip",
      "size": 29096,
      "checksum": "SHA-256:0d8dfe890b4c640b9bdba8ced727581ae74ac064ad61517a364af69eeccda0bf"
    },
    {
      "name": "thinger.io",
      "version": "1.1.0",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the thinger.io IoT platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow easily connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, Arduino Ethernet, Arduino Wifi, Arduino Yun, Adafruit CC3000, Texax Instruments CC3200.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/thinger-io/thinger_io-1.1.0.zip",
      "archiveFileName": "thinger_io-1.1.0.zip",
      "size": 31818,
      "checksum": "SHA-256:a152ae938d48fd0528e9279d36480d2fb865186ce2c0c4fa14be8a8a313af8a9"
    },
    {
      "name": "thinger.io",
      "version": "1.1.1",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the thinger.io IoT platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow easily connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, Arduino Ethernet, Arduino Wifi, Arduino Yun, Adafruit CC3000, Texas Instruments CC3200.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/thinger-io/thinger_io-1.1.1.zip",
      "archiveFileName": "thinger_io-1.1.1.zip",
      "size": 32760,
      "checksum": "SHA-256:475089095a1310e9f51e9b3cc470d8ab0a663ba8bf6a072926568d621ef94398"
    },
    {
      "name": "thinger.io",
      "version": "2.0.0",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the thinger.io IoT platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, Arduino Ethernet, Arduino Wifi, Arduino Yun, Adafruit CC3000, Texas Instruments CC3200.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/thinger-io/thinger_io-2.0.0.zip",
      "archiveFileName": "thinger_io-2.0.0.zip",
      "size": 34285,
      "checksum": "SHA-256:b0e09e419a462ebee6ba017e0791d1fe0527b21f0c93072ccdcb2ce2a5515905"
    },
    {
      "name": "thinger.io",
      "version": "2.1.0",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the thinger.io IoT platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, Arduino Ethernet, Arduino Wifi, Arduino Yun, Adafruit CC3000, Texas Instruments CC3200.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/thinger-io/thinger_io-2.1.0.zip",
      "archiveFileName": "thinger_io-2.1.0.zip",
      "size": 35877,
      "checksum": "SHA-256:4d0baec0c946302a53c19a472ac518803c4483f0434ab5a0c1a6aae0f0704a6b"
    },
    {
      "name": "thinger.io",
      "version": "2.2.0",
      "author": "Alvaro Luis Bustamante \u003calvarolb@gmail.com\u003e",
      "maintainer": "Thinger.io \u003cadmin@thinger.io\u003e",
      "sentence": "Arduino library for the thinger.io IoT platform.",
      "paragraph": "Thinger.io is an open source platform for the Internet of Things. It will allow connecting your things or devices for remote sensing and actuating. Working with several devices like ESP8266, Arduino Ethernet, Arduino Wifi, Arduino Yun, Adafruit CC3000, Texas Instruments CC3200, ENC28J60, LinkIt ONE.",
      "website": "https://github.com/thinger-io/Arduino-Library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/thinger-io/thinger_io-2.2.0.zip",
      "archiveFileName": "thinger_io-2.2.0.zip",
      "size": 42528,
      "checksum": "SHA-256:9cddb2affe8c6f7bbb079c59451ffe9f999a976f46bc6fd988ede27b01f2f0a5"
    },
    {
      "name": "Bounce2",
      "version": "2.1.0",
      "author": "Thomas O Fredericks \u003ctof@t-o-f.info\u003e with contributions fromEric Lowry, Jim Schimpf and Tom Harkaway",
      "maintainer": "Thomas O Fredericks \u003ctof@t-o-f.info\u003e",
      "sentence": "Debouncing library for Arduino and Wiring.",
      "paragraph": "Deboucing switches and toggles is important.",
      "website": "https://github.com/thomasfredericks/Bounce2",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/thomasfredericks/Bounce2-2.1.0.zip",
      "archiveFileName": "Bounce2-2.1.0.zip",
      "size": 83370,
      "checksum": "SHA-256:91bf4c17e1ca1c00b3a55d34b9849c56b848c15c802f575dd86babeeb899b4ec"
    },
    {
      "name": "Chrono",
      "version": "1.0.0",
      "author": "Thomas O Fredericks \u003ctof@t-o-f.info\u003e and Sofian Audry",
      "maintainer": "Thomas O Fredericks \u003ctof@t-o-f.info\u003e and Sofian Audry",
      "sentence": "Chronometer/stopwatch library that counts the time passed since started.",
      "paragraph": "Works with Arduino and Wiring.",
      "website": "https://github.com/thomasfredericks/Chrono/",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/thomasfredericks/Chrono-1.0.0.zip",
      "archiveFileName": "Chrono-1.0.0.zip",
      "size": 131204,
      "checksum": "SHA-256:d2b22602fc2fd9eb23ba28861a4a22d4fc06d0ceadbdecb892dfc947cba96173"
    },
    {
      "name": "DW1000",
      "version": "0.4.0",
      "author": "Thomas Trojer \u003cthomas@trojer.net\u003e",
      "maintainer": "Thomas Trojer \u003cthomas@trojer.net\u003e",
      "sentence": "A library that offers functionality to use Decawave's DW1000 chips/modules.",
      "paragraph": "Supports transmission of messages, timestamp handling (for ranging and location sensing applications) and implements the different operation modes the DW1000 has to offer. The library design is intended to offer an easy-to-use interface to the otherwise complex and configuration intense handling of the DW1000.",
      "website": "https://github.com/thotro/arduino-dw1000",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/thotro/DW1000-0.4.0.zip",
      "archiveFileName": "DW1000-0.4.0.zip",
      "size": 8860861,
      "checksum": "SHA-256:b50ac55a59de180ec253832174d95742bad72b4509d2a02add4d5b72f1cd1f84"
    },
    {
      "name": "DW1000",
      "version": "0.5.0",
      "author": "Thomas Trojer \u003cthomas@trojer.net\u003e",
      "maintainer": "Thomas Trojer \u003cthomas@trojer.net\u003e",
      "sentence": "A library that offers functionality to use Decawave's DW1000 chips/modules.",
      "paragraph": "Supports transmission of messages, timestamp handling (for ranging and location sensing applications) and implements the different operation modes the DW1000 has to offer. The library design is intended to offer an easy-to-use interface to the otherwise complex and configuration intense handling of the DW1000.",
      "website": "https://github.com/thotro/arduino-dw1000",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/thotro/DW1000-0.5.0.zip",
      "archiveFileName": "DW1000-0.5.0.zip",
      "size": 8900941,
      "checksum": "SHA-256:7e6182204bdf6e7ad64ba75686ca88f49d5adb8870b97758e487206b7b7b2807"
    },
    {
      "name": "Kalman Filter Library",
      "version": "1.0.1",
      "author": "Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e",
      "maintainer": "Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e",
      "sentence": "Kalman Filter Library.",
      "paragraph": "Kalman filter used to calculate the angle, rate and bias from from the input of an accelerometer/magnetometer and a gyroscope.",
      "website": "https://github.com/TKJElectronics/KalmanFilter",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TKJElectronics/Kalman_Filter_Library-1.0.1.zip",
      "archiveFileName": "Kalman_Filter_Library-1.0.1.zip",
      "size": 18989,
      "checksum": "SHA-256:c25a2ce8c0b992319b56f85787a4de4e378a2b83c1f5d7de235cd5b75b76abee"
    },
    {
      "name": "LedControl",
      "version": "1.0.6",
      "author": "Eberhard Fahle \u003ce.fahle@wayoda.org\u003e",
      "maintainer": "Eberhard Fahle \u003ce.fahle@wayoda.org\u003e",
      "sentence": "A library for the MAX7219 and the MAX7221 Led display drivers.",
      "paragraph": "The library supports multiple daisychained drivers and supports Led-Matrix displays as well as 7-Segment displays.",
      "website": "http://wayoda.github.io/LedControl/",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/wayoda/LedControl-1.0.6.zip",
      "archiveFileName": "LedControl-1.0.6.zip",
      "size": 9708,
      "checksum": "SHA-256:98ece198429cd645290a614e0c684b0e6682e036c2d13d0204f6112a57c30848"
    },
    {
      "name": "MCStools",
      "version": "1.3.0",
      "author": "Wilfried Klaas",
      "maintainer": "Wilfried Klaas",
      "sentence": "A library to add support for rc receivers.",
      "paragraph": "This library can read and decode PPM signals from simple RC receivers.",
      "website": "https://github.com/willie68/RCReceiver.git",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/willie68/MCStools-1.3.0.zip",
      "archiveFileName": "MCStools-1.3.0.zip",
      "size": 9694,
      "checksum": "SHA-256:45ff2e5deb9cbf0bc757ad1ffb5245b3b94017ad09328b3e0622f0677852c33e"
    },
    {
      "name": "MCStools",
      "version": "1.2.0",
      "author": "Wilfried Klaas",
      "maintainer": "Wilfried Klaas",
      "sentence": "A library to add support for rc receivers.",
      "paragraph": "This library can read and decode PPM signals from simple RC receivers.",
      "website": "https://github.com/willie68/RCReceiver.git",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/willie68/MCStools-1.2.0.zip",
      "archiveFileName": "MCStools-1.2.0.zip",
      "size": 8030,
      "checksum": "SHA-256:d18e95e709c49afba88309ae8510b327117205183ae6b330994e3fe144449376"
    },
    {
      "name": "RCReceiver",
      "version": "1.4.0",
      "author": "Wilfried Klaas \u003cw.klaas@gmx.de\u003e",
      "maintainer": "Wilfried Klaas \u003cw.klaas@gmx.de\u003e",
      "sentence": "A library to add support for rc receivers.",
      "paragraph": "This library can read and decode PPM signals from simple RC receivers. On Arduino Uno there are 2 channels supported, on others like leonardo or mega, 4 channels.",
      "website": "https://github.com/willie68/RCReceiver.git",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/willie68/RCReceiver-1.4.0.zip",
      "archiveFileName": "RCReceiver-1.4.0.zip",
      "size": 9890,
      "checksum": "SHA-256:1d0a1cc58f98ad8e83645a9e0f9c4db75b784b47068e6fb50574c1593e8df343"
    },
    {
      "name": "MAX78630",
      "version": "1.0.1",
      "author": "Gunce Akkoyun \u003cgunce.akkoyun@lvx.com.tr\u003e, Alp Erkan Savli \u003calp.erkan@lvx.com.tr\u003e",
      "maintainer": "LVX \u003cinfo@lvx.com.tr\u003e",
      "sentence": "Enables reading polyphase energy-monitor parameters of MAX78630 (X2Bus EnergyBoard)",
      "paragraph": "The EnergyBoard is an energy measurement module for polyphase power-monitoring systems. It is designed for real-time monitoring for a variety of typical three-phase configurations in industrial applications. The EnergyBoard provides up to six analog inputs for interfacing to voltage and current sensors. Scaled voltages from the sensors are fed to the single converter front-end using a high-resolution delta-sigma converter. Supported current sensors include current transformers (CTs), Rogowski coils, and resistive shunts.",
      "website": "http://www.lvx.com.tr",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/x2bus/MAX78630-1.0.1.zip",
      "archiveFileName": "MAX78630-1.0.1.zip",
      "size": 6830,
      "checksum": "SHA-256:05b831240c3951fbe404ea77a367efdcc9d7f25482a3f7b86f049cf2e96df43d"
    },
    {
      "name": "MAX78630",
      "version": "1.1.0",
      "author": "Gunce Akkoyun \u003cgunce.akkoyun@lvx.com.tr\u003e, Alp Erkan Savli \u003calp.erkan@lvx.com.tr\u003e",
      "maintainer": "LVX \u003cinfo@lvx.com.tr\u003e",
      "sentence": "Enables reading polyphase energy-monitor parameters of MAX78630 (X2Bus EnergyBoard)",
      "paragraph": "The EnergyBoard is an energy measurement module for polyphase power-monitoring systems. It is designed for real-time monitoring for a variety of typical three-phase configurations in industrial applications. The EnergyBoard provides up to six analog inputs for interfacing to voltage and current sensors. Scaled voltages from the sensors are fed to the single converter front-end using a high-resolution delta-sigma converter. Supported current sensors include current transformers (CTs), Rogowski coils, and resistive shunts.",
      "website": "http://www.lvx.com.tr",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/x2bus/MAX78630-1.1.0.zip",
      "archiveFileName": "MAX78630-1.1.0.zip",
      "size": 68322,
      "checksum": "SHA-256:ba59033f1d4239b4322c0346e1895db5f5be7c90f5edf455699e443d21e3e06a"
    },
    {
      "name": "MAX78630",
      "version": "1.2.0",
      "author": "Gunce Akkoyun \u003cgunce.akkoyun@lvx.com.tr\u003e, Alp Erkan Savli \u003calp.erkan@lvx.com.tr\u003e",
      "maintainer": "LVX \u003cinfo@lvx.com.tr\u003e",
      "sentence": "Enables reading polyphase energy-monitor parameters of MAX78630 (X2Bus EnergyBoard)",
      "paragraph": "The EnergyBoard is an energy measurement module for polyphase power-monitoring systems. It is designed for real-time monitoring for a variety of typical three-phase configurations in industrial applications. The EnergyBoard provides up to six analog inputs for interfacing to voltage and current sensors. Scaled voltages from the sensors are fed to the single converter front-end using a high-resolution delta-sigma converter. Supported current sensors include current transformers (CTs), Rogowski coils, and resistive shunts.",
      "website": "http://www.lvx.com.tr",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/x2bus/MAX78630-1.2.0.zip",
      "archiveFileName": "MAX78630-1.2.0.zip",
      "size": 68322,
      "checksum": "SHA-256:0b8ba4b9f8ec1ec958d92d0ee1e1a20c7be29adcba7da4ec3e5946fc25dbb7be"
    },
    {
      "name": "EnergyBoard",
      "version": "2.0.0",
      "author": "Gunce Akkoyun \u003cgunce.akkoyun@lvx.com.tr\u003e, Alp Erkan Savli \u003calp.erkan@lvx.com.tr\u003e",
      "maintainer": "LVX \u003cinfo@lvx.com.tr\u003e",
      "sentence": "Enables reading polyphase energy-monitor parameters of MAX78630 (X2Bus EnergyBoard)",
      "paragraph": "The EnergyBoard is an energy measurement module for polyphase power-monitoring systems. It is designed for real-time monitoring for a variety of typical three-phase configurations in industrial applications. The EnergyBoard provides up to six analog inputs for interfacing to voltage and current sensors. Scaled voltages from the sensors are fed to the single converter front-end using a high-resolution delta-sigma converter. Supported current sensors include current transformers (CTs), Rogowski coils, and resistive shunts.",
      "website": "http://www.lvx.com.tr",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/x2bus/EnergyBoard-2.0.0.zip",
      "archiveFileName": "EnergyBoard-2.0.0.zip",
      "size": 611985,
      "checksum": "SHA-256:1be79e0f65e8992e2a4c6ff3b9dc01db4533a249d29200b5cbf509c97c68e862"
    },
    {
      "name": "EnergyBoard",
      "version": "2.0.2",
      "author": "Gunce Akkoyun \u003cgunce.akkoyun@lvx.com.tr\u003e, Alp Erkan Savli \u003calp.erkan@lvx.com.tr\u003e",
      "maintainer": "LVX \u003cinfo@lvx.com.tr\u003e",
      "sentence": "Enables reading polyphase energy-monitor parameters of MAX78630 (X2Bus EnergyBoard)",
      "paragraph": "The EnergyBoard is an energy measurement module for polyphase power-monitoring systems. It is designed for real-time monitoring for a variety of typical three-phase configurations in industrial applications. The EnergyBoard provides up to six analog inputs for interfacing to voltage and current sensors. Scaled voltages from the sensors are fed to the single converter front-end using a high-resolution delta-sigma converter. Supported current sensors include current transformers (CTs), Rogowski coils, and resistive shunts.",
      "website": "http://www.lvx.com.tr",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/x2bus/EnergyBoard-2.0.2.zip",
      "archiveFileName": "EnergyBoard-2.0.2.zip",
      "size": 611822,
      "checksum": "SHA-256:94d84aa100e20617663751d18a1fd5f2e9ac2e4f9586c9a2d245cbe0608ae7f4"
    },
    {
      "name": "EnergyBoard",
      "version": "2.2.0",
      "author": "Gunce Akkoyun \u003cgunce.akkoyun@lvx.com.tr\u003e, Alp Erkan Savli \u003calp.erkan@lvx.com.tr\u003e",
      "maintainer": "LVX \u003cinfo@lvx.com.tr\u003e",
      "sentence": "Enables reading polyphase energy-monitor parameters of LVX EnergyBoard",
      "paragraph": "The EnergyBoard is an energy measurement module for polyphase power-monitoring systems. It is designed for real-time monitoring for a variety of typical three-phase configurations in industrial applications. The EnergyBoard provides up to six analog inputs for interfacing to voltage and current sensors. Scaled voltages from the sensors are fed to the single converter front-end using a high-resolution delta-sigma converter. Supported current sensors include current transformers (CTs), Rogowski coils, and resistive shunts.",
      "website": "http://www.lvx.com.tr",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/x2bus/EnergyBoard-2.2.0.zip",
      "archiveFileName": "EnergyBoard-2.2.0.zip",
      "size": 2405912,
      "checksum": "SHA-256:284fae7d79f3d6263ee9d62d6cf3747ece79963bfcf83a99b6c1ebf8130948b8"
    },
    {
      "name": "EnergyBoard",
      "version": "3.0.1",
      "author": "Gunce Akkoyun \u003cgunce.akkoyun@lvx.com.tr\u003e",
      "maintainer": "LVX \u003cinfo@lvx.com.tr\u003e",
      "sentence": "Enables reading polyphase energy-monitor parameters of LVX EnergyBoard",
      "paragraph": "The EnergyBoard is an energy measurement module for polyphase power-monitoring systems. It is designed for real-time monitoring for a variety of typical three-phase configurations in industrial applications. The EnergyBoard provides up to six analog inputs for interfacing to voltage and current sensors. Scaled voltages from the sensors are fed to the single converter front-end using a high-resolution delta-sigma converter. Supported current sensors include current transformers (CTs), Rogowski coils, and resistive shunts.",
      "website": "http://www.lvx.com.tr",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/x2bus/EnergyBoard-3.0.1.zip",
      "archiveFileName": "EnergyBoard-3.0.1.zip",
      "size": 2405532,
      "checksum": "SHA-256:ebdbad87b8f1345c4e8f08bbce4d687fd4924d7cf6f70bfd83afdad5e488aa05"
    },
    {
      "name": "PubSubClient",
      "version": "2.4.0",
      "author": "Nick O'Leary \u003cnick.oleary@gmail.com\u003e",
      "maintainer": "Nick O'Leary \u003cnick.oleary@gmail.com\u003e",
      "sentence": "A client library for MQTT messaging.",
      "paragraph": "MQTT is a lightweight messaging protocol ideal for small devices. This library allows you to send and receive MQTT messages. It supports the latest MQTT 3.1.1 protocol and can be configured to use the older MQTT 3.1 if needed. It supports all Arduino Ethernet Client compatible hardware, including the Intel Galileo/Edison, ESP8266 and TI CC3000.",
      "website": "http://pubsubclient.knolleary.net",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/knolleary/PubSubClient-2.4.0.zip",
      "archiveFileName": "PubSubClient-2.4.0.zip",
      "size": 34464,
      "checksum": "SHA-256:f7f50b7d3eece7b0a497b1e1312b6a122b35bd654d76b6654f46a7b69cebf4f1"
    },
    {
      "name": "PubSubClient",
      "version": "2.2.0",
      "author": "Nick O'Leary \u003cnick.oleary@gmail.com\u003e",
      "maintainer": "Nick O'Leary \u003cnick.oleary@gmail.com\u003e",
      "sentence": "A client library for MQTT messaging.",
      "paragraph": "MQTT is a lightweight messaging protocol ideal for small devices. This library allows you to send and receive MQTT messages from a remote server. It supports the latest MQTT 3.1.1 protocol and can be configured to use the older MQTT 3.1 if needed. It supports all Arduino Ethernet Client compatible hardware, including the Intel Galileo/Edison and ESP8266.",
      "website": "http://knolleary.github.io/pubsubclient/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/knolleary/PubSubClient-2.2.0.zip",
      "archiveFileName": "PubSubClient-2.2.0.zip",
      "size": 32249,
      "checksum": "SHA-256:7b2a9d8a7b8256d5d4a0210d7229c5ba8e385ddda4d0e906a856b15d202d4347"
    },
    {
      "name": "PubSubClient",
      "version": "2.3.0",
      "author": "Nick O'Leary \u003cnick.oleary@gmail.com\u003e",
      "maintainer": "Nick O'Leary \u003cnick.oleary@gmail.com\u003e",
      "sentence": "A client library for MQTT messaging.",
      "paragraph": "MQTT is a lightweight messaging protocol ideal for small devices. This library allows you to send and receive MQTT messages. It supports the latest MQTT 3.1.1 protocol and can be configured to use the older MQTT 3.1 if needed. It supports all Arduino Ethernet Client compatible hardware, including the Intel Galileo/Edison, ESP8266 and TI CC3000.",
      "website": "http://pubsubclient.knolleary.net",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/knolleary/PubSubClient-2.3.0.zip",
      "archiveFileName": "PubSubClient-2.3.0.zip",
      "size": 34135,
      "checksum": "SHA-256:1b5d8c74f8ebdfc6724463f63762a0e31a1e718b9ddf0d67777650e756ebdad2"
    },
    {
      "name": "PubSubClient",
      "version": "2.5.0",
      "author": "Nick O'Leary \u003cnick.oleary@gmail.com\u003e",
      "maintainer": "Nick O'Leary \u003cnick.oleary@gmail.com\u003e",
      "sentence": "A client library for MQTT messaging.",
      "paragraph": "MQTT is a lightweight messaging protocol ideal for small devices. This library allows you to send and receive MQTT messages. It supports the latest MQTT 3.1.1 protocol and can be configured to use the older MQTT 3.1 if needed. It supports all Arduino Ethernet Client compatible hardware, including the Intel Galileo/Edison, ESP8266 and TI CC3000.",
      "website": "http://pubsubclient.knolleary.net",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/knolleary/PubSubClient-2.5.0.zip",
      "archiveFileName": "PubSubClient-2.5.0.zip",
      "size": 35117,
      "checksum": "SHA-256:eea0d86b51d95ff1ed1a76b2b3f7a6348ec16ea46243642f7ef6ceb3aa730505"
    },
    {
      "name": "PubSubClient",
      "version": "2.6.0",
      "author": "Nick O'Leary \u003cnick.oleary@gmail.com\u003e",
      "maintainer": "Nick O'Leary \u003cnick.oleary@gmail.com\u003e",
      "sentence": "A client library for MQTT messaging.",
      "paragraph": "MQTT is a lightweight messaging protocol ideal for small devices. This library allows you to send and receive MQTT messages. It supports the latest MQTT 3.1.1 protocol and can be configured to use the older MQTT 3.1 if needed. It supports all Arduino Ethernet Client compatible hardware, including the Intel Galileo/Edison, ESP8266 and TI CC3000.",
      "website": "http://pubsubclient.knolleary.net",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/knolleary/PubSubClient-2.6.0.zip",
      "archiveFileName": "PubSubClient-2.6.0.zip",
      "size": 35113,
      "checksum": "SHA-256:74ed4fb8ce047c916e3e7729ff96417b9a9ebd34c16fc3f7b67f149a227ef60f"
    },
    {
      "name": "Dynamixel_Servo",
      "version": "2.1.0",
      "author": "Michael Krzyzaniak\u003cmkrzyzan@asu.edu\u003e",
      "maintainer": "Michael Krzyzaniak\u003cmkrzyzan@asu.edu\u003e",
      "sentence": "Dynamixel_Servo is an Arduino compatible library for controlling Dynamixel MX and RX series servos.",
      "paragraph": "This module presents a high-level interface and a low-level interface for manipulating the servo's registers. The high-level interface looks up the width (one or two bytes) of the specified value and manipulates all relevant registers (low byte and high byte) as a single value. The high-level interface also performs automatic conversions between the raw values defined in the servo's datasheet, and physical values such as radians, radians-per-second, Amperes, Volts, baud, microseconds, degrees-Celcius, percent (of the motor's maximum torque) etc... as appropriate to the value. The down-side is that the high-level interface hogs several kilobytes of code space, as the result of using floating-point math and having some large-ish lookup tables. Therefore a low-level interface is provided that allows more straightforward access to the servo's registers using raw values, which may optionally be converted to and from physical values using the provided functions. Using the low-level interface and raw values may save several kilobytes of code space (The compiler won't compile functions that aren't used). The low-level interface also provides the capability to access several of the servo's values in a single command using the xxx_raw_page functions.",
      "website": "https://github.com/michaelkrzyzaniak/Dynamixel_Servo",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/michaelkrzyzaniak/Dynamixel_Servo-2.1.0.zip",
      "archiveFileName": "Dynamixel_Servo-2.1.0.zip",
      "size": 34777,
      "checksum": "SHA-256:7b328e0ba7f749a85e1b23c4c72d73c70f3b68725011a62b6b9e7303f1a70281"
    },
    {
      "name": "Universal Inputs",
      "version": "2.0.2",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for reading multiple input devices of different types.",
      "paragraph": "Arduino library for reading multiple input devices of different types.",
      "website": "https://github.com/DanNixon/ArduinoUniversalInput",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/DanNixon/Universal_Inputs-2.0.2.zip",
      "archiveFileName": "Universal_Inputs-2.0.2.zip",
      "size": 17251,
      "checksum": "SHA-256:70dfee8448d3736b627069102c47c6d36baf23145f42ebb677503608f9005938"
    },
    {
      "name": "Universal Inputs",
      "version": "2.0.3",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for reading multiple input devices of different types.",
      "paragraph": "Arduino library for reading multiple input devices of different types.",
      "website": "https://github.com/DanNixon/ArduinoUniversalInput",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/DanNixon/Universal_Inputs-2.0.3.zip",
      "archiveFileName": "Universal_Inputs-2.0.3.zip",
      "size": 17241,
      "checksum": "SHA-256:4775518be35ac5f16724762f27c31bdbec6d2811ceba05c2bcefb5f5d24f4dc3"
    },
    {
      "name": "Universal Inputs",
      "version": "2.0.4",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for reading multiple input devices of different types.",
      "paragraph": "Arduino library for reading multiple input devices of different types.",
      "website": "https://github.com/DanNixon/ArduinoUniversalInput",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/DanNixon/Universal_Inputs-2.0.4.zip",
      "archiveFileName": "Universal_Inputs-2.0.4.zip",
      "size": 17239,
      "checksum": "SHA-256:ccbc1c11739825d4c44e6530851f3155d7fdfe945f98d7937bfc67b8081472e7"
    },
    {
      "name": "Universal Inputs",
      "version": "2.1.0",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for reading multiple input devices of different types.",
      "paragraph": "Arduino library for reading multiple input devices of different types.",
      "website": "https://github.com/DanNixon/ArduinoUniversalInput",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/DanNixon/Universal_Inputs-2.1.0.zip",
      "archiveFileName": "Universal_Inputs-2.1.0.zip",
      "size": 18949,
      "checksum": "SHA-256:819317b847754e71dac11637d33d2bbf860b8ecf6d27b97f59db254eef0935c3"
    },
    {
      "name": "XBee-Arduino library",
      "version": "0.6.0",
      "author": "Andrew Rapp",
      "maintainer": "Andrew Rapp \u003candrew.rapp@gmail.com\u003e",
      "sentence": "Library for talking to to various wireless XBee modules from Digi.",
      "paragraph": "This supports various devices, configured to use the more advanced \"API\" mode.",
      "website": "https://github.com/andrewrapp/xbee-arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/andrewrapp/XBee_Arduino_library-0.6.0.zip",
      "archiveFileName": "XBee_Arduino_library-0.6.0.zip",
      "size": 429041,
      "checksum": "SHA-256:292d7cf06802f9df6bba462a255ad652294fdd1f4933ac92ef7092a1d0e4f5bc"
    },
    {
      "name": "NeoNextion",
      "version": "1.0.0",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for controlling Nextion displays",
      "paragraph": "Arduino library for controlling Nextion displays",
      "website": "https://github.com/DanNixon/NeoNextion",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/DanNixon/NeoNextion-1.0.0.zip",
      "archiveFileName": "NeoNextion-1.0.0.zip",
      "size": 49866,
      "checksum": "SHA-256:10714d32a9855944c16e80047f8db655518e0e0cf592f3420dd0cb57f0db9145"
    },
    {
      "name": "NeoNextion",
      "version": "1.0.1",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for controlling Nextion displays",
      "paragraph": "Arduino library for controlling Nextion displays",
      "website": "https://github.com/DanNixon/NeoNextion",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/DanNixon/NeoNextion-1.0.1.zip",
      "archiveFileName": "NeoNextion-1.0.1.zip",
      "size": 49861,
      "checksum": "SHA-256:5806fb6898121d210c1710a20cc8a06c16b8670cf4437c85494ce02db670e0dc"
    },
    {
      "name": "NeoNextion",
      "version": "1.1.0",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for controlling Nextion displays",
      "paragraph": "Arduino library for controlling Nextion displays",
      "website": "https://github.com/DanNixon/NeoNextion",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/DanNixon/NeoNextion-1.1.0.zip",
      "archiveFileName": "NeoNextion-1.1.0.zip",
      "size": 62219,
      "checksum": "SHA-256:121fef61b34aa449698e892e1cfe5a41a1d294b32132be36693d9847cb7f30fb"
    },
    {
      "name": "NeoNextion",
      "version": "1.1.1",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for controlling Nextion displays",
      "paragraph": "Arduino library for controlling Nextion displays",
      "website": "https://github.com/DanNixon/NeoNextion",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/DanNixon/NeoNextion-1.1.1.zip",
      "archiveFileName": "NeoNextion-1.1.1.zip",
      "size": 62266,
      "checksum": "SHA-256:234d6cb4d2741f94b78884f464daf2704841919bf70ebdbab2339c1d645ef6e0"
    },
    {
      "name": "NeoNextion",
      "version": "1.2.0",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for controlling Nextion displays",
      "paragraph": "Arduino library for controlling Nextion displays",
      "website": "https://github.com/DanNixon/NeoNextion",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/DanNixon/NeoNextion-1.2.0.zip",
      "archiveFileName": "NeoNextion-1.2.0.zip",
      "size": 62099,
      "checksum": "SHA-256:7730b5c446ecd1a28bcba319447a075b8cceaee025190dc0370c95420194a638"
    },
    {
      "name": "NeoNextion",
      "version": "2.0.0",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for controlling Nextion displays",
      "paragraph": "Arduino library for controlling Nextion displays",
      "website": "https://github.com/DanNixon/NeoNextion",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/DanNixon/NeoNextion-2.0.0.zip",
      "archiveFileName": "NeoNextion-2.0.0.zip",
      "size": 66008,
      "checksum": "SHA-256:df95eab6a0a83c0160edd66f16eeb2fa7baca3594815e7f2fa1fce376d09e084"
    },
    {
      "name": "NeoNextion",
      "version": "2.1.0",
      "author": "Dan Nixon",
      "maintainer": "Dan Nixon \u003cdan@dan-nixon.com\u003e",
      "sentence": "Arduino library for controlling Nextion displays",
      "paragraph": "Arduino library for controlling Nextion displays",
      "website": "https://github.com/DanNixon/NeoNextion",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/DanNixon/NeoNextion-2.1.0.zip",
      "archiveFileName": "NeoNextion-2.1.0.zip",
      "size": 67735,
      "checksum": "SHA-256:decdd9e177c3c839807cd75b2c7adf20590bc5d7c9b935e7dc04c2b90a201923"
    },
    {
      "name": "Controllino Library",
      "version": "1.0.0",
      "author": "SG-Tronic",
      "maintainer": "SG-Tronic \u003cinfo@controllino.cc\u003e",
      "sentence": "Library for Controllino PLC",
      "paragraph": "Library for Controllino PLC",
      "website": "https://github.com/Controllino/ControllinoLibrary",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Controllino/Controllino_Library-1.0.0.zip",
      "archiveFileName": "Controllino_Library-1.0.0.zip",
      "size": 11594,
      "checksum": "SHA-256:c2c076ec4608f5765936ccf4944f71b0b8bfe9c91b25efffcb90323a06419d88"
    },
    {
      "name": "Controllino Library",
      "version": "0.9.0",
      "author": "SG-Tronic",
      "maintainer": "SG-Tronic \u003cinfo@controllino.cc\u003e",
      "sentence": "Library for Controllino PLC",
      "paragraph": "Library for Controllino PLC",
      "website": "https://github.com/Controllino/ControllinoLibrary",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Controllino/Controllino_Library-0.9.0.zip",
      "archiveFileName": "Controllino_Library-0.9.0.zip",
      "size": 11564,
      "checksum": "SHA-256:34ad8b7f51e44ad7998c5edf6a6dc042a3a6214ac4ae8956787bef794539aeb4"
    },
    {
      "name": "Controllino Library",
      "version": "1.0.1",
      "author": "SG-Tronic",
      "maintainer": "SG-Tronic \u003cinfo@controllino.cc\u003e",
      "sentence": "Library for Controllino PLC",
      "paragraph": "Library for Controllino PLC",
      "website": "https://github.com/Controllino/ControllinoLibrary",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Controllino/Controllino_Library-1.0.1.zip",
      "archiveFileName": "Controllino_Library-1.0.1.zip",
      "size": 11589,
      "checksum": "SHA-256:56e40276296373aef515ea32e2cc90770676645056bb5bd1b90197583cc8f01f"
    },
    {
      "name": "ArdOSC",
      "version": "2.2.0",
      "author": "recotana http://recotana.com",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "Open Sound Control(OSC) Library for Arduino.",
      "paragraph": "Updated for library manager",
      "website": "https://github.com/Chris--A/ArdOSC",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Chris--A/ArdOSC-2.2.0.zip",
      "archiveFileName": "ArdOSC-2.2.0.zip",
      "size": 23089,
      "checksum": "SHA-256:2e06000030c8e102ca664e9e399d505ad646237408bb48471b5fab566c74a0b0"
    },
    {
      "name": "PJON",
      "version": "1.0.0",
      "author": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "maintainer": "Giovanni Blu Mitolo \u003cgioscarab@gmail.com\u003e",
      "sentence": "PJON is a device communications bus system that connects up to 255 arduino boards over a single wire",
      "paragraph": "Provides up to 5KB/s data communication with acknowledge, collision detection, CRC and encpryption all done with micros() and delayMicroseconds(), without using interrupt or timers.",
      "website": "https://github.com/gioblu/PJON",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/gioblu/PJON-1.0.0.zip",
      "archiveFileName": "PJON-1.0.0.zip",
      "size": 15671,
      "checksum": "SHA-256:afc3b300fc716caaeed53ba7432dc0c4dffc5a160cadbc5f37eda323eeedd636"
    },
    {
      "name": "OPC",
      "version": "1.0.0",
      "author": "Ildefonso Martinez \u003ci.martinez@st4makers.com\u003e",
      "maintainer": "Ildefonso Martinez \u003ci.martinez@st4makers.com\u003e",
      "sentence": "A library for Arduino OPC Server support.",
      "paragraph": "This library that can be used for OPC support or used stand alone for monitoring.",
      "website": "http://www.st4makers.com/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/SoftwareTools4Makers/OPC-1.0.0.zip",
      "archiveFileName": "OPC-1.0.0.zip",
      "size": 16919,
      "checksum": "SHA-256:18cd0352446e269e4ab6ee630895eb86f6a5fb284c9b8239a552a562e6805abd"
    },
    {
      "name": "VL6180X",
      "version": "1.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "VL6180X distance and ambient light sensor library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with ST's VL6180X distance and ambient light sensor.",
      "website": "https://github.com/pololu/vl6180x-arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/pololu/VL6180X-1.0.0.zip",
      "archiveFileName": "VL6180X-1.0.0.zip",
      "size": 10364,
      "checksum": "SHA-256:01b9b12725066428373b9ef977387f250ca518e10e2aa5b84dc1bd27d4eca438"
    },
    {
      "name": "ardyno",
      "version": "0.3.0",
      "author": "Adrien Descamps \u003cadrien.descamps@gmail.com\u003e",
      "maintainer": "Adrien Descamps \u003cadrien.descamps@gmail.com\u003e",
      "sentence": "A library to control dynamixel motors",
      "paragraph": "This library allows you to control the Robotis servo motors that use a custom half-duplex serial protocol. You can control TTL models directly from Arduino, without any additional hardware, using hardware or software UART. Communication speed up to 1 MBd is supported with hardware serial. The most useful functions (speed, position, wheel/joint mode) are provided via a very simple high level interface (see test_motor example), but other operations can be done using the generic read/write functions (see test_led example).",
      "website": "https://github.com/descampsa/ardyno",
      "category": "Device Control",
      "architectures": [
        ""
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/descampsa/ardyno-0.3.0.zip",
      "archiveFileName": "ardyno-0.3.0.zip",
      "size": 61085,
      "checksum": "SHA-256:1600e1a8d5597e9535634c13f34e5460e8ee45459c4c93d379a4822813095069"
    },
    {
      "name": "RF24Mesh",
      "version": "1.0.0",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices mesh.",
      "paragraph": "Provides a simple and seamless 'mesh' layer for sensor networks, allowing automatic and dynamic configuration that can be customized to suit many scenarios. It is currently designed to interface directly with with the RF24Network Development library, an OSI Network Layer using nRF24L01(+) radios driven by the newly optimized RF24 library fork.",
      "website": "http://tmrh20.github.io/RF24Mesh/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TMRh20/RF24Mesh-1.0.0.zip",
      "archiveFileName": "RF24Mesh-1.0.0.zip",
      "size": 28602,
      "checksum": "SHA-256:0b1cac07254d3d2830670d33a9bc732bbfad0f4a15224c5173fd868d8f0cec5a"
    },
    {
      "name": "RF24Mesh",
      "version": "1.0.1",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices mesh.",
      "paragraph": "Provides a simple and seamless 'mesh' layer for sensor networks, allowing automatic and dynamic configuration that can be customized to suit many scenarios. It is currently designed to interface directly with with the RF24Network Development library, an OSI Network Layer using nRF24L01(+) radios driven by the newly optimized RF24 library fork.",
      "website": "http://tmrh20.github.io/RF24Mesh/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TMRh20/RF24Mesh-1.0.1.zip",
      "archiveFileName": "RF24Mesh-1.0.1.zip",
      "size": 28722,
      "checksum": "SHA-256:cb9286441993a865501415656039d552ebb46160b0bf5307fca61db5bfacb5d1"
    },
    {
      "name": "RF24Mesh",
      "version": "1.0.2",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices mesh.",
      "paragraph": "Provides a simple and seamless 'mesh' layer for sensor networks, allowing automatic and dynamic configuration that can be customized to suit many scenarios. It is currently designed to interface directly with with the RF24Network Development library, an OSI Network Layer using nRF24L01(+) radios driven by the newly optimized RF24 library fork.",
      "website": "http://tmrh20.github.io/RF24Mesh/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TMRh20/RF24Mesh-1.0.2.zip",
      "archiveFileName": "RF24Mesh-1.0.2.zip",
      "size": 28855,
      "checksum": "SHA-256:7721122d9bf95b307e784ca6bc3c6318b0b7b5d3b87c02f354d4599b661a2403"
    },
    {
      "name": "RF24Mesh",
      "version": "1.0.3",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices mesh.",
      "paragraph": "Provides a simple and seamless 'mesh' layer for sensor networks, allowing automatic and dynamic configuration that can be customized to suit many scenarios. It is currently designed to interface directly with with the RF24Network Development library, an OSI Network Layer using nRF24L01(+) radios driven by the newly optimized RF24 library fork.",
      "website": "http://tmrh20.github.io/RF24Mesh/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TMRh20/RF24Mesh-1.0.3.zip",
      "archiveFileName": "RF24Mesh-1.0.3.zip",
      "size": 30112,
      "checksum": "SHA-256:368bcda4576bcd832434fb2180addfa90f9d2a5dd24a5fc26970fe2ad0ae0401"
    },
    {
      "name": "RF24Mesh",
      "version": "1.0.4",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices mesh.",
      "paragraph": "Provides a simple and seamless 'mesh' layer for sensor networks, allowing automatic and dynamic configuration that can be customized to suit many scenarios. It is currently designed to interface directly with with the RF24Network Development library, an OSI Network Layer using nRF24L01(+) radios driven by the newly optimized RF24 library fork.",
      "website": "http://tmrh20.github.io/RF24Mesh/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TMRh20/RF24Mesh-1.0.4.zip",
      "archiveFileName": "RF24Mesh-1.0.4.zip",
      "size": 30502,
      "checksum": "SHA-256:5d2259f40bc7e41bf4a7d3184ba43e0c511a3c5e0ac9741831647c39e101c14a"
    },
    {
      "name": "RF24Network",
      "version": "1.0.0",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices network.",
      "paragraph": "Provides a simple and seamless netowork layer for sensor networks.",
      "website": "http://tmrh20.github.io/RF24Network/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TMRh20/RF24Network-1.0.0.zip",
      "archiveFileName": "RF24Network-1.0.0.zip",
      "size": 114347,
      "checksum": "SHA-256:3b3558bec9d1bb2b4e14d0d7571ebf0347f96272304a34fd66a96d61ab060600"
    },
    {
      "name": "RF24Network",
      "version": "1.0.1",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices network.",
      "paragraph": "Provides a simple and seamless netowork layer for sensor networks.",
      "website": "http://tmrh20.github.io/RF24Network/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TMRh20/RF24Network-1.0.1.zip",
      "archiveFileName": "RF24Network-1.0.1.zip",
      "size": 114329,
      "checksum": "SHA-256:7a452d9e0c732f42b05d09a8baa6a02ef309e5a90a8f4310f6f6a456ef6bb083"
    },
    {
      "name": "RF24Network",
      "version": "1.0.2",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices network.",
      "paragraph": "Provides a simple and seamless netowork layer for sensor networks.",
      "website": "http://tmrh20.github.io/RF24Network/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TMRh20/RF24Network-1.0.2.zip",
      "archiveFileName": "RF24Network-1.0.2.zip",
      "size": 113693,
      "checksum": "SHA-256:ac1d6c9ad705fd698a7ed49d609eeb58542dba77dda721b50cb630f932e07032"
    },
    {
      "name": "RF24Network",
      "version": "1.0.3",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices network.",
      "paragraph": "Provides a simple and seamless netowork layer for sensor networks.",
      "website": "http://tmrh20.github.io/RF24Network/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TMRh20/RF24Network-1.0.3.zip",
      "archiveFileName": "RF24Network-1.0.3.zip",
      "size": 114121,
      "checksum": "SHA-256:65e89e9746a5b02def3aa995f6933ef4576535416e1c0592edcea6574d181573"
    },
    {
      "name": "RF24Network",
      "version": "1.0.4",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) devices network.",
      "paragraph": "Provides a simple and seamless netowork layer for sensor networks.",
      "website": "http://tmrh20.github.io/RF24Network/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TMRh20/RF24Network-1.0.4.zip",
      "archiveFileName": "RF24Network-1.0.4.zip",
      "size": 114136,
      "checksum": "SHA-256:5cb59cffa0c1a04a5bbe5df58be0ea600d18ed50f670648439ec05eac489a076"
    },
    {
      "name": "RF24",
      "version": "1.0.0",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) communication.",
      "paragraph": "Optimized library for nRF24L01(+) that is simple to use for beginners, but yet offers a lot for advanced users. It also has a lot of good examples how to use the library.",
      "website": "http://tmrh20.github.io/RF24/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TMRh20/RF24-1.0.0.zip",
      "archiveFileName": "RF24-1.0.0.zip",
      "size": 303514,
      "checksum": "SHA-256:e53bb2e97b7d6e92e5e99c12a0786f6ad87017ebcdd661024e33917bd4be9502"
    },
    {
      "name": "RF24",
      "version": "1.0.1",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) communication.",
      "paragraph": "Optimized library for nRF24L01(+) that is simple to use for beginners, but yet offers a lot for advanced users. It also has a lot of good examples how to use the library.",
      "website": "http://tmrh20.github.io/RF24/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TMRh20/RF24-1.0.1.zip",
      "archiveFileName": "RF24-1.0.1.zip",
      "size": 303516,
      "checksum": "SHA-256:600ed09d8af949765f135da28761c2b2636a2566351403d0178edff21a868366"
    },
    {
      "name": "RF24",
      "version": "1.1.1",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) communication.",
      "paragraph": "Optimized library for nRF24L01(+) that is simple to use for beginners, but yet offers a lot for advanced users. It also has a lot of good examples how to use the library.",
      "website": "http://tmrh20.github.io/RF24/",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TMRh20/RF24-1.1.1.zip",
      "archiveFileName": "RF24-1.1.1.zip",
      "size": 303515,
      "checksum": "SHA-256:0d2fd7371908216d216fc9ea00ffecb473ba823a9a1e88e9fee58459ca3cac8e"
    },
    {
      "name": "RF24",
      "version": "1.1.2",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) communication.",
      "paragraph": "Optimized library for nRF24L01(+) that is simple to use for beginners, but yet offers a lot for advanced users. It also has a lot of good examples how to use the library.",
      "website": "http://tmrh20.github.io/RF24/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TMRh20/RF24-1.1.2.zip",
      "archiveFileName": "RF24-1.1.2.zip",
      "size": 306655,
      "checksum": "SHA-256:8b2d2dc210b08d98135db0578f1e00e050ff63d8fc8d480b57bffaefd8000a8b"
    },
    {
      "name": "RF24",
      "version": "1.1.3",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) communication.",
      "paragraph": "Optimized library for nRF24L01(+) that is simple to use for beginners, but yet offers a lot for advanced users. It also has a lot of good examples how to use the library.",
      "website": "http://tmrh20.github.io/RF24/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TMRh20/RF24-1.1.3.zip",
      "archiveFileName": "RF24-1.1.3.zip",
      "size": 307151,
      "checksum": "SHA-256:6ab253febe19fade1b3a0359b5016c82aa1ae03ed814b09b33bda4f0cce3e6a7"
    },
    {
      "name": "RF24",
      "version": "1.1.4",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) communication.",
      "paragraph": "Optimized library for nRF24L01(+) that is simple to use for beginners, but yet offers a lot for advanced users. It also has a lot of good examples how to use the library.",
      "website": "http://tmrh20.github.io/RF24/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TMRh20/RF24-1.1.4.zip",
      "archiveFileName": "RF24-1.1.4.zip",
      "size": 307698,
      "checksum": "SHA-256:cf03c52d9449079a17fb4461812daae05bf3361549023eb2050781e4a31f0899"
    },
    {
      "name": "RF24",
      "version": "1.1.5",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) communication.",
      "paragraph": "Optimized library for nRF24L01(+) that is simple to use for beginners, but yet offers a lot for advanced users. It also has a lot of good examples how to use the library.",
      "website": "http://tmrh20.github.io/RF24/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TMRh20/RF24-1.1.5.zip",
      "archiveFileName": "RF24-1.1.5.zip",
      "size": 322315,
      "checksum": "SHA-256:7d3f55c32f934f9481220516e3085036dc5a395ec3dcf3c3869eed7c2db8a608"
    },
    {
      "name": "RF24",
      "version": "1.1.6",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "A library for NRF24L01(+) communication.",
      "paragraph": "Optimized library for nRF24L01(+) that is simple to use for beginners, but yet offers a lot for advanced users. It also has a lot of good examples how to use the library.",
      "website": "http://tmrh20.github.io/RF24/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TMRh20/RF24-1.1.6.zip",
      "archiveFileName": "RF24-1.1.6.zip",
      "size": 323161,
      "checksum": "SHA-256:b80cffc9f510f473bd82718539158922d53099620ce6c386c978113dbe55b35e"
    },
    {
      "name": "Automaton",
      "version": "0.1.0",
      "author": "Tinkerspy \u003ctinkerspy@myown.mailcan.com\u003e",
      "maintainer": "Tinkerspy \u003ctinkerspy@myown.mailcan.com\u003e",
      "sentence": "A multi tasking table driven finite state machine library",
      "paragraph": "An event driven framework that allows you to create Arduino applications that consist entirely of concurrently running state machines interacting with each other. Use the bundled machines or roll your own.",
      "website": "https://github.com/tinkerspy/Automaton/wiki",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/tinkerspy/Automaton-0.1.0.zip",
      "archiveFileName": "Automaton-0.1.0.zip",
      "size": 23310,
      "checksum": "SHA-256:ee3543af5a9c4b3f63b88df6311d8676d3cf60ee9f58d134fb3ba464dd9514cc"
    },
    {
      "name": "Automaton",
      "version": "0.1.1",
      "author": "Tinkerspy \u003ctinkerspy@myown.mailcan.com\u003e",
      "maintainer": "Tinkerspy \u003ctinkerspy@myown.mailcan.com\u003e",
      "sentence": "A multi tasking table driven finite state machine library",
      "paragraph": "An event driven framework that allows you to create Arduino applications that consist of concurrently running state machines interacting with each other. Use the bundled machines or create your own following the tutorial. Contains reusable bundled machines for handling leds (fade \u0026 blink), buttons, serial commands, analog input (with moving average), pulses and timers.",
      "website": "https://github.com/tinkerspy/Automaton/wiki",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/tinkerspy/Automaton-0.1.1.zip",
      "archiveFileName": "Automaton-0.1.1.zip",
      "size": 23355,
      "checksum": "SHA-256:f2f3b9057e697f2254ab6c1d3f858c671b341c378e567f31f246d8fb1c625b63"
    },
    {
      "name": "Automaton",
      "version": "0.1.2",
      "author": "Tinkerspy \u003ctinkerspy@myown.mailcan.com\u003e",
      "maintainer": "Tinkerspy \u003ctinkerspy@myown.mailcan.com\u003e",
      "sentence": "A multi tasking table driven finite state machine framework",
      "paragraph": "An event driven framework that allows you to create Arduino applications that consist of concurrently running state machines interacting with each other. Use the bundled machines or create your own following the tutorial. Contains reusable bundled machines for handling leds (fade \u0026 blink), buttons, serial commands, analog input (with moving average), pulses and timers.",
      "website": "https://github.com/tinkerspy/Automaton/wiki",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/tinkerspy/Automaton-0.1.2.zip",
      "archiveFileName": "Automaton-0.1.2.zip",
      "size": 24521,
      "checksum": "SHA-256:020811993752d07a1443de7f1793e2386ef6228edbb4532d1415d265dfa8c9a5"
    },
    {
      "name": "TMRpcm",
      "version": "1.0.0",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "PCM/WAV Audio playback",
      "paragraph": "Play WAV audio files from SD card using AVR (UNO,Nano,etc) based devices.",
      "website": "https://github.com/TMRh20/TMRpcm/wiki",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TMRh20/TMRpcm-1.0.0.zip",
      "archiveFileName": "TMRpcm-1.0.0.zip",
      "size": 31603,
      "checksum": "SHA-256:d5dec259f480f057454ed52ebfe63522bbb4383e826b78aa30d8eb83f32bfbc4"
    },
    {
      "name": "TaskScheduler",
      "version": "1.8.0",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino microcontrollers.",
      "paragraph": "Enables developers to achieve pseudo multi-tasking. The library is NOT pre-emptive, and as such requires cooperative programming to be used; does NOT use any of the timers therefore does not affect PWM pins. Includes support for status request objects, allowing tasks to wait on and signal event completion between each other.",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Schedulers",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/arkhipenko/TaskScheduler-1.8.0.zip",
      "archiveFileName": "TaskScheduler-1.8.0.zip",
      "size": 118028,
      "checksum": "SHA-256:1497a3cbc2e8987db2dea909ad95506a27a2fccc3e398d2f94438199fc811a23"
    },
    {
      "name": "TaskScheduler",
      "version": "1.8.1",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino microcontrollers.",
      "paragraph": "Enables developers to achieve pseudo multi-tasking. The library is NOT pre-emptive, and as such requires cooperative programming to be used; does NOT use any of the timers therefore does not affect PWM pins. Includes support for status request objects, allowing tasks to wait on and signal event completion between each other.",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Schedulers",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/arkhipenko/TaskScheduler-1.8.1.zip",
      "archiveFileName": "TaskScheduler-1.8.1.zip",
      "size": 124534,
      "checksum": "SHA-256:43d358936666a9049158bf411194a1ec8ec8e8eb74bb2620b861f01fc24d7965"
    },
    {
      "name": "TaskScheduler",
      "version": "1.8.2",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino microcontrollers.",
      "paragraph": "Supports: periodic task execution (with dynamic execution period in milliseconds – frequency of execution), number of iterations (limited or infinite number of iterations), execution of tasks in predefined sequence, dynamic change of task execution parameters (frequency, number of iterations, callback methods), power saving via entering IDLE sleep mode when tasks are not scheduled to run, support for event-driven task invocation via Status Request object, support for task IDs and Control Points for error handling and watchdog timer, support for Local Task Storage pointer (allowing use of same callback code for multiple tasks)",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/arkhipenko/TaskScheduler-1.8.2.zip",
      "archiveFileName": "TaskScheduler-1.8.2.zip",
      "size": 129148,
      "checksum": "SHA-256:344239d8cb9cb970c5487ef9e89184400bfa472c6f429be65f5132b325bb0508"
    },
    {
      "name": "TaskScheduler",
      "version": "1.8.3",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino microcontrollers.",
      "paragraph": "Supports: periodic task execution (with dynamic execution period in milliseconds – frequency of execution), number of iterations (limited or infinite number of iterations), execution of tasks in predefined sequence, dynamic change of task execution parameters (frequency, number of iterations, callback methods), power saving via entering IDLE sleep mode when tasks are not scheduled to run, support for event-driven task invocation via Status Request object, support for task IDs and Control Points for error handling and watchdog timer, support for Local Task Storage pointer (allowing use of same callback code for multiple tasks)",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/arkhipenko/TaskScheduler-1.8.3.zip",
      "archiveFileName": "TaskScheduler-1.8.3.zip",
      "size": 132708,
      "checksum": "SHA-256:4045ab16546d2a21d133dbc164552cd2227ddf84f47c1a4765eceed7071d9dd0"
    },
    {
      "name": "TaskScheduler",
      "version": "1.8.4",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino microcontrollers.",
      "paragraph": "Supports: periodic task execution (with dynamic execution period in milliseconds – frequency of execution), number of iterations (limited or infinite number of iterations), execution of tasks in predefined sequence, dynamic change of task execution parameters (frequency, number of iterations, callback methods), power saving via entering IDLE sleep mode when tasks are not scheduled to run, support for event-driven task invocation via Status Request object, support for task IDs and Control Points for error handling and watchdog timer, support for Local Task Storage pointer (allowing use of same callback code for multiple tasks)",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/arkhipenko/TaskScheduler-1.8.4.zip",
      "archiveFileName": "TaskScheduler-1.8.4.zip",
      "size": 140313,
      "checksum": "SHA-256:5b7ce028cc140329db9ea01c2737049b9bda71aaa3665f5dcc29668cc1310521"
    },
    {
      "name": "TaskScheduler",
      "version": "1.8.5",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino microcontrollers.",
      "paragraph": "Supports: periodic task execution (with dynamic execution period in milliseconds – frequency of execution), number of iterations (limited or infinite number of iterations), execution of tasks in predefined sequence, dynamic change of task execution parameters (frequency, number of iterations, callback methods), power saving via entering IDLE sleep mode when tasks are not scheduled to run, support for event-driven task invocation via Status Request object, support for task IDs and Control Points for error handling and watchdog timer, support for Local Task Storage pointer (allowing use of same callback code for multiple tasks)",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/arkhipenko/TaskScheduler-1.8.5.zip",
      "archiveFileName": "TaskScheduler-1.8.5.zip",
      "size": 142832,
      "checksum": "SHA-256:e00c6e91a6e83bc0911cef3a1e9aeaec10d7a19fbd63385ac141fbb8bb6e8ab1"
    },
    {
      "name": "TaskScheduler",
      "version": "1.9.0",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino microcontrollers.",
      "paragraph": "Supports: periodic task execution (with dynamic execution period in milliseconds – frequency of execution), number of iterations (limited or infinite number of iterations), execution of tasks in predefined sequence, dynamic change of task execution parameters (frequency, number of iterations, callback methods), power saving via entering IDLE sleep mode when tasks are not scheduled to run, support for event-driven task invocation via Status Request object, support for task IDs and Control Points for error handling and watchdog timer, support for Local Task Storage pointer (allowing use of same callback code for multiple tasks)",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/arkhipenko/TaskScheduler-1.9.0.zip",
      "archiveFileName": "TaskScheduler-1.9.0.zip",
      "size": 143060,
      "checksum": "SHA-256:febf43d063ffcc6e70f591b9ba267af1dc337046278e4d7590918d7d1f130409"
    },
    {
      "name": "TaskScheduler",
      "version": "2.0.0",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino microcontrollers.",
      "paragraph": "Supports: periodic task execution (with dynamic execution period in milliseconds – frequency of execution), number of iterations (limited or infinite number of iterations), execution of tasks in predefined sequence, dynamic change of task execution parameters (frequency, number of iterations, callback methods), power saving via entering IDLE sleep mode when tasks are not scheduled to run, event-driven task invocation via Status Request object, task IDs and Control Points for error handling and watchdog timer, Local Task Storage pointer (allowing use of same callback code for multiple tasks), layered task prioritization.",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/arkhipenko/TaskScheduler-2.0.0.zip",
      "archiveFileName": "TaskScheduler-2.0.0.zip",
      "size": 155038,
      "checksum": "SHA-256:12f0731961e5e05f7165388ff8c49f492c97766f0b62c52cdf789e60bcbf2c83"
    },
    {
      "name": "TaskScheduler",
      "version": "2.0.1",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino microcontrollers.",
      "paragraph": "Supports: periodic task execution (with dynamic execution period in milliseconds – frequency of execution), number of iterations (limited or infinite number of iterations), execution of tasks in predefined sequence, dynamic change of task execution parameters (frequency, number of iterations, callback methods), power saving via entering IDLE sleep mode when tasks are not scheduled to run, event-driven task invocation via Status Request object, task IDs and Control Points for error handling and watchdog timer, Local Task Storage pointer (allowing use of same callback code for multiple tasks), layered task prioritization.",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/arkhipenko/TaskScheduler-2.0.1.zip",
      "archiveFileName": "TaskScheduler-2.0.1.zip",
      "size": 155211,
      "checksum": "SHA-256:887f66582b5e8c011ef2a48f1de787f86000b49b19f5bc43df741fe2ddd5b92f"
    },
    {
      "name": "TaskScheduler",
      "version": "2.1.0",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "A light-weight cooperative multitasking library for arduino microcontrollers.",
      "paragraph": "Supports: periodic task execution (with dynamic execution period in milliseconds or microseconds – frequency of execution), number of iterations (limited or infinite number of iterations), execution of tasks in predefined sequence, dynamic change of task execution parameters (frequency, number of iterations, callback methods), power saving via entering IDLE sleep mode when tasks are not scheduled to run, event-driven task invocation via Status Request object, task IDs and Control Points for error handling and watchdog timer, Local Task Storage pointer (allowing use of same callback code for multiple tasks), layered task prioritization.",
      "website": "https://github.com/arkhipenko/TaskScheduler.git",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/arkhipenko/TaskScheduler-2.1.0.zip",
      "archiveFileName": "TaskScheduler-2.1.0.zip",
      "size": 212698,
      "checksum": "SHA-256:ac2f54af4c49a7fe8aae9ea4b505660b91ecbb138d1f65f7e3d87dc3ba2150ad"
    },
    {
      "name": "FastLED",
      "version": "3.1.0",
      "author": "Daniel Garcia",
      "maintainer": "Daniel Garcia \u003cdgarcia@fastled.io\u003e",
      "sentence": "Multi-platform library for controlling dozens of different types of LEDs along with optimized math, effect, and noise functions.",
      "paragraph": "Multi-platform library for controlling dozens of different types of LEDs along with optimized math, effect, and noise functions.",
      "website": "https://github.com/FastLED/FastLED",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/FastLED/FastLED-3.1.0.zip",
      "archiveFileName": "FastLED-3.1.0.zip",
      "size": 269182,
      "checksum": "SHA-256:5044fe91cfc6abecdba6e23d062121f42a2ffdf1db4e248e59cda1f098236013"
    },
    {
      "name": "Sodaq_RN2483",
      "version": "1.0.0",
      "author": "Alex Tsamakos,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@m2m4all.com\u003e",
      "sentence": "An Arduino library for the Microchip RN2483.",
      "paragraph": "It supports sending and receiving payloads as a Class A LoRaWAN device.",
      "website": "https://github.com/SodaqMoja/Sodaq_RN2483",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/SodaqMoja/Sodaq_RN2483-1.0.0.zip",
      "archiveFileName": "Sodaq_RN2483-1.0.0.zip",
      "size": 16028,
      "checksum": "SHA-256:a6d9a9870544558cd2b69f81b53f47ab49c79200c186126ac7f554639b04a3c2"
    },
    {
      "name": "ClosedCube SHT3X Analog",
      "version": "1.0.1",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Sensirion SHT3X-ARP Analog Temperature \u0026 Humidity Sensors",
      "paragraph": "Arduino library for Sensirion SHT3X-ARP Analog Temperature \u0026 Humidity Sensors",
      "website": "https://github.com/closedcube/ClosedCube_SHT3XA_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/closedcube/ClosedCube_SHT3X_Analog-1.0.1.zip",
      "archiveFileName": "ClosedCube_SHT3X_Analog-1.0.1.zip",
      "size": 4758,
      "checksum": "SHA-256:795de4aa7341959d784a65b68e7eebaf11a2a263e33e971a659000d5ee046402"
    },
    {
      "name": "AsyncDelay",
      "version": "1.0.0",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Simple abstraction library implementing delays and timeouts.",
      "paragraph": "Implements delays and timeouts. Uses millis() and micros(), taking care of any rollovers should they occur. GNU LGPL v2.1",
      "website": "https://github.com/stevemarple/AsyncDelay",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/stevemarple/AsyncDelay-1.0.0.zip",
      "archiveFileName": "AsyncDelay-1.0.0.zip",
      "size": 10928,
      "checksum": "SHA-256:33303dfbfbe51ea95becb3ceb3acea10853bb4674c9aa66941fa2ed84cba0be5"
    },
    {
      "name": "AsyncDelay",
      "version": "1.0.1",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Simple abstraction library implementing delays and timeouts.",
      "paragraph": "Implements delays and timeouts. Uses millis() and micros(), taking care of any rollovers should they occur. GNU LGPL v2.1",
      "website": "https://github.com/stevemarple/AsyncDelay",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/stevemarple/AsyncDelay-1.0.1.zip",
      "archiveFileName": "AsyncDelay-1.0.1.zip",
      "size": 11266,
      "checksum": "SHA-256:5a0bef0f0f7388b7bbf4236a0d1a4b3103d19533ff1e108a25b91f460386dbbd"
    },
    {
      "name": "AsyncDelay",
      "version": "1.0.2",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Simple abstraction library implementing delays and timeouts.",
      "paragraph": "Implements delays and timeouts. Uses millis() and micros(), taking care of any rollovers should they occur. GNU LGPL v2.1",
      "website": "https://github.com/stevemarple/AsyncDelay",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/stevemarple/AsyncDelay-1.0.2.zip",
      "archiveFileName": "AsyncDelay-1.0.2.zip",
      "size": 11266,
      "checksum": "SHA-256:36b9625bdb31041e41974238bd5ac61b0b6abdf4b8f7ef9f2ddca142983f258c"
    },
    {
      "name": "ClosedCube SHT3X Digital",
      "version": "1.0.1",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Sensirion SHT3X-DIS Digital Temperature \u0026 Humidity Sensors",
      "paragraph": "Arduino library for Sensirion SHT3X-DIS Digital Temperature \u0026 Humidity Sensors",
      "website": "https://github.com/closedcube/ClosedCube_SHT3XD_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/closedcube/ClosedCube_SHT3X_Digital-1.0.1.zip",
      "archiveFileName": "ClosedCube_SHT3X_Digital-1.0.1.zip",
      "size": 9405,
      "checksum": "SHA-256:843a8cf389417221fda9988098bd9889acd395638f0d475ed7cb73d02a5f599f"
    },
    {
      "name": "ClosedCube SHT3X Digital",
      "version": "1.1.1",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Sensirion SHT3X-DIS Digital Temperature \u0026 Humidity Sensors",
      "paragraph": "Arduino library for Sensirion SHT3X-DIS Digital Temperature \u0026 Humidity Sensors",
      "website": "https://github.com/closedcube/ClosedCube_SHT3XD_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/closedcube/ClosedCube_SHT3X_Digital-1.1.1.zip",
      "archiveFileName": "ClosedCube_SHT3X_Digital-1.1.1.zip",
      "size": 10094,
      "checksum": "SHA-256:e7c1a48b49460faf2ce107dbbe82608fe7e169c4b3e1d0cdefe987064b395202"
    },
    {
      "name": "SoftWire",
      "version": "1.0.1",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Software I2C library.",
      "paragraph": "SoftWire is a software I2C implementation for Arduino and other Wiring-type environments. It utilises the pinMode(), digitalWrite() and digitalRead() functions. The pins to be used for the serial data (SDA) and serial clock (SCL) control lines can be defined at run-time. Alternatively it is possible to pass references to functions which read and control the SDA and SCL lines, thereby allowing direct port manipulation to be used if preferred. Multiple objects (for multiple software I2C buses) and clock-stretching by slave devices are supported. A timeout feature is included to prevent lockups by faulty or missing hardware. The microcontroller must function as the master device, multiple masters are not supported.",
      "website": "https://github.com/stevemarple/SoftWire",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/stevemarple/SoftWire-1.0.1.zip",
      "archiveFileName": "SoftWire-1.0.1.zip",
      "size": 15445,
      "checksum": "SHA-256:b18d2d198e81e936921f6f076354e127f93f879bee63797787111387b8f1d6cb"
    },
    {
      "name": "SoftWire",
      "version": "1.0.2",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Software I2C library.",
      "paragraph": "SoftWire is a software I2C implementation for Arduino and other Wiring-type environments. It utilises the pinMode(), digitalWrite() and digitalRead() functions. The pins to be used for the serial data (SDA) and serial clock (SCL) control lines can be defined at run-time. Alternatively it is possible to pass references to functions which read and control the SDA and SCL lines, thereby allowing direct port manipulation to be used if preferred. Multiple objects (for multiple software I2C buses) and clock-stretching by slave devices are supported. A timeout feature is included to prevent lockups by faulty or missing hardware. The microcontroller must function as the master device, multiple masters are not supported. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/SoftWire",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/stevemarple/SoftWire-1.0.2.zip",
      "archiveFileName": "SoftWire-1.0.2.zip",
      "size": 15459,
      "checksum": "SHA-256:f718608b3774c21eedf4d6e53076fe043a4d464ac1d6042e86648a50fd5d4834"
    },
    {
      "name": "SoftWire",
      "version": "1.0.3",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Software I2C library.",
      "paragraph": "SoftWire is a software I2C implementation for Arduino and other Wiring-type environments. It utilises the pinMode(), digitalWrite() and digitalRead() functions. The pins to be used for the serial data (SDA) and serial clock (SCL) control lines can be defined at run-time. Alternatively it is possible to pass references to functions which read and control the SDA and SCL lines, thereby allowing direct port manipulation to be used if preferred. Multiple objects (for multiple software I2C buses) and clock-stretching by slave devices are supported. A timeout feature is included to prevent lockups by faulty or missing hardware. The microcontroller must function as the master device, multiple masters are not supported. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/SoftWire",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/stevemarple/SoftWire-1.0.3.zip",
      "archiveFileName": "SoftWire-1.0.3.zip",
      "size": 15460,
      "checksum": "SHA-256:04de54bc5b1df68b64ad84f292cc9e0abca654878bc983f0a465c5bc2523a1b5"
    },
    {
      "name": "RTCx",
      "version": "1.0.0",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to access DS1307, DS1337, DS1338 and MCP7941x real-time clocks.",
      "paragraph": "Read, set and configure DS1307 and similar real-time clocks. Time/date is available as a standard tm struct. Unix timestamps (seconds since 1970) can also be computed. Can autoprobe to find device address on the I2C bus.",
      "website": "https://github.com/stevemarple/AsyncDelay",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/stevemarple/RTCx-1.0.0.zip",
      "archiveFileName": "RTCx-1.0.0.zip",
      "size": 17501,
      "checksum": "SHA-256:c003a6f62b06ff2003d6cddacfbffeb6de423909909760284378c959326a40c8"
    },
    {
      "name": "RTCx",
      "version": "1.0.1",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to access DS1307, DS1337, DS1338 and MCP7941x real-time clocks.",
      "paragraph": "Read, set and configure DS1307 and similar real-time clocks. Time/date is available as a standard tm struct. Unix timestamps (seconds since 1970) can also be computed. Can autoprobe to find device address on the I2C bus. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/RTCx",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/stevemarple/RTCx-1.0.1.zip",
      "archiveFileName": "RTCx-1.0.1.zip",
      "size": 17509,
      "checksum": "SHA-256:097adc63b7973a4840ed04d15f41d65711c95468094de642ed4ec92cdd0a251d"
    },
    {
      "name": "RTCx",
      "version": "1.0.2",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to access DS1307, DS1337, DS1338 and MCP7941x real-time clocks.",
      "paragraph": "Read, set and configure DS1307 and similar real-time clocks. Time/date is available as a standard tm struct. Unix timestamps (seconds since 1970) can also be computed. Can autoprobe to find device address on the I2C bus. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/RTCx",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/stevemarple/RTCx-1.0.2.zip",
      "archiveFileName": "RTCx-1.0.2.zip",
      "size": 17587,
      "checksum": "SHA-256:6e5db100ec151c3b959f1556b8b0a9048b13254d37e6e1ae730deee00d4e41a7"
    },
    {
      "name": "RTCx",
      "version": "1.0.3",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to access DS1307, DS1337, DS1338 and MCP7941x real-time clocks.",
      "paragraph": "Read, set and configure DS1307 and similar real-time clocks. Time/date is available as a standard tm struct. Unix timestamps (seconds since 1970) can also be computed. Can autoprobe to find device address on the I2C bus. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/RTCx",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/stevemarple/RTCx-1.0.3.zip",
      "archiveFileName": "RTCx-1.0.3.zip",
      "size": 17582,
      "checksum": "SHA-256:6722e777eec2adc6e53c015c9246cea56b537ed47e4c7193b633d5413536b120"
    },
    {
      "name": "MCP342x",
      "version": "1.0.0",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to support Microchip ADC342x analogue to digital converters.",
      "paragraph": "Supports Microchip MCP3422/MCP3423/MCP3424/MCP3426/MCP3427/MCP3428 analogue to digital converters. Can autoprobe to find device address on the I2C bus. The library can use the I2C GeneralCallConversion command to instruct multiple devices to sample simultaneously.",
      "website": "https://github.com/stevemarple/AsyncDelay",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/stevemarple/MCP342x-1.0.0.zip",
      "archiveFileName": "MCP342x-1.0.0.zip",
      "size": 18110,
      "checksum": "SHA-256:39bb3bbbbdc5f1dc2d8df7de9cf97db7d2bd0f5cb9a298de1402003f304ee0f4"
    },
    {
      "name": "MCP342x",
      "version": "1.0.1",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to support Microchip ADC342x analogue to digital converters.",
      "paragraph": "Supports Microchip MCP3422/MCP3423/MCP3424/MCP3426/MCP3427/MCP3428 analogue to digital converters. Can autoprobe to find device address on the I2C bus. The library can use the I2C GeneralCallConversion command to instruct multiple devices to sample simultaneously.",
      "website": "https://github.com/stevemarple/MCP342x",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/stevemarple/MCP342x-1.0.1.zip",
      "archiveFileName": "MCP342x-1.0.1.zip",
      "size": 18104,
      "checksum": "SHA-256:83d407a41c6b74625e4a5ed9424ab092be29aa92e246e549ccba62affb897818"
    },
    {
      "name": "MCP342x",
      "version": "1.0.2",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to support Microchip ADC342x analogue to digital converters.",
      "paragraph": "Supports Microchip MCP3422/MCP3423/MCP3424/MCP3426/MCP3427/MCP3428 analogue to digital converters. Can autoprobe to find device address on the I2C bus. The library can use the I2C GeneralCallConversion command to instruct multiple devices to sample simultaneously. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/MCP342x",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/stevemarple/MCP342x-1.0.2.zip",
      "archiveFileName": "MCP342x-1.0.2.zip",
      "size": 18118,
      "checksum": "SHA-256:860fa06d49fcaa2749f938e9d07f9691f2be1053a3c93a11f265bd52fec604e9"
    },
    {
      "name": "MicroNMEA",
      "version": "1.0.0",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Compact Arduino library to parse NMEA sentences.",
      "paragraph": "MicroNMEA is a compact Arduino library to parse a subset of NMEA sentences, which can originate from either GPS or GNSS receivers. Only two types of messages are parsed, $GPGGA (and its GNSS versions $GNGGA, $GLGGA, and $GAGGA) and $GPRMC (and its GNSS versions $GNRMC, $GLRMC, and $GARMC). From these two NMEA sentences MicroNMEA can output date, time, latitude, longitude, altitude, number of satellites used, horizontal dilution of precision (HDOP), course and speed. When other NMEA sentences are detected they can be passed to an optional callback function for decoding or logging. Checksum failures can be indicated with another optional callback function.",
      "website": "https://github.com/stevemarple/MicroNMEA",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/stevemarple/MicroNMEA-1.0.0.zip",
      "archiveFileName": "MicroNMEA-1.0.0.zip",
      "size": 22411,
      "checksum": "SHA-256:b1a27eba63d986444a950408a16d892ab7ee4083e95e861e41c7f08c01c79bc4"
    },
    {
      "name": "MicroNMEA",
      "version": "1.0.1",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Compact Arduino library to parse NMEA sentences.",
      "paragraph": "MicroNMEA is a compact Arduino library to parse a subset of NMEA sentences, which can originate from either GPS or GNSS receivers. Only two types of messages are parsed, $GPGGA (and its GNSS versions $GNGGA, $GLGGA, and $GAGGA) and $GPRMC (and its GNSS versions $GNRMC, $GLRMC, and $GARMC). From these two NMEA sentences MicroNMEA can output date, time, latitude, longitude, altitude, number of satellites used, horizontal dilution of precision (HDOP), course and speed. When other NMEA sentences are detected they can be passed to an optional callback function for decoding or logging. Checksum failures can be indicated with another optional callback function. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/MicroNMEA",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/stevemarple/MicroNMEA-1.0.1.zip",
      "archiveFileName": "MicroNMEA-1.0.1.zip",
      "size": 22423,
      "checksum": "SHA-256:6442ecc80bdeb0cfc8bbe9b2a9c07778b1ef79b8bf369304c24e3d88beac0288"
    },
    {
      "name": "HIH61xx",
      "version": "1.0.0",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to access Honeywell HIH61xx humidity and tmperature sensors.",
      "paragraph": "HIH61xx is a library for accessing the humidity and temperature data from the I2C range of Honeywell HIH61xx humidity sensors (HIH6120-021, HIH6121-021, HIH6130-021 and HIH6131-021). Software I2C is used to allow this sensor to be connected to any two digital pins. An optional power pin can be used to control power to the device. A state machine ensures the relevant timing constraints are observed.",
      "website": "https://github.com/stevemarple/HIH61xx",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/stevemarple/HIH61xx-1.0.0.zip",
      "archiveFileName": "HIH61xx-1.0.0.zip",
      "size": 12613,
      "checksum": "SHA-256:4d493834973ca85606b8dd0971e5127b2eff1de16da261fb3b12b9ad249674ce"
    },
    {
      "name": "HIH61xx",
      "version": "1.0.1",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to access Honeywell HIH61xx humidity and temperature sensors.",
      "paragraph": "HIH61xx is a library for accessing the humidity and temperature data from the I2C range of Honeywell HIH61xx humidity sensors (HIH6120-021, HIH6121-021, HIH6130-021 and HIH6131-021). Software I2C is used to allow this sensor to be connected to any two digital pins. An optional power pin can be used to control power to the device. A state machine ensures the relevant timing constraints are observed. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/HIH61xx",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/stevemarple/HIH61xx-1.0.1.zip",
      "archiveFileName": "HIH61xx-1.0.1.zip",
      "size": 12626,
      "checksum": "SHA-256:cd995caff4e95a44be0354b306e0212e52db9706cedc3b75df887fd52f59e4d7"
    },
    {
      "name": "MLX90614",
      "version": "0.1.1",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to support Melexis MLX90614 infrared thermometer",
      "paragraph": "Arduino library to support Austrian Microsystems AS3935 lightning sensor using the I2C interface. For I2C support the SoftWire software bit-banging Arduino library is used. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/AS3935",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/stevemarple/MLX90614-0.1.1.zip",
      "archiveFileName": "MLX90614-0.1.1.zip",
      "size": 13297,
      "checksum": "SHA-256:7b117e6219d0e1bc1b62a08c8862748bc70ca45442a03f3119a2af903d6548a6"
    },
    {
      "name": "MLX90614",
      "version": "0.1.2",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to support Melexis MLX90614 infrared thermometer",
      "paragraph": "Arduino library to support Austrian Microsystems AS3935 lightning sensor using the I2C interface. For I2C support the SoftWire software bit-banging Arduino library is used. GNU LGPL v2.1.",
      "website": "https://github.com/stevemarple/MLX90614",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/stevemarple/MLX90614-0.1.2.zip",
      "archiveFileName": "MLX90614-0.1.2.zip",
      "size": 13297,
      "checksum": "SHA-256:21759b8f55b576fad80f779c7fcb646a8e419fd94f9aeffc0deca8d27f77928b"
    },
    {
      "name": "AS3935",
      "version": "1.0.0",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to support Austrian Microsystems AS3935 lightning sensor.",
      "paragraph": "Arduino library to support Austrian Microsystems AS3935 lightning sensor using the I2C interface. For I2C support the SoftWire software bit-banging Arduino library is used. GNU LGPL v2.1",
      "website": "https://github.com/stevemarple/AS3935",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/stevemarple/AS3935-1.0.0.zip",
      "archiveFileName": "AS3935-1.0.0.zip",
      "size": 16770,
      "checksum": "SHA-256:ad5dc91aa4a79077c116b43ed4b6ae8051af0700d3c6b7fbdb661f1c44faa7f0"
    },
    {
      "name": "AS3935",
      "version": "1.0.1",
      "author": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "maintainer": "Steve Marple \u003cstevemarple@googlemail.com\u003e",
      "sentence": "Library to support Austrian Microsystems AS3935 lightning sensor.",
      "paragraph": "Arduino library to support Austrian Microsystems AS3935 lightning sensor using the I2C interface. For I2C support the SoftWire software bit-banging Arduino library is used. GNU LGPL v2.1",
      "website": "https://github.com/stevemarple/AS3935",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/stevemarple/AS3935-1.0.1.zip",
      "archiveFileName": "AS3935-1.0.1.zip",
      "size": 16767,
      "checksum": "SHA-256:d3ec34a888fc8030e0e499f833a16b324b4ff4d7bf3e7ccb2bb56798941962ed"
    },
    {
      "name": "RBD_Capacitance",
      "version": "1.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Detect changes in capacitance.",
      "paragraph": "Determine change in relative capacitance to detect human presence or water level.",
      "website": "https://github.com/alextaujenis/RBD_Capacitance",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Capacitance-1.0.0.zip",
      "archiveFileName": "RBD_Capacitance-1.0.0.zip",
      "size": 12501,
      "checksum": "SHA-256:70ba9d8332436aa61b55a33dfef2bbe8219168abb542dcec2b12fbd18bd9dfa7"
    },
    {
      "name": "RBD_Capacitance",
      "version": "1.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Measure change in capacitance.",
      "paragraph": "Measure change in capacitance without delay to detect human presence or water level.",
      "website": "https://github.com/alextaujenis/RBD_Capacitance",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Capacitance-1.0.1.zip",
      "archiveFileName": "RBD_Capacitance-1.0.1.zip",
      "size": 8310,
      "checksum": "SHA-256:237bcd27625dba7d628a2493a2c199d687a594443e2589f6fa1cf27ab3ee9bce"
    },
    {
      "name": "RBD_Capacitance",
      "version": "1.0.2",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Measure change in capacitance.",
      "paragraph": "Measure change in capacitance without delay to detect human presence or water level.",
      "website": "https://github.com/alextaujenis/RBD_Capacitance",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Capacitance-1.0.2.zip",
      "archiveFileName": "RBD_Capacitance-1.0.2.zip",
      "size": 8222,
      "checksum": "SHA-256:d6c1bdebae0de1ae1ea4189ccf13f3c323ac906e1c9309300ecac22ace561618"
    },
    {
      "name": "RBD_Capacitance",
      "version": "1.0.3",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Measure change in capacitance.",
      "paragraph": "Detect human presence and touch from behind several millimeters of material, or detect change in water levels from the outside of a plastic container. This library is meant to help determine change in relative capacitance for the reasons above, and not for calculating exact capacitance. Relative capacitance is found by measuring how long it takes for an Arduino send-pin to charge a receive-pin to HIGH (in microseconds).",
      "website": "https://github.com/alextaujenis/RBD_Capacitance",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Capacitance-1.0.3.zip",
      "archiveFileName": "RBD_Capacitance-1.0.3.zip",
      "size": 8866,
      "checksum": "SHA-256:7772cbb1ba9dee874c96cc7883dcf366cfd27adaaf44f7dad7111e6e245aef12"
    },
    {
      "name": "RBD_Capacitance",
      "version": "1.0.4",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Measure change in capacitance.",
      "paragraph": "Detect human presence and touch from behind several millimeters of material, or detect change in water levels from the outside of a plastic container. This library is meant to help determine change in relative capacitance for the reasons above, and not for calculating exact capacitance. Relative capacitance is found by measuring how long it takes for an Arduino send-pin to charge a receive-pin to HIGH (in microseconds).",
      "website": "https://github.com/alextaujenis/RBD_Capacitance",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Capacitance-1.0.4.zip",
      "archiveFileName": "RBD_Capacitance-1.0.4.zip",
      "size": 8733,
      "checksum": "SHA-256:8485741eedb42eeabb9c12ee62a5e5d674626a53cd6048fe2fb3d16bf0f6c643"
    },
    {
      "name": "CMMC WiFi Connector",
      "version": "2.0.1",
      "author": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "sentence": "A WiFi Connect Helper (formerly known as WiFi Connector)",
      "paragraph": "An opensource library that makes coding with wifi easier and more happy. Made with love by CMMC",
      "website": "https://github.com/cmmakerclub/WiFiConnector",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/cmmakerclub/CMMC_WiFi_Connector-2.0.1.zip",
      "archiveFileName": "CMMC_WiFi_Connector-2.0.1.zip",
      "size": 335069,
      "checksum": "SHA-256:716fd8f415eaef923dcabf8819d0cd03fd98e433e256a9216aef05f659ed9d92"
    },
    {
      "name": "CMMC WiFi Connector",
      "version": "2.0.2",
      "author": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan \u003cnat.wrw@gmail.com\u003e",
      "sentence": "A WiFi Connect Helper (formerly known as WiFi Connector)",
      "paragraph": "An opensource library that makes coding with wifi easier and more happy. Made with love by CMMC",
      "website": "https://github.com/cmmakerclub/WiFiConnector",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/cmmakerclub/CMMC_WiFi_Connector-2.0.2.zip",
      "archiveFileName": "CMMC_WiFi_Connector-2.0.2.zip",
      "size": 334407,
      "checksum": "SHA-256:8ebc9e48da100390fcb4f520028b87005067ffa18023111329c29d23eeb302bf"
    },
    {
      "name": "PciManager",
      "version": "2.0.0",
      "author": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "maintainer": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "sentence": "This library helps you manage Pin Change Interrupts: subscribe and receive change events.",
      "paragraph": "With PciManager Arduino library you can manage the Pin Change Interrupt of the microcontroller. You can register listeners in the PciManager for a change of a pin. The manager handles the interrupt and calls the listeners.",
      "website": "https://github.com/prampec/arduino-pcimanager",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/prampec/PciManager-2.0.0.zip",
      "archiveFileName": "PciManager-2.0.0.zip",
      "size": 19949,
      "checksum": "SHA-256:de37ee1eb1498bf53ac818e08ec472d9bc0b302a085c297e17331d2abb9eacfb"
    },
    {
      "name": "PciManager",
      "version": "2.1.0",
      "author": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "maintainer": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "sentence": "This library helps you manage Pin Change Interrupts: subscribe and receive change events.",
      "paragraph": "With PciManager Arduino library you can manage the Pin Change Interrupt of the microcontroller. You can register listeners in the PciManager for a change of a pin. The manager handles the interrupt and calls the listeners.",
      "website": "https://github.com/prampec/arduino-pcimanager",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/prampec/PciManager-2.1.0.zip",
      "archiveFileName": "PciManager-2.1.0.zip",
      "size": 22979,
      "checksum": "SHA-256:59c8cb3fb4329733ef85367bf2d158595ac3cbff295da1383b495ec2d02e326a"
    },
    {
      "name": "RBD_HumanSensor",
      "version": "1.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Detect human proximity, touch, and pickup events in real-time.",
      "paragraph": "Determine change in relative capacitance to detect human presence, touch, and pickup events in real-time with no delay.",
      "website": "https://github.com/alextaujenis/RBD_HumanSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_HumanSensor-1.0.0.zip",
      "archiveFileName": "RBD_HumanSensor-1.0.0.zip",
      "size": 13169,
      "checksum": "SHA-256:b5a966d78c7f69f693b75e378bde76b04ed39a05de2c75563a641f750cff53d3"
    },
    {
      "name": "RBD_HumanSensor",
      "version": "1.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Detect human presence, touch, and pickup events.",
      "paragraph": "Measure change in capacitance to detect human presence, touch, and pickup events without delay.",
      "website": "https://github.com/alextaujenis/RBD_HumanSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_HumanSensor-1.0.1.zip",
      "archiveFileName": "RBD_HumanSensor-1.0.1.zip",
      "size": 8510,
      "checksum": "SHA-256:dc83b7ffab2209a8bb7e7fd23e10e23cf26082a4de2cb917e4e89180f9082a94"
    },
    {
      "name": "RBD_HumanSensor",
      "version": "1.0.2",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Detect human presence, touch, and pickup events.",
      "paragraph": "Measure change in capacitance to detect human presence, touch, and pickup events without delay.",
      "website": "https://github.com/alextaujenis/RBD_HumanSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_HumanSensor-1.0.2.zip",
      "archiveFileName": "RBD_HumanSensor-1.0.2.zip",
      "size": 8342,
      "checksum": "SHA-256:0e2bfdccb4ddf863d0b813dc2187729040c7a259e5cd085fa231e8ed881cb470"
    },
    {
      "name": "RBD_HumanSensor",
      "version": "1.0.3",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Detect human presence, touch, and pickup events.",
      "paragraph": "Measure change in capacitance to detect human presence, touch, and pickup events without delay or interrupts.",
      "website": "https://github.com/alextaujenis/RBD_HumanSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_HumanSensor-1.0.3.zip",
      "archiveFileName": "RBD_HumanSensor-1.0.3.zip",
      "size": 8333,
      "checksum": "SHA-256:925a2ab84b9fbbb09e8a1a52ea83351a9ecc7599e2a497c1cf772711002536ab"
    },
    {
      "name": "RBD_HumanSensor",
      "version": "1.0.4",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Detect human presence, touch, and pickup events.",
      "paragraph": "Measure change in capacitance to detect human presence, touch, and pickup events without delay or interrupts.",
      "website": "https://github.com/alextaujenis/RBD_HumanSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_HumanSensor-1.0.4.zip",
      "archiveFileName": "RBD_HumanSensor-1.0.4.zip",
      "size": 3846,
      "checksum": "SHA-256:3c9b74a64f3c824a4f4cbcf622be0d2bdc95169944e6c2a9148f24aa6209cdde"
    },
    {
      "name": "MQTT Connector",
      "version": "0.19.0",
      "author": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "sentence": "MQTT Connector library",
      "paragraph": "an ESP8266 MQTT Connector library. made with love by CMMC",
      "website": "https://www.cmmakerclub.com",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/cmmakerclub/MQTT_Connector-0.19.0.zip",
      "archiveFileName": "MQTT_Connector-0.19.0.zip",
      "size": 22311,
      "checksum": "SHA-256:3356cde17e3e7c04eb91cb3453b88c9425d73fbbf7d03f29530e23a3c1607770"
    },
    {
      "name": "MQTT Connector",
      "version": "0.24.0",
      "author": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "sentence": "**Deprecated** Use **CMMC MQTT Connector** instead.",
      "paragraph": "Use _CMMC MQTT Connector_ instead.",
      "website": "https://www.cmmakerclub.com",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/cmmakerclub/MQTT_Connector-0.24.0.zip",
      "archiveFileName": "MQTT_Connector-0.24.0.zip",
      "size": 27284,
      "checksum": "SHA-256:0a8722b72320efd09c78e1c95dfe04a85c7efe9620da03129445b3ad5ec2c2d5"
    },
    {
      "name": "MQTT Connector",
      "version": "0.25.0",
      "author": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "sentence": "**Deprecated** Use __CMMC MQTT Connector__ instead.",
      "paragraph": "Use _CMMC MQTT Connector_ instead.",
      "website": "https://www.cmmakerclub.com",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/cmmakerclub/MQTT_Connector-0.25.0.zip",
      "archiveFileName": "MQTT_Connector-0.25.0.zip",
      "size": 27284,
      "checksum": "SHA-256:6046bd7d594bf9087be1ef0a41b06f25446d648a6b86128368398a1e668cce7d"
    },
    {
      "name": "CMMC MQTT Connector",
      "version": "0.23.0",
      "author": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "sentence": "MQTT Connector library",
      "paragraph": "an ESP8266 MQTT Connector library. made with love by CMMC",
      "website": "https://www.cmmakerclub.com",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/cmmakerclub/CMMC_MQTT_Connector-0.23.0.zip",
      "archiveFileName": "CMMC_MQTT_Connector-0.23.0.zip",
      "size": 27514,
      "checksum": "SHA-256:c355baf071b4dda8fbe175f7da1f141b58aeea115fac397aabd1b61d375d6eff"
    },
    {
      "name": "CMMC MQTT Connector",
      "version": "0.27.0",
      "author": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "sentence": "MQTT Connector library",
      "paragraph": "an ESP8266 MQTT Connector library. made with love by CMMC",
      "website": "https://www.cmmakerclub.com",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/cmmakerclub/CMMC_MQTT_Connector-0.27.0.zip",
      "archiveFileName": "CMMC_MQTT_Connector-0.27.0.zip",
      "size": 27514,
      "checksum": "SHA-256:a7ae40a925b1cd9d8a5769f194dafb837c205197bb4d036f3314ebe9dd50e1a9"
    },
    {
      "name": "CMMC MQTT Connector",
      "version": "0.28.0",
      "author": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "sentence": "MQTT Connector library",
      "paragraph": "an ESP8266 MQTT Connector library. made with love by CMMC",
      "website": "https://www.cmmakerclub.com",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/cmmakerclub/CMMC_MQTT_Connector-0.28.0.zip",
      "archiveFileName": "CMMC_MQTT_Connector-0.28.0.zip",
      "size": 27266,
      "checksum": "SHA-256:7403a0134630bfbd92fe9330f9c5ad3ea4a7e6940bc1b14aba4fc02e7f64e5d7"
    },
    {
      "name": "CMMC MQTT Connector",
      "version": "0.29.0",
      "author": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "sentence": "MQTT Connector library",
      "paragraph": "an ESP8266 MQTT Connector library. made with love by CMMC",
      "website": "https://www.cmmakerclub.com",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/cmmakerclub/CMMC_MQTT_Connector-0.29.0.zip",
      "archiveFileName": "CMMC_MQTT_Connector-0.29.0.zip",
      "size": 27583,
      "checksum": "SHA-256:bae8f245406c80dc87ee125c33adaff64e32ef636354672cadde09d1b6260467"
    },
    {
      "name": "CMMC MQTT Connector",
      "version": "0.30.0",
      "author": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "sentence": "MQTT Connector library",
      "paragraph": "an ESP8266 MQTT Connector library. made with love by CMMC",
      "website": "https://www.cmmakerclub.com",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/cmmakerclub/CMMC_MQTT_Connector-0.30.0.zip",
      "archiveFileName": "CMMC_MQTT_Connector-0.30.0.zip",
      "size": 27601,
      "checksum": "SHA-256:8a96b64806dacff98e6e37b8e1eab2e3a826202f36d8eb7768239f9523b6bde9"
    },
    {
      "name": "CMMC MQTT Connector",
      "version": "0.31.0",
      "author": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "maintainer": "Nat Weerawan\u003cnat.wrw@gmail.com\u003e",
      "sentence": "MQTT Connector library",
      "paragraph": "an ESP8266 MQTT Connector library. made with love by CMMC",
      "website": "https://www.cmmakerclub.com",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/cmmakerclub/CMMC_MQTT_Connector-0.31.0.zip",
      "archiveFileName": "CMMC_MQTT_Connector-0.31.0.zip",
      "size": 27647,
      "checksum": "SHA-256:928cabad11bddc7b9609abb22ae6e72cd1831a1f53cad69121b676721a276aa9"
    },
    {
      "name": "TOTP library",
      "version": "1.0.0",
      "author": "Luca Dentella \u003cluca@dentella.it\u003e",
      "maintainer": "Luca Dentella \u003cluca@dentella.it\u003e",
      "sentence": "Library to generate Time-based One-Time Passwords",
      "paragraph": "Implements the Time-based One-Time Password algorithm specified in RFC 6238. Supports different time steps and it's compatible with tokens that uses the same standard (including software ones, like the Google Authenticator app).",
      "website": "https://github.com/lucadentella/TOTP-Arduino",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/lucadentella/TOTP_library-1.0.0.zip",
      "archiveFileName": "TOTP_library-1.0.0.zip",
      "size": 3984,
      "checksum": "SHA-256:8d083a8a432ba7dcdf87ec9f777ab1ce26aab34366d9aa12778a5ea58b7ce20b"
    },
    {
      "name": "TOTP library",
      "version": "1.0.1",
      "author": "Luca Dentella \u003cluca@dentella.it\u003e",
      "maintainer": "Luca Dentella \u003cluca@dentella.it\u003e",
      "sentence": "Library to generate Time-based One-Time Passwords",
      "paragraph": "Implements the Time-based One-Time Password algorithm specified in RFC 6238. Supports different time steps and it's compatible with tokens that uses the same standard (including software ones, like the Google Authenticator app).",
      "website": "https://github.com/lucadentella/TOTP-Arduino",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/lucadentella/TOTP_library-1.0.1.zip",
      "archiveFileName": "TOTP_library-1.0.1.zip",
      "size": 6119,
      "checksum": "SHA-256:f2185ed705a6a7de13207780b7829ed8006286614702ad47c0769573dc7802fe"
    },
    {
      "name": "InputDebounce",
      "version": "1.0.0",
      "author": "Mario Ban \u003cmario.ban@bluewin.ch\u003e",
      "maintainer": "Mario Ban \u003cmario.ban@bluewin.ch\u003e",
      "sentence": "Simple polling input debounce Arduino library.",
      "paragraph": "Used for push-button like switches. Delivers input value (state) after it has been stable (not flickering) for longer than the debounce period, and delivers pressed-on time [ms].",
      "website": "https://github.com/Mokolea/InputDebounce",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Mokolea/InputDebounce-1.0.0.zip",
      "archiveFileName": "InputDebounce-1.0.0.zip",
      "size": 10937,
      "checksum": "SHA-256:03bb6347433dc337a3e8ba58476eb529f8b959a8312690a04f88b51198981ff9"
    },
    {
      "name": "InputDebounce",
      "version": "1.1.0",
      "author": "Mario Ban \u003cmario.ban@bluewin.ch\u003e",
      "maintainer": "Mario Ban \u003cmario.ban@bluewin.ch\u003e",
      "sentence": "Simple polling input debounce Arduino library.",
      "paragraph": "Used for push-button like switches. Delivers input value (state) after it has been stable (not flickering) for longer than the debounce period, and delivers continuous pressed-on time duration [ms].",
      "website": "https://github.com/Mokolea/InputDebounce",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Mokolea/InputDebounce-1.1.0.zip",
      "archiveFileName": "InputDebounce-1.1.0.zip",
      "size": 14327,
      "checksum": "SHA-256:e4dbbea1cce9e547e7e2159ad185aac0d5dc4b8985943ab55789139710b23539"
    },
    {
      "name": "RBD_Light",
      "version": "1.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Blink and and fade many lights in real time with no delay.",
      "paragraph": "Control many lights in real-time and blink without delay using commands such as on(), off(), blink(), and fade(). Lights must be connected to PWM enabled Arduino pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Light-1.0.0.zip",
      "archiveFileName": "RBD_Light-1.0.0.zip",
      "size": 10728,
      "checksum": "SHA-256:a05022e2071912c7b457e81776cfd20cb1f01bf07a3dffe528d9d65058cef188"
    },
    {
      "name": "RBD_Light",
      "version": "1.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Blink and fade many lights in real time with no delay.",
      "paragraph": "Control many lights in real-time and blink without delay using commands such as on(), off(), blink(), and fade(). Lights must be connected to PWM enabled Arduino pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Light-1.0.1.zip",
      "archiveFileName": "RBD_Light-1.0.1.zip",
      "size": 10728,
      "checksum": "SHA-256:3c19948dc27b9aff4c11f08693c492595b3f50d28de658b97ef0c14a349c18b7"
    },
    {
      "name": "RBD_Light",
      "version": "1.0.2",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights and blink without delay using commands such as on(), off(), blink(), and fade().",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Light-1.0.2.zip",
      "archiveFileName": "RBD_Light-1.0.2.zip",
      "size": 8372,
      "checksum": "SHA-256:8334cb9b21ce3bb06088050e195e89be8664b4d854dd88ceefedd6af8ce56da4"
    },
    {
      "name": "RBD_Light",
      "version": "1.0.3",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights and blink without delay using commands such as on(), off(), blink(), and fade().",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Light-1.0.3.zip",
      "archiveFileName": "RBD_Light-1.0.3.zip",
      "size": 8525,
      "checksum": "SHA-256:41f200e9e54d224743c64062cdc3d09c16a2ad205b10111bc6777418d208bffa"
    },
    {
      "name": "RBD_Light",
      "version": "1.0.4",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights and blink without delay using commands such as on(), off(), blink(), and fade().",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Light-1.0.4.zip",
      "archiveFileName": "RBD_Light-1.0.4.zip",
      "size": 8641,
      "checksum": "SHA-256:ae4989645ae25e3784ae571e27d6a5344d92255ed68ab3821fac9a054b5d14fe"
    },
    {
      "name": "RBD_Light",
      "version": "1.0.5",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights and blink without delay using commands such as on(), off(), blink(), and fade().",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Light-1.0.5.zip",
      "archiveFileName": "RBD_Light-1.0.5.zip",
      "size": 8646,
      "checksum": "SHA-256:4a11a8623c43111003ed150fa577a9a2eb7c7df0811c4dd001c9b749a939a08b"
    },
    {
      "name": "RBD_Light",
      "version": "2.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights / LEDs and blink without delay or interrupts using commands such as on(), off(), blink(), and fade(). Lights must be connected to PWM enabled pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Light-2.0.0.zip",
      "archiveFileName": "RBD_Light-2.0.0.zip",
      "size": 8668,
      "checksum": "SHA-256:c71febe1748fd8016cd27d137b3cf4d63bc30f1062d456b0a0582ba8153fed4d"
    },
    {
      "name": "RBD_Light",
      "version": "2.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights / LEDs and blink without delay or interrupts using commands such as on(), off(), blink(), and fade(). Lights must be connected to PWM enabled pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Light-2.0.1.zip",
      "archiveFileName": "RBD_Light-2.0.1.zip",
      "size": 8911,
      "checksum": "SHA-256:5a6a2c44ffc67811c12a20c136d0cdacca8fb41e90679bc0a1f81a26a885e52d"
    },
    {
      "name": "RBD_Light",
      "version": "2.1.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights / LEDs and blink without delay or interrupts using commands such as on(), off(), blink(), and fade(). Lights must be connected to PWM enabled pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Light-2.1.0.zip",
      "archiveFileName": "RBD_Light-2.1.0.zip",
      "size": 9077,
      "checksum": "SHA-256:a62f1c2b323e260385e193b5175169beaddfd410ed265d867fdd775f40269dfb"
    },
    {
      "name": "RBD_Light",
      "version": "2.1.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights / LEDs and blink without delay or interrupts using commands such as on(), off(), blink(), and fade(). Lights must be connected to PWM enabled pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Light-2.1.1.zip",
      "archiveFileName": "RBD_Light-2.1.1.zip",
      "size": 4302,
      "checksum": "SHA-256:ecb89f238d11cd7c14903ed7a1a55eb0b18f1112e8ae4d1262411a9a8e5a37e0"
    },
    {
      "name": "RBD_Light",
      "version": "2.1.2",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights / LEDs and blink without delay or interrupts using commands such as on(), off(), blink(), and fade(). Lights must be connected to PWM enabled pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Light-2.1.2.zip",
      "archiveFileName": "RBD_Light-2.1.2.zip",
      "size": 4281,
      "checksum": "SHA-256:c3300225b3d8d1fd4d3cced7bcfd916bfc58021dc24858950425b760f3d387c6"
    },
    {
      "name": "RBD_Light",
      "version": "2.1.3",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights / LEDs and blink without delay or interrupts using commands such as on(), off(), blink(), and fade(). Lights must be connected to PWM enabled pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Light-2.1.3.zip",
      "archiveFileName": "RBD_Light-2.1.3.zip",
      "size": 6359,
      "checksum": "SHA-256:37a055e1f4438ec3c087d04c3b06f53b6ec196e0922ab69afb3383c84a1719b7"
    },
    {
      "name": "RBD_Light",
      "version": "2.1.4",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights / LEDs and blink without delay or interrupts using commands such as on(), off(), blink(), and fade(). Lights can be connected to PWM or Digital Arduino pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Light-2.1.4.zip",
      "archiveFileName": "RBD_Light-2.1.4.zip",
      "size": 6845,
      "checksum": "SHA-256:1d55d232be582982c9c96af509a034d6d87e4f10e4e4033c0ea3544c2320ac7b"
    },
    {
      "name": "RBD_Light",
      "version": "2.1.5",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights / LEDs and blink without delay or interrupts using commands such as on(), off(), blink(), and fade(). Lights can be connected to PWM or Digital Arduino pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Light-2.1.5.zip",
      "archiveFileName": "RBD_Light-2.1.5.zip",
      "size": 6886,
      "checksum": "SHA-256:76b431b41a8e832e54f1dc3ed9a296dfa21b2be2310c54e7f082d12366800752"
    },
    {
      "name": "RBD_Light",
      "version": "2.1.6",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights / LEDs and blink without delay or interrupts using commands such as on(), off(), blink(), and fade(). Lights can be connected to PWM or Digital Arduino pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Light-2.1.6.zip",
      "archiveFileName": "RBD_Light-2.1.6.zip",
      "size": 6955,
      "checksum": "SHA-256:2f0418ee0c79c2042c5f1678d9d627e6db6a7564c5e0d658bfaa17f910d848a3"
    },
    {
      "name": "RBD_Light",
      "version": "2.1.7",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many lights.",
      "paragraph": "Control many lights / LEDs and blink without delay or interrupts using commands such as on(), off(), blink(), and fade(). Lights can be connected to PWM or Digital Arduino pins to work with this library.",
      "website": "https://github.com/alextaujenis/RBD_Light",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Light-2.1.7.zip",
      "archiveFileName": "RBD_Light-2.1.7.zip",
      "size": 7012,
      "checksum": "SHA-256:dbf0cac44ea0316511b107e909372ea0cfb457a8c7afd4a656043c29dd21018e"
    },
    {
      "name": "RBD_LightSensor",
      "version": "1.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Read and calibrate photoresistors.",
      "paragraph": "Read and calibrate photoresistors.",
      "website": "https://github.com/alextaujenis/RBD_LightSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_LightSensor-1.0.0.zip",
      "archiveFileName": "RBD_LightSensor-1.0.0.zip",
      "size": 7190,
      "checksum": "SHA-256:715c1406a6694d2c857e04fe935b127773f61c673a23f4258fc5b6b25d13606a"
    },
    {
      "name": "RBD_LightSensor",
      "version": "1.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Read and calibrate photoresistors.",
      "paragraph": "Read and calibrate photoresistors.",
      "website": "https://github.com/alextaujenis/RBD_LightSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_LightSensor-1.0.1.zip",
      "archiveFileName": "RBD_LightSensor-1.0.1.zip",
      "size": 5645,
      "checksum": "SHA-256:97e4e25744de32314a7aa635b0dc537ae214c1978f5e7b8951c1ff502bd521ac"
    },
    {
      "name": "RBD_LightSensor",
      "version": "1.0.2",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Read and calibrate photoresistors.",
      "paragraph": "Read and calibrate photoresistors.",
      "website": "https://github.com/alextaujenis/RBD_LightSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_LightSensor-1.0.2.zip",
      "archiveFileName": "RBD_LightSensor-1.0.2.zip",
      "size": 5786,
      "checksum": "SHA-256:c36e10722047b6859dbc56e8c0e8c24ff28adfb07aec0287eb66a776b059ce02"
    },
    {
      "name": "RBD_LightSensor",
      "version": "1.0.3",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Read and calibrate photoresistors.",
      "paragraph": "Read and calibrate photoresistors.",
      "website": "https://github.com/alextaujenis/RBD_LightSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_LightSensor-1.0.3.zip",
      "archiveFileName": "RBD_LightSensor-1.0.3.zip",
      "size": 5926,
      "checksum": "SHA-256:b6666c40894aae84eedd82c31a47a4aa7f7f4234c51db718b7c9eaa7dd097a84"
    },
    {
      "name": "RBD_Timer",
      "version": "1.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Manage many timed events.",
      "paragraph": "The Arduino real-time loop stops advancing when you write delay() or use interrupts in your sketch. You can keep the real-time loop moving by using millis() to track time and create delay, but it's more complicated and soon becomes messy to manage. This lightweight library manages time the same way you would by setting a waypoint and calculating elapsed millis(). It is a simple replacement to manage your timed events with english instead of math.",
      "website": "https://github.com/alextaujenis/RBD_Timer",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Timer-1.0.0.zip",
      "archiveFileName": "RBD_Timer-1.0.0.zip",
      "size": 10545,
      "checksum": "SHA-256:c702d1d4b819ff49a5d531a61aa83b42da7bacecc71d841e973af0a968b508e4"
    },
    {
      "name": "RBD_Timer",
      "version": "1.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Manage many timed events.",
      "paragraph": "The Arduino real-time loop stops advancing when you write delay() or use interrupts in your sketch. You can keep the real-time loop moving by using millis() to track time and create delay, but it's more complicated and soon becomes messy to manage. This lightweight library manages time the same way you would by setting a waypoint and calculating elapsed millis(). It is a simple replacement to manage your timed events with english instead of math.",
      "website": "https://github.com/alextaujenis/RBD_Timer",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Timer-1.0.1.zip",
      "archiveFileName": "RBD_Timer-1.0.1.zip",
      "size": 7276,
      "checksum": "SHA-256:ab090fd5b21596b97a08ce627a8acb27564936021e620e1c94dbcee4b8e18008"
    },
    {
      "name": "RBD_Timer",
      "version": "1.0.2",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Manage many timed events.",
      "paragraph": "The Arduino real-time loop stops advancing when you write delay() or use interrupts in your sketch. You can keep the real-time loop moving by using millis() to track time and create delay, but it's more complicated and soon becomes messy to manage. This lightweight library manages time the same way you would by setting a waypoint and calculating elapsed millis(). It is a simple replacement to manage your timed events with english instead of math.",
      "website": "https://github.com/alextaujenis/RBD_Timer",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Timer-1.0.2.zip",
      "archiveFileName": "RBD_Timer-1.0.2.zip",
      "size": 7264,
      "checksum": "SHA-256:47993f665ad504ad2d79b9c514d03a3281103383458fbce9dcc1526a5b475ea5"
    },
    {
      "name": "RBD_Timer",
      "version": "1.0.3",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Manage many timed events.",
      "paragraph": "The Arduino real-time loop stops advancing when you write delay() or use interrupts in your sketch. You can keep the real-time loop moving by using millis() to track time and create delay, but it's more complicated and soon becomes messy to manage. This lightweight library manages time the same way you would by setting a waypoint and calculating elapsed millis(). It is a simple replacement to manage your timed events with english instead of math.",
      "website": "https://github.com/alextaujenis/RBD_Timer",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Timer-1.0.3.zip",
      "archiveFileName": "RBD_Timer-1.0.3.zip",
      "size": 8620,
      "checksum": "SHA-256:b45b67379c1eeb86e517e10e33f166a5f4389b8970162145545c7a9f9356840b"
    },
    {
      "name": "RBD_Timer",
      "version": "1.0.4",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Manage many timed events.",
      "paragraph": "The Arduino real-time loop stops advancing when you write delay() or use interrupts in your sketch. You can keep the real-time loop moving by using millis() to track time and create delay, but it's more complicated and soon becomes messy to manage. This lightweight library manages time the same way you would by setting a waypoint and calculating elapsed millis(). It is a simple replacement to manage your timed events with english instead of math.",
      "website": "https://github.com/alextaujenis/RBD_Timer",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Timer-1.0.4.zip",
      "archiveFileName": "RBD_Timer-1.0.4.zip",
      "size": 8580,
      "checksum": "SHA-256:8dfeb02143c20bc07da225f2427714773130d5c8ad1a54201aa0086c779303d6"
    },
    {
      "name": "RBD_Timer",
      "version": "1.0.5",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Manage many timed events.",
      "paragraph": "The Arduino real-time loop stops advancing when you write delay() or use interrupts in your sketch. You can keep the real-time loop moving by using millis() to track time and create delay, but it's more complicated and soon becomes messy to manage. This lightweight library manages time the same way you would by setting a waypoint and calculating elapsed millis(). It is a simple replacement to manage your timed events with english instead of math.",
      "website": "https://github.com/alextaujenis/RBD_Timer",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Timer-1.0.5.zip",
      "archiveFileName": "RBD_Timer-1.0.5.zip",
      "size": 8852,
      "checksum": "SHA-256:334613fa89d4497fa273330b2e23c6ed177104baa53cf7a627979137a40f7311"
    },
    {
      "name": "RBD_Timer",
      "version": "1.1.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Manage many timed events.",
      "paragraph": "The Arduino real-time loop stops advancing when you write delay() or use interrupts in your sketch. You can keep the real-time loop moving by using millis() to track time and create delay, but it's more complicated and soon becomes messy to manage. This lightweight library manages time the same way you would by setting a waypoint and calculating elapsed millis(). It is a simple replacement to manage your timed events with english instead of math.",
      "website": "https://github.com/alextaujenis/RBD_Timer",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Timer-1.1.0.zip",
      "archiveFileName": "RBD_Timer-1.1.0.zip",
      "size": 8710,
      "checksum": "SHA-256:1890d07ff6a555ae6f0250ffdc8a39493243a7f06b2f274e6fa9dd65db7c9865"
    },
    {
      "name": "RBD_Timer",
      "version": "1.1.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Manage many timed events.",
      "paragraph": "The Arduino real-time loop stops advancing when you write delay() or use interrupts in your sketch. You can keep the real-time loop moving by using millis() to track time and create delay, but it's more complicated and soon becomes messy to manage. This lightweight library manages time the same way you would by setting a waypoint and calculating elapsed millis(). It is a simple replacement to manage your timed events with english instead of math.",
      "website": "https://github.com/alextaujenis/RBD_Timer",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Timer-1.1.1.zip",
      "archiveFileName": "RBD_Timer-1.1.1.zip",
      "size": 9039,
      "checksum": "SHA-256:2ecb9372863e6615bbfbf4bb097a2d36bb7c928c43a35e98beb253b60b50e03b"
    },
    {
      "name": "RBD_Timer",
      "version": "1.1.2",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Manage many timed events.",
      "paragraph": "The Arduino real-time loop stops advancing when you write delay() or use interrupts in your sketch. You can keep the real-time loop moving by using millis() to track time and create delay, but it's more complicated and soon becomes messy to manage. This lightweight library manages time the same way you would by setting a waypoint and calculating elapsed millis(). It is a simple replacement to manage your timed events with english instead of math.",
      "website": "https://github.com/alextaujenis/RBD_Timer",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Timer-1.1.2.zip",
      "archiveFileName": "RBD_Timer-1.1.2.zip",
      "size": 5073,
      "checksum": "SHA-256:8247e12e4f51802704d5b3f0be6dac494934f3afd54f2260c9668812228be9f0"
    },
    {
      "name": "RBD_Timer",
      "version": "1.2.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Manage many timed events.",
      "paragraph": "The Arduino real-time loop stops advancing when you write delay() or use interrupts in your sketch. You can keep the real-time loop moving by using millis() to track time and create delay, but it's more complicated and soon becomes messy to manage. This lightweight library manages time the same way you would by setting a waypoint and calculating elapsed millis(). It is a simple replacement to manage your timed events with english instead of math.",
      "website": "https://github.com/alextaujenis/RBD_Timer",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Timer-1.2.0.zip",
      "archiveFileName": "RBD_Timer-1.2.0.zip",
      "size": 5308,
      "checksum": "SHA-256:4a9c93e67253437706a88f993f4c668191807d7caf27779fb01b6cb8258a9237"
    },
    {
      "name": "RBD_Motor",
      "version": "1.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many motors in real-time without delay.",
      "paragraph": "Control many motors in real-time without delay using commands like on(), off(), timedOn(), and ramp(). Fire custom events when the motor has reached the target speed with onTargetSpeed().",
      "website": "https://github.com/alextaujenis/RBD_Motor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Motor-1.0.0.zip",
      "archiveFileName": "RBD_Motor-1.0.0.zip",
      "size": 9939,
      "checksum": "SHA-256:83f58996c40c6f76a5bf142b0fbf6791c7c2a16eabe07e70baaf9db8aace1c2a"
    },
    {
      "name": "RBD_Motor",
      "version": "1.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many motors in real-time without delay.",
      "paragraph": "Control many motors in real-time without delay using commands like on(), off(), timedOn(), and ramp(). Fire custom events when the motor has reached the target speed with onTargetSpeed().",
      "website": "https://github.com/alextaujenis/RBD_Motor",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Motor-1.0.1.zip",
      "archiveFileName": "RBD_Motor-1.0.1.zip",
      "size": 9933,
      "checksum": "SHA-256:d3c4a7c8117baafd92af6aed32172f77c11ca8eead790114fbf5ae36b7897b41"
    },
    {
      "name": "RBD_Motor",
      "version": "1.0.3",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many motors without delay.",
      "paragraph": "Control many motors without delay using commands like on(), off(), timedOn(), and ramp(). Fire custom events when the motor has reached the target speed with onTargetSpeed().",
      "website": "https://github.com/alextaujenis/RBD_Motor",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Motor-1.0.3.zip",
      "archiveFileName": "RBD_Motor-1.0.3.zip",
      "size": 7198,
      "checksum": "SHA-256:d9c8a38ddbe6572d5d162375fb593bc0f8a7580a4afc72c16305c80ba1b7659c"
    },
    {
      "name": "RBD_Motor",
      "version": "1.0.4",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many motors without delay.",
      "paragraph": "Control many motors without delay using commands like on(), off(), timedOn(), and ramp(). Fire custom events when the motor has reached the target speed with onTargetSpeed().",
      "website": "https://github.com/alextaujenis/RBD_Motor",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Motor-1.0.4.zip",
      "archiveFileName": "RBD_Motor-1.0.4.zip",
      "size": 7131,
      "checksum": "SHA-256:df9f87a13cfe419c2c0e662fa8a95a3822b1399b6f289d2c34d3a65e207cba76"
    },
    {
      "name": "RBD_Motor",
      "version": "1.1.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many motors without delay.",
      "paragraph": "Control many motors without delay using commands like on(), off(), forward(), reverse(), and ramp(). Fire custom events when the motor has reached the target speed with onTargetSpeed(), or when it has changed direction with the onForward() and onReverse() events. Motors can be wired to move in a single direction, or can be driven in both directions with the help of a motor-shield or H bridge and this library.",
      "website": "https://github.com/alextaujenis/RBD_Motor",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Motor-1.1.0.zip",
      "archiveFileName": "RBD_Motor-1.1.0.zip",
      "size": 9416,
      "checksum": "SHA-256:baa4440203f4a2ab01cd61c65cb9ef352ab5a4bf8b28d36f9c56cff61e6c567e"
    },
    {
      "name": "RBD_Motor",
      "version": "1.1.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many motors without delay.",
      "paragraph": "Control many motors without delay using commands like on(), off(), forward(), reverse(), and ramp(). Fire custom events when the motor has reached the target speed with onTargetSpeed(), or when it has changed direction with the onForward() and onReverse() events. Motors can be wired to move in a single direction, or can be driven in both directions with the help of a motor-shield or H bridge and this library.",
      "website": "https://github.com/alextaujenis/RBD_Motor",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Motor-1.1.1.zip",
      "archiveFileName": "RBD_Motor-1.1.1.zip",
      "size": 9416,
      "checksum": "SHA-256:a3c69bdd27fe7131776d4db53091f592922f0c239aa1034fc6f6b505efb8d544"
    },
    {
      "name": "RBD_Motor",
      "version": "2.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many motors without delay.",
      "paragraph": "Control many motors without delay using commands like on(), off(), forward(), reverse(), and ramp(). Fire custom events when the motor has reached the target speed with onTargetSpeed(), or when it has changed direction with the onForward() and onReverse() events. Motors can be wired to move in a single direction, or can be driven in both directions with the help of a motor-shield or H bridge and this library.",
      "website": "https://github.com/alextaujenis/RBD_Motor",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Motor-2.0.0.zip",
      "archiveFileName": "RBD_Motor-2.0.0.zip",
      "size": 9276,
      "checksum": "SHA-256:c2642718c186d03053ba183528ab86d2806003edc1ea948ffe5fec2463e6e3ef"
    },
    {
      "name": "RBD_Motor",
      "version": "2.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many motors without delay.",
      "paragraph": "Control many motors without delay using commands like on(), off(), forward(), reverse(), and ramp(). Fire custom events when the motor has reached the target speed with onTargetSpeed(), or when it has changed direction with the onForward() and onReverse() events. Motors can be wired to move in a single direction, or can be driven in both directions with the help of a motor-shield or H bridge and this library.",
      "website": "https://github.com/alextaujenis/RBD_Motor",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Motor-2.0.1.zip",
      "archiveFileName": "RBD_Motor-2.0.1.zip",
      "size": 9433,
      "checksum": "SHA-256:29c125616fe50f435e9623156ef1d56476daa0d98483d9d619635d1b6a48c890"
    },
    {
      "name": "RBD_Motor",
      "version": "2.1.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many motors without delay.",
      "paragraph": "Control many motors without delay using commands like on(), off(), forward(), reverse(), and ramp(). Fire custom events when the motor has reached the target speed with onTargetSpeed(), or when it has changed direction with the onForward() and onReverse() events. Motors can be wired to move in a single direction, or can be driven in both directions with the help of a motor-shield or H bridge and this library.",
      "website": "https://github.com/alextaujenis/RBD_Motor",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Motor-2.1.0.zip",
      "archiveFileName": "RBD_Motor-2.1.0.zip",
      "size": 9685,
      "checksum": "SHA-256:0eadff255d0032d6bf34279beaf44406507ceacf0a2967897c84104b73a2fa86"
    },
    {
      "name": "RBD_Motor",
      "version": "2.1.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many motors without delay.",
      "paragraph": "Control many motors without delay using commands like on(), off(), forward(), reverse(), and ramp(). Fire custom events when the motor has reached the target speed with onTargetSpeed(), or when it has changed direction with the onForward() and onReverse() events. Motors can be wired to move in a single direction, or can be driven in both directions with the help of a motor-shield or H bridge and this library.",
      "website": "https://github.com/alextaujenis/RBD_Motor",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Motor-2.1.1.zip",
      "archiveFileName": "RBD_Motor-2.1.1.zip",
      "size": 4565,
      "checksum": "SHA-256:66db620f73c53051a8ce53f30f0bfc94aad3b25f40d6dd0358335b536b5619f0"
    },
    {
      "name": "RBD_Threshold",
      "version": "1.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Set and check numeric quantile scales.",
      "paragraph": "Quickly set and check an arbitrary number of thresholds. Provide an input domain and this library will convert it to a numeric quantile output range. It is different from the Arduino map() function because this library can handle a non-uniform input range.",
      "website": "https://github.com/alextaujenis/RBD_Threshold",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Threshold-1.0.0.zip",
      "archiveFileName": "RBD_Threshold-1.0.0.zip",
      "size": 9085,
      "checksum": "SHA-256:4fd762ed26786d3bf0a2bba6cae4be6d83ff73045d5dcacb82eba7d5457a0a0f"
    },
    {
      "name": "RBD_Threshold",
      "version": "1.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Set and check numeric quantile scales.",
      "paragraph": "Set and check numeric quantile scales. Provide an input domain and this library will convert it to a numeric quantile output range. It is different from the Arduino map() function because this library can handle a non-uniform input range.",
      "website": "https://github.com/alextaujenis/RBD_Threshold",
      "category": "Data Processing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Threshold-1.0.1.zip",
      "archiveFileName": "RBD_Threshold-1.0.1.zip",
      "size": 6998,
      "checksum": "SHA-256:7e69daff3ca4fbe76f07fc02a7bd5b2d625593afe6194fe90d70c6c3ca0eca02"
    },
    {
      "name": "RBD_Threshold",
      "version": "1.0.2",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Set and check numeric quantile scales.",
      "paragraph": "Set and check numeric quantile scales. Provide an input domain and this library will convert it to a numeric quantile output range. It is different from the Arduino map() function because this library can handle a non-uniform input range.",
      "website": "https://github.com/alextaujenis/RBD_Threshold",
      "category": "Data Processing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Threshold-1.0.2.zip",
      "archiveFileName": "RBD_Threshold-1.0.2.zip",
      "size": 6962,
      "checksum": "SHA-256:4a5785831cd6fbc99a79412a4a986be0a6d1744849d01c95eaf0f0bf256b007f"
    },
    {
      "name": "LcdBarGraphX",
      "version": "2.0.0",
      "author": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "maintainer": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "sentence": "Visualizing alanalog values on an LCD with the LiquidCrystal_I2C library.",
      "paragraph": "LcdBarGraph is an Arduino library to draw bar graph on a Liquid Chrystal display. This LcdBarGraphX is a fork of the original project to be driven by the \"F. Malpartida\" version LCD lib (aka. LiquidCrystal_I2C) instead of the bound one.",
      "website": "https://github.com/prampec/LcdBarGraphX",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/prampec/LcdBarGraphX-2.0.0.zip",
      "archiveFileName": "LcdBarGraphX-2.0.0.zip",
      "size": 102375,
      "checksum": "SHA-256:45d845628e0f115b2562d1f19a27dcba13dcb5563844024228edc31cf79ef8c4"
    },
    {
      "name": "LcdBarGraph",
      "version": "2.0.0",
      "author": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "maintainer": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "sentence": "This library is to display analog values in an LCD display.",
      "paragraph": "Using the bouned LiquidChrystal library, bar-graph can be displayed in the screen. See demo: http://youtu.be/noXtsvPRwQk",
      "website": "https://github.com/prampec/LcdBarGraph",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/prampec/LcdBarGraph-2.0.0.zip",
      "archiveFileName": "LcdBarGraph-2.0.0.zip",
      "size": 101248,
      "checksum": "SHA-256:de3c8f20bda43be69949b38232331e73afa70907421897d09da3f94213608b94"
    },
    {
      "name": "SoftTimer",
      "version": "3.0.0",
      "author": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "maintainer": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "sentence": "SoftTimer is a lightweight pseudo multitasking solution for Arduino.",
      "paragraph": "SoftTimer enable a higher level Arduino programing, jet easy to use, and lightweight. You often face with the problem that you need to do multiply tasks in the same time. In SoftTimer manner programmer creates Tasks that runs periodically. This library comes with a collection of handy tools like blinker, pwm, debouncer.",
      "website": "https://github.com/prampec/arduino-softtimer",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/prampec/SoftTimer-3.0.0.zip",
      "archiveFileName": "SoftTimer-3.0.0.zip",
      "size": 46294,
      "checksum": "SHA-256:f8a30a90c2c392357a68fd742a5a743c5f4977d98efbd420bf420e142df30526"
    },
    {
      "name": "SoftTimer",
      "version": "3.1.0",
      "author": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "maintainer": "Balazs Kelemen \u003cprampec+arduino@gmail.com\u003e",
      "sentence": "SoftTimer is a lightweight pseudo multitasking solution for Arduino.",
      "paragraph": "SoftTimer enable a higher level Arduino programing, jet easy to use, and lightweight. You often face with the problem that you need to do multiply tasks in the same time. In SoftTimer manner programmer creates Tasks that runs periodically. This library comes with a collection of handy tools like blinker, pwm, debouncer.",
      "website": "https://github.com/prampec/arduino-softtimer",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/prampec/SoftTimer-3.1.0.zip",
      "archiveFileName": "SoftTimer-3.1.0.zip",
      "size": 49475,
      "checksum": "SHA-256:3e9be9d563b87acf52154051733e85ea106394934163b6bdb59662400334f812"
    },
    {
      "name": "RBD_WaterSensor",
      "version": "1.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Measure and calibrate capacitance water sensors.",
      "paragraph": "Measure and calibrate capacitance sensors to detect change in water levels from the outside of a plastic container. The example uses a piece of aluminum foil, but you can attach the wire to anything conductive and calibrate the sensor accordingly.",
      "website": "https://github.com/alextaujenis/RBD_WaterSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_WaterSensor-1.0.0.zip",
      "archiveFileName": "RBD_WaterSensor-1.0.0.zip",
      "size": 11842,
      "checksum": "SHA-256:20f4330459946e54835a8e036d01a34ca6eceaea57e3629a3b8b1a15300182c3"
    },
    {
      "name": "RBD_WaterSensor",
      "version": "1.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Measure and calibrate capacitance water sensors.",
      "paragraph": "Measure and calibrate capacitance sensors to detect change in water levels from the outside of a plastic container.",
      "website": "https://github.com/alextaujenis/RBD_WaterSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_WaterSensor-1.0.1.zip",
      "archiveFileName": "RBD_WaterSensor-1.0.1.zip",
      "size": 7242,
      "checksum": "SHA-256:df2a25f688af376623c9b9d803a35073a7604ec0fa54dd136bd56b79391275ad"
    },
    {
      "name": "RBD_WaterSensor",
      "version": "1.0.2",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Measure and calibrate water level sensors.",
      "paragraph": "Measure and calibrate capacitance sensors to detect change in water levels from the outside of a plastic container.",
      "website": "https://github.com/alextaujenis/RBD_WaterSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_WaterSensor-1.0.2.zip",
      "archiveFileName": "RBD_WaterSensor-1.0.2.zip",
      "size": 7237,
      "checksum": "SHA-256:0cead8eab0ee295ab1f0ddf73879c0fcffd7674703c0f4491e431fa1082547a1"
    },
    {
      "name": "RBD_WaterSensor",
      "version": "1.0.3",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Measure and calibrate water level sensors.",
      "paragraph": "Measure and calibrate capacitance sensors to detect change in water levels from the outside of a plastic container.",
      "website": "https://github.com/alextaujenis/RBD_WaterSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_WaterSensor-1.0.3.zip",
      "archiveFileName": "RBD_WaterSensor-1.0.3.zip",
      "size": 7153,
      "checksum": "SHA-256:43eefbc92b357b6f527121e3dc6be9508090e737cd7febfd533dd4216e059242"
    },
    {
      "name": "RBD_WaterSensor",
      "version": "2.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Measure and calibrate water level sensors.",
      "paragraph": "Measure and calibrate capacitance sensors to detect change in water levels from the outside of a plastic container.",
      "website": "https://github.com/alextaujenis/RBD_WaterSensor",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_WaterSensor-2.0.0.zip",
      "archiveFileName": "RBD_WaterSensor-2.0.0.zip",
      "size": 7303,
      "checksum": "SHA-256:82e0df72815b345099359c8d54f2d43d943701973d05bb42720ce2014c9b032a"
    },
    {
      "name": "TM1650",
      "version": "1.0.2",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "7 segment display driver for JY-MCU module based on TM1650 chip.",
      "paragraph": "Allows control of JY-MCU 7 segment display modules based on TM1650 chip.",
      "website": "https://github.com/arkhipenko/TM1650.git",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/arkhipenko/TM1650-1.0.2.zip",
      "archiveFileName": "TM1650-1.0.2.zip",
      "size": 5978,
      "checksum": "SHA-256:08d72bea953529ea6b6767501f4536fd69fa1fa8669267c77a28034a2f62ba99"
    },
    {
      "name": "TM1650",
      "version": "1.1.0",
      "author": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "maintainer": "Anatoli Arkhipenko \u003carkhipenko@hotmail.com\u003e",
      "sentence": "7 segment display driver for JY-MCU module based on TM1650 chip.",
      "paragraph": "Allows control of JY-MCU 7 segment display modules based on TM1650 chip.",
      "website": "https://github.com/arkhipenko/TM1650.git",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/arkhipenko/TM1650-1.1.0.zip",
      "archiveFileName": "TM1650-1.1.0.zip",
      "size": 5320,
      "checksum": "SHA-256:49411aaf37d887728148aa6514c37611e7bda5af7a81347b164f15086e8a4946"
    },
    {
      "name": "extEEPROM",
      "version": "3.1.0",
      "author": "Jack Christensen",
      "maintainer": "Paolo Paolucci",
      "sentence": "Arduino library to support external I2C EEPROMs.",
      "paragraph": "This library will work with most I2C serial EEPROM chips between 2k bits and 2048k bits (2M bits) in size. Multiple EEPROMs on the bus are supported as a single address space.",
      "website": "https://github.com/PaoloP74/extEEPROM",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/PaoloP74/extEEPROM-3.1.0.zip",
      "archiveFileName": "extEEPROM-3.1.0.zip",
      "size": 11371,
      "checksum": "SHA-256:6c81b41dee455d5f907f654b2d0a9ee72efddfbc5acf42f31e1cb22c7f8ce9ad"
    },
    {
      "name": "Json Streaming Parser",
      "version": "1.0.0",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A very memory efficient library to parse (large) JSON objects on small devices",
      "paragraph": "A very memory efficient library to parse (large) JSON objects on small devices",
      "website": "https://github.com/squix78/json-streaming-parser",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/squix78/Json_Streaming_Parser-1.0.0.zip",
      "archiveFileName": "Json_Streaming_Parser-1.0.0.zip",
      "size": 11263,
      "checksum": "SHA-256:11d16ba0d65de4825c1baf79d9b437900b0bffe10da1322d1e6ef06c4925cc66"
    },
    {
      "name": "Json Streaming Parser",
      "version": "1.0.2",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A very memory efficient library to parse (large) JSON objects on small devices",
      "paragraph": "A very memory efficient library to parse (large) JSON objects on small devices",
      "website": "https://github.com/squix78/json-streaming-parser",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/squix78/Json_Streaming_Parser-1.0.2.zip",
      "archiveFileName": "Json_Streaming_Parser-1.0.2.zip",
      "size": 11271,
      "checksum": "SHA-256:ed549999a5d28fa0aa86da943b9bd463cd0aa2de72654c371c32935e51a6c852"
    },
    {
      "name": "SmartMatrix3",
      "version": "3.0.0",
      "author": "Louis Beaudoin \u003clouis@pixelmatix.com\u003e",
      "maintainer": "Louis Beaudoin \u003clouis@pixelmatix.com\u003e",
      "sentence": "Drive multiplexed RGB matrix panels from your Teensy 3.1",
      "website": "http://docs.pixelmatix.com/SmartMatrix",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/pixelmatix/SmartMatrix3-3.0.0.zip",
      "archiveFileName": "SmartMatrix3-3.0.0.zip",
      "size": 2034296,
      "checksum": "SHA-256:774fa686cd918f54c571c7d2e337957ca01ea3799b9b985cd86173784a299cc1"
    },
    {
      "name": "EEWrap",
      "version": "1.0.0",
      "author": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "A convenient library allowing one to use the EEPROM just like RAM.",
      "website": "https://github.com/Chris--A/EEWrap#eewrap-library-for-avr-and-arduino-boards",
      "category": "Data Storage",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Chris--A/EEWrap-1.0.0.zip",
      "archiveFileName": "EEWrap-1.0.0.zip",
      "size": 5790,
      "checksum": "SHA-256:5cb8b8543475f261e30daf1b2861a441a14c3a5effda1cfc71045103335cb460"
    },
    {
      "name": "RBD_Button",
      "version": "1.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Read and debounce buttons and switches.",
      "paragraph": "Read and debounce buttons and switches without delay. React to button events with the onPressed() and onReleased() commands. Control debounce time with setDebounceTimeout(). This library sets each button up as input_pullup by default, allowing you to wire the button to any digital input and ground. Input_pullup can be disabled by passing an optional flag to the constructor() and wiring the button with your own resistor.",
      "website": "https://github.com/alextaujenis/RBD_Button",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Button-1.0.0.zip",
      "archiveFileName": "RBD_Button-1.0.0.zip",
      "size": 8022,
      "checksum": "SHA-256:a1499d83de325cea3f02ba7c72fb21a9909efbd5bbc8e1c9d6b5f9fd7b17d05c"
    },
    {
      "name": "RBD_Button",
      "version": "1.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Read and debounce buttons and switches.",
      "paragraph": "Read and debounce buttons and switches without delay or interrupts. React to button events with the onPressed() and onReleased() commands. Control debounce time with setDebounceTimeout(). This library sets each button up as input_pullup by default, allowing you to wire the button to any digital input and ground.",
      "website": "https://github.com/alextaujenis/RBD_Button",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Button-1.0.1.zip",
      "archiveFileName": "RBD_Button-1.0.1.zip",
      "size": 7841,
      "checksum": "SHA-256:fed841a9a710740853eeb17e09c1276307e447807ea661ddf44f09a51866871b"
    },
    {
      "name": "RBD_Button",
      "version": "2.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Read and debounce buttons and switches.",
      "paragraph": "Read and debounce buttons and switches without delay or interrupts. React to button events with the onPressed() and onReleased() commands. Control debounce time with setDebounceTimeout(). This library sets each button up as input_pullup by default, allowing you to wire the button to any digital input and ground.",
      "website": "https://github.com/alextaujenis/RBD_Button",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Button-2.0.0.zip",
      "archiveFileName": "RBD_Button-2.0.0.zip",
      "size": 3848,
      "checksum": "SHA-256:cafe016f8b8b29a4b795df57780f4de0b70243ef161314f49feebc2f7788a5ed"
    },
    {
      "name": "RBD_Button",
      "version": "2.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Read and debounce buttons and switches.",
      "paragraph": "Read and debounce buttons and switches without delay or interrupts. React to button events with the onPressed() and onReleased() commands. Control debounce time with setDebounceTimeout(). This library sets each button up as input_pullup by default, allowing you to wire the button to any digital input and ground.",
      "website": "https://github.com/alextaujenis/RBD_Button",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Button-2.0.1.zip",
      "archiveFileName": "RBD_Button-2.0.1.zip",
      "size": 3840,
      "checksum": "SHA-256:31210f8ce6911ed726c9b60b56fafb73a202912756d93f2563f478832e2f0b5c"
    },
    {
      "name": "RBD_Button",
      "version": "2.0.2",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Read and debounce buttons and switches.",
      "paragraph": "Read and debounce buttons and switches without delay or interrupts. React to button events with the onPressed() and onReleased() commands. Control debounce time with setDebounceTimeout(). This library sets each button up as input_pullup by default, allowing you to wire the button to any digital input and ground.",
      "website": "https://github.com/alextaujenis/RBD_Button",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Button-2.0.2.zip",
      "archiveFileName": "RBD_Button-2.0.2.zip",
      "size": 5403,
      "checksum": "SHA-256:652489c5533a3092a0ededeebaa6928ac12702742c4f44d8ff643b36530e0ccf"
    },
    {
      "name": "RBD_Button",
      "version": "2.1.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Read and debounce buttons and switches.",
      "paragraph": "Read and debounce buttons and switches without delay or interrupts. React to button events with the onPressed() and onReleased() commands. Control debounce time with setDebounceTimeout(). This library sets each button up as input_pullup by default, allowing you to wire the button to any digital input and ground.",
      "website": "https://github.com/alextaujenis/RBD_Button",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Button-2.1.0.zip",
      "archiveFileName": "RBD_Button-2.1.0.zip",
      "size": 5386,
      "checksum": "SHA-256:94e4e0a70f182e0c2efb901cbef3694e93ee0b45eae0538bc52c72b6fa3facbc"
    },
    {
      "name": "PGMWrap",
      "version": "1.0.0",
      "author": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "A convenient library allowing structures and variables stored in PROGMEM to be read directly.",
      "paragraph": "This allevieates the need to use helpers like pgm_read_byte() to access data.",
      "website": "https://github.com/Chris--A/PGMWrap",
      "category": "Data Storage",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Chris--A/PGMWrap-1.0.0.zip",
      "archiveFileName": "PGMWrap-1.0.0.zip",
      "size": 2771,
      "checksum": "SHA-256:4e4ad005a322a08b80e52bc51b53750a77d8ec0cde01ea89d41c2170f324a4ff"
    },
    {
      "name": "Modulo",
      "version": "0.10.0",
      "author": "Erin Tomson \u003cerin@modulo.co\u003e",
      "maintainer": "Erin Tomson \u003cerin@modulo.co\u003e",
      "sentence": "A library that provides support for Modulo hardware.",
      "website": "http://modulo.co/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/modulolabs/Modulo-0.10.0.zip",
      "archiveFileName": "Modulo-0.10.0.zip",
      "size": 73183,
      "checksum": "SHA-256:cb4a4a1e9c20a740409aef71f3a3c5f0b2d6ac3e10f11ca4ccf5243c9de22c6e"
    },
    {
      "name": "Modulo",
      "version": "0.5.0",
      "author": "Erin Tomson \u003cerin@modulo.co\u003e",
      "maintainer": "Erin Tomson \u003cerin@modulo.co\u003e",
      "sentence": "A library that provides support for Modulo hardware.",
      "website": "http://modulo.co/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/modulolabs/Modulo-0.5.0.zip",
      "archiveFileName": "Modulo-0.5.0.zip",
      "size": 82887,
      "checksum": "SHA-256:c23403521f0bc2d18eeaf90aed56194d269c20ce1b4ddba085ddb09c489b1c42"
    },
    {
      "name": "Modulo",
      "version": "0.6.0",
      "author": "Erin Tomson \u003cerin@modulo.co\u003e",
      "maintainer": "Erin Tomson \u003cerin@modulo.co\u003e",
      "sentence": "A library that provides support for Modulo hardware.",
      "website": "http://modulo.co/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/modulolabs/Modulo-0.6.0.zip",
      "archiveFileName": "Modulo-0.6.0.zip",
      "size": 90980,
      "checksum": "SHA-256:3cfefbb67ad585231e7f9cce8935424151421d8a5f6dfc88bb7e5a7443e3d588"
    },
    {
      "name": "Modulo",
      "version": "0.7.0",
      "author": "Erin Tomson \u003cerin@modulo.co\u003e",
      "maintainer": "Erin Tomson \u003cerin@modulo.co\u003e",
      "sentence": "A library that provides support for Modulo hardware.",
      "website": "http://modulo.co/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/modulolabs/Modulo-0.7.0.zip",
      "archiveFileName": "Modulo-0.7.0.zip",
      "size": 73514,
      "checksum": "SHA-256:b598761518131a9f41a3fe9c7b15bf5bc926eeb5ba83dfa65e9974eac119bc71"
    },
    {
      "name": "Modulo",
      "version": "0.9.0",
      "author": "Erin Tomson \u003cerin@modulo.co\u003e",
      "maintainer": "Erin Tomson \u003cerin@modulo.co\u003e",
      "sentence": "A library that provides support for Modulo hardware.",
      "website": "http://modulo.co/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/modulolabs/Modulo-0.9.0.zip",
      "archiveFileName": "Modulo-0.9.0.zip",
      "size": 73513,
      "checksum": "SHA-256:f0e4490b258aea16b16b1a09e5e6baf6cb5ab57e722141b10ec9167f977bc553"
    },
    {
      "name": "Modulo",
      "version": "1.0.0",
      "author": "Erin Tomson \u003cerin@modulo.co\u003e",
      "maintainer": "Erin Tomson \u003cerin@modulo.co\u003e",
      "sentence": "A library that provides support for Modulo hardware.",
      "website": "http://modulo.co/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/modulolabs/Modulo-1.0.0.zip",
      "archiveFileName": "Modulo-1.0.0.zip",
      "size": 57156,
      "checksum": "SHA-256:6bb266205507a15293eda21c06f254459c42d12937e820638c841bdd12f50888"
    },
    {
      "name": "RBD_Servo",
      "version": "1.0.0",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many servos without delay.",
      "paragraph": "Control many servos without delay or interrupts while applying rotation adjustments with PWM/PPM. Quickly calibrate each servo and make real-time adjustments to the rotation with moveToDegrees(). Connect as many servos as the number of digital pins available on your Arduino. This library is very fast and has a small, lightweight code footprint.",
      "website": "https://github.com/alextaujenis/RBD_Servo",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Servo-1.0.0.zip",
      "archiveFileName": "RBD_Servo-1.0.0.zip",
      "size": 7781,
      "checksum": "SHA-256:2749e2d19983dffebd3c239fd8b2509d04747db34f31ff3bd5b01354ffa108aa"
    },
    {
      "name": "RBD_Servo",
      "version": "1.0.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "Control many servos without delay.",
      "paragraph": "Control many servos without delay or interrupts while applying rotation adjustments with PWM/PPM. Quickly calibrate each servo and make real-time adjustments to the rotation with moveToDegrees(). Connect as many servos as the number of digital pins available on your Arduino. This library is very fast and has a small, lightweight code footprint.",
      "website": "https://github.com/alextaujenis/RBD_Servo",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_Servo-1.0.1.zip",
      "archiveFileName": "RBD_Servo-1.0.1.zip",
      "size": 7787,
      "checksum": "SHA-256:dafe7f76950648a09092089b95330265e288f756382635c8895f1b1065f75398"
    },
    {
      "name": "HID-Project",
      "version": "2.4.1",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "Extended HID Functions for Arduino",
      "paragraph": "Includes BootKeyboard/Mouse, Consumer, System, Gamepad, RawHID and more features. Also compatible with Arduino Uno/Mega via HoodLoader2.",
      "website": "https://github.com/NicoHood/HID",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/NicoHood/HID_Project-2.4.1.zip",
      "archiveFileName": "HID_Project-2.4.1.zip",
      "size": 276058,
      "checksum": "SHA-256:7f85e92da0ea013ca64e7a9f231f0fbf589898939914057f59bcfde9e2cca66f"
    },
    {
      "name": "HID-Project",
      "version": "2.4.2",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "Extended HID Functions for Arduino",
      "paragraph": "Includes BootKeyboard/Mouse, Consumer, System, Gamepad, RawHID and more features. Also compatible with Arduino Uno/Mega via HoodLoader2.",
      "website": "https://github.com/NicoHood/HID",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/NicoHood/HID_Project-2.4.2.zip",
      "archiveFileName": "HID_Project-2.4.2.zip",
      "size": 276102,
      "checksum": "SHA-256:0f57973c954cdba214ab94c3d451518fa260be2e72ac42c259872f2b5371f7c4"
    },
    {
      "name": "HID-Project",
      "version": "2.4.3",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@NicoHood.de\u003e",
      "sentence": "Extended HID Functions for Arduino",
      "paragraph": "Includes BootKeyboard/Mouse, Consumer, System, Gamepad, RawHID and more features. Also compatible with Arduino Uno/Mega via HoodLoader2.",
      "website": "https://github.com/NicoHood/HID",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/NicoHood/HID_Project-2.4.3.zip",
      "archiveFileName": "HID_Project-2.4.3.zip",
      "size": 276121,
      "checksum": "SHA-256:8e11917ca93e7508257e500de39481565583a89becd5ab3115db468f77c2ba39"
    },
    {
      "name": "HardwareSerial_RS485",
      "version": "2.0.0",
      "author": "Michael Jonker",
      "maintainer": "Michael Jonker \u003cmichael.j.jonker@gmail.com\u003e",
      "sentence": "Concurrent multi-drop (i.e. multi-master, multi-slave) RS485 communication library",
      "paragraph": "This library supports an RS485 transceiver connected to the USART (Tx/Rx) pins of the Arduino in a half-duplex, concurrent multi-drop environment. It provides message addressing and filtering as well as collision detection and avoidance.",
      "website": "https://github.com/MichaelJonker/Arduino_HardwareSerial_RS485/tree/master/libraries/HardwareSerial_RS485",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/MichaelJonker/HardwareSerial_RS485-2.0.0.zip",
      "archiveFileName": "HardwareSerial_RS485-2.0.0.zip",
      "size": 868129,
      "checksum": "SHA-256:dc26e190b2988389eddce00ca7d34fb1ae2f78e0101b58b45fc37653f2a1e482"
    },
    {
      "name": "HardwareSerial_RS485",
      "version": "2.0.1",
      "author": "Michael Jonker",
      "maintainer": "Michael Jonker \u003cmichael.j.jonker@gmail.com\u003e",
      "sentence": "Concurrent multi-drop (i.e. multi-master, multi-slave) RS485 communication library",
      "paragraph": "This library supports an RS485 transceiver connected to the USART (Tx/Rx) pins of the Arduino in a half-duplex, concurrent multi-drop environment. It provides message addressing and filtering as well as collision detection and avoidance.",
      "website": "https://github.com/MichaelJonker/HardwareSerialRS485",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/MichaelJonker/HardwareSerial_RS485-2.0.1.zip",
      "archiveFileName": "HardwareSerial_RS485-2.0.1.zip",
      "size": 868113,
      "checksum": "SHA-256:976dace2dd2e35bdd3237a5561d816efeac37a0d0c30b1f094927537688844c2"
    },
    {
      "name": "HardwareSerial_RS485",
      "version": "2.1.0",
      "author": "Michael Jonker",
      "maintainer": "Michael Jonker \u003cmichael.j.jonker@gmail.com\u003e",
      "sentence": "Concurrent multi-drop (i.e. multi-master, multi-slave) RS485 communication library",
      "paragraph": "This library supports an RS485 transceiver connected to the USART (Tx/Rx) pins of the Arduino in a half-duplex, concurrent multi-drop environment. It provides message addressing and filtering as well as collision detection and avoidance.",
      "website": "https://github.com/MichaelJonker/HardwareSerialRS485",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/MichaelJonker/HardwareSerial_RS485-2.1.0.zip",
      "archiveFileName": "HardwareSerial_RS485-2.1.0.zip",
      "size": 123661,
      "checksum": "SHA-256:e837bcac0a7936334d70ab21367704775b7939e18903c52cf73a55f2546948d7"
    },
    {
      "name": "HardwareSerial_RS485",
      "version": "2.2.0",
      "author": "Michael Jonker",
      "maintainer": "Michael Jonker \u003cmichael.j.jonker@gmail.com\u003e",
      "sentence": "Concurrent multi-drop (i.e. multi-master, multi-slave) RS485 communication library",
      "paragraph": "This library supports an RS485 transceiver connected to the USART (Tx/Rx) pins of the Arduino in a half-duplex, concurrent multi-drop environment. It provides message addressing and filtering as well as collision detection and avoidance.",
      "website": "https://github.com/MichaelJonker/HardwareSerialRS485/wiki",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/MichaelJonker/HardwareSerial_RS485-2.2.0.zip",
      "archiveFileName": "HardwareSerial_RS485-2.2.0.zip",
      "size": 126242,
      "checksum": "SHA-256:b9cefe5dbff2b2b8dbae08f06d6424873920c6631eb175c3000fd51bbcb24eef"
    },
    {
      "name": "IRremote",
      "version": "1.0.0",
      "author": "shirriff",
      "maintainer": "shirriff",
      "sentence": "Send and receive infrared signals with multiple protocols",
      "paragraph": "Send and receive infrared signals with multiple protocols",
      "website": "https://github.com/shirriff/Arduino-IRremote.git",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/z3t0/IRremote-1.0.0.zip",
      "archiveFileName": "IRremote-1.0.0.zip",
      "size": 59455,
      "checksum": "SHA-256:2587a18b7765c1cb218bf0b676398a76ca225d1c9f24284e65289354089aaabc"
    },
    {
      "name": "IRremote",
      "version": "2.0.1",
      "author": "shirriff",
      "maintainer": "shirriff",
      "sentence": "Send and receive infrared signals with multiple protocols",
      "paragraph": "Send and receive infrared signals with multiple protocols",
      "website": "https://github.com/shirriff/Arduino-IRremote.git",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/z3t0/IRremote-2.0.1.zip",
      "archiveFileName": "IRremote-2.0.1.zip",
      "size": 69225,
      "checksum": "SHA-256:7e83f1fe493ebf9b774a5cc4e0a54e2b318570923139c06cd386ed6ded1545ae"
    },
    {
      "name": "Etherkit Si5351",
      "version": "1.0.0",
      "author": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "maintainer": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "sentence": "A full-featured library for the Si5351 series of clock generator ICs from Silicon Labs",
      "paragraph": "It will allow you to control all features of the Si5351, without depending on the proprietary ClockBuilder software from Silicon Labs.",
      "website": "https://github.com/etherkit/Si5351Arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/etherkit/Etherkit_Si5351-1.0.0.zip",
      "archiveFileName": "Etherkit_Si5351-1.0.0.zip",
      "size": 35621,
      "checksum": "SHA-256:9508bfef1d266116fe89dbd9237d986ebc4471fb5556b0f9aee14d5414f639ec"
    },
    {
      "name": "Etherkit Si5351",
      "version": "1.1.0",
      "author": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "maintainer": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "sentence": "A full-featured library for the Si5351 series of clock generator ICs from Silicon Labs",
      "paragraph": "This library will allow you to control all features of the Si5351, without depending on the proprietary ClockBuilder software from Silicon Labs.",
      "website": "https://github.com/etherkit/Si5351Arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/etherkit/Etherkit_Si5351-1.1.0.zip",
      "archiveFileName": "Etherkit_Si5351-1.1.0.zip",
      "size": 36236,
      "checksum": "SHA-256:6f5fdadcc52201ecfa54a4d91513b74e02271a73db348c9ee333ebf0c45f73b9"
    },
    {
      "name": "Etherkit Si5351",
      "version": "1.1.1",
      "author": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "maintainer": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "sentence": "A full-featured library for the Si5351 series of clock generator ICs from Silicon Labs",
      "paragraph": "This library will allow you to control all features of the Si5351, without depending on the proprietary ClockBuilder software from Silicon Labs.",
      "website": "https://github.com/etherkit/Si5351Arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/etherkit/Etherkit_Si5351-1.1.1.zip",
      "archiveFileName": "Etherkit_Si5351-1.1.1.zip",
      "size": 36553,
      "checksum": "SHA-256:cfc6b8eee216718fe0de35d8223f3e624040069769da0aef372c1e6e69c0e9ec"
    },
    {
      "name": "I2CSoilMoistureSensor",
      "version": "1.0.0",
      "author": "Ingo Fischer \u003cingo@fischer-ka.de\u003e",
      "maintainer": "Ingo Fischer \u003cingo@fischer-ka.de\u003e",
      "sentence": "Provide access to all functions of the I2C Soil Moisture Sensor from Catnip Electronics.",
      "website": "https://github.com/Apollon77/I2CSoilMoistureSensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Apollon77/I2CSoilMoistureSensor-1.0.0.zip",
      "archiveFileName": "I2CSoilMoistureSensor-1.0.0.zip",
      "size": 7412,
      "checksum": "SHA-256:35960eaa59034da81c3281fb814fb2a280990471818cf8060f5ed00eb209f033"
    },
    {
      "name": "ESP8266 Oled Driver for SSD1306 display",
      "version": "1.0.0",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A display driver for SSD1306 oled displays connected to an ESP8266",
      "paragraph": "A display driver for SSD1306 oled displays connected to an ESP8266",
      "website": "https://github.com/squix78/esp8266-oled-ssd1306",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/squix78/ESP8266_Oled_Driver_for_SSD1306_display-1.0.0.zip",
      "archiveFileName": "ESP8266_Oled_Driver_for_SSD1306_display-1.0.0.zip",
      "size": 19136,
      "checksum": "SHA-256:34c13dc795352fa17adf66729c43063985d04662bcdbbf57797f101583f88934"
    },
    {
      "name": "ESP8266 Oled Driver for SSD1306 display",
      "version": "1.0.1",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A display driver for SSD1306 oled displays connected to an ESP8266",
      "paragraph": "A display driver for SSD1306 oled displays connected to an ESP8266",
      "website": "https://github.com/squix78/esp8266-oled-ssd1306",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/squix78/ESP8266_Oled_Driver_for_SSD1306_display-1.0.1.zip",
      "archiveFileName": "ESP8266_Oled_Driver_for_SSD1306_display-1.0.1.zip",
      "size": 110521,
      "checksum": "SHA-256:291b2df1a96808af07a910340d62ed607778c7d851ded6b55b66d489dedbd707"
    },
    {
      "name": "ESP8266 Oled Driver for SSD1306 display",
      "version": "1.0.2",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A display driver for SSD1306 oled displays connected to an ESP8266",
      "paragraph": "A display driver for SSD1306 oled displays connected to an ESP8266",
      "website": "https://github.com/squix78/esp8266-oled-ssd1306",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/squix78/ESP8266_Oled_Driver_for_SSD1306_display-1.0.2.zip",
      "archiveFileName": "ESP8266_Oled_Driver_for_SSD1306_display-1.0.2.zip",
      "size": 111009,
      "checksum": "SHA-256:066b9fa0fbbf6dc4d6b4e1bc3798e30b3f4e7395e3ca63cd973b6b4607c280e3"
    },
    {
      "name": "ESP8266 Oled Driver for SSD1306 display",
      "version": "2.0.0",
      "author": "Daniel Eichhorn, Fabrice Weinberg",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "A display driver for SSD1306 oled displays connected to an ESP8266",
      "paragraph": "A display driver for SSD1306 oled displays connected to an ESP8266",
      "website": "https://github.com/squix78/esp8266-oled-ssd1306",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/squix78/ESP8266_Oled_Driver_for_SSD1306_display-2.0.0.zip",
      "archiveFileName": "ESP8266_Oled_Driver_for_SSD1306_display-2.0.0.zip",
      "size": 128357,
      "checksum": "SHA-256:a9f666d2fa6a0b8e2bfbb9cd009fd2b69c28a60f2b0d4d3f2ce7852dee123284"
    },
    {
      "name": "due_can",
      "version": "2.0.0",
      "author": "Collin Kidder \u003ckidderc@gmail.com\u003e, Thibaut Viard, Wilfredo Molina",
      "maintainer": "Collin Kidder \u003ckidderc@gmail.com\u003e",
      "sentence": "Allows for CAN bus communications with the Arduino Due",
      "paragraph": "Implements interrupt driven communication and supports both object oriented and non-OOP callbacks",
      "website": "https://github.com/collin80/due_can",
      "category": "Communication",
      "architectures": [
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/collin80/due_can-2.0.0.zip",
      "archiveFileName": "due_can-2.0.0.zip",
      "size": 29848,
      "checksum": "SHA-256:c855e70027452ea40cb712212ef2d7c12009f9e22844b7078082a2f7a74a4f95"
    },
    {
      "name": "due_can",
      "version": "2.0.1",
      "author": "Collin Kidder \u003ckidderc@gmail.com\u003e, Thibaut Viard, Wilfredo Molina",
      "maintainer": "Collin Kidder \u003ckidderc@gmail.com\u003e",
      "sentence": "Allows for CAN bus communications with the Arduino Due",
      "paragraph": "Implements interrupt driven communication and supports both object oriented and non-OOP callbacks",
      "website": "https://github.com/collin80/due_can",
      "category": "Communication",
      "architectures": [
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/collin80/due_can-2.0.1.zip",
      "archiveFileName": "due_can-2.0.1.zip",
      "size": 29847,
      "checksum": "SHA-256:a19a6a7586fa6688b4b29b020e215762bb37a77ccf57e5980f41b976df33640d"
    },
    {
      "name": "RBD_SerialManager",
      "version": "1.0.0-alpha.1",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "A simple interface for serial communication.",
      "paragraph": "A simple interface for serial communication.",
      "website": "https://github.com/alextaujenis/RBD_SerialManager",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_SerialManager-1.0.0-alpha.1.zip",
      "archiveFileName": "RBD_SerialManager-1.0.0-alpha.1.zip",
      "size": 9018,
      "checksum": "SHA-256:bcc545965abfcc2bc042dbafb197ed35582e3744b01dc370a84b04cc3465c056"
    },
    {
      "name": "RBD_SerialManager",
      "version": "1.0.0-alpha.2",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "A simple interface for serial communication.",
      "paragraph": "A simple interface for serial communication.",
      "website": "https://github.com/alextaujenis/RBD_SerialManager",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_SerialManager-1.0.0-alpha.2.zip",
      "archiveFileName": "RBD_SerialManager-1.0.0-alpha.2.zip",
      "size": 4553,
      "checksum": "SHA-256:e4e64c4a02a242d48c88efcbbd1e3c667856a3eebf3d12a83bb55c85e7ca08cb"
    },
    {
      "name": "RBD_SerialManager",
      "version": "1.0.0-alpha.3",
      "author": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "maintainer": "Alex Taujenis \u003calex.taujenis@gmail.com\u003e",
      "sentence": "A simple interface for serial communication.",
      "paragraph": "A simple interface for serial communication.",
      "website": "https://github.com/alextaujenis/RBD_SerialManager",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/alextaujenis/RBD_SerialManager-1.0.0-alpha.3.zip",
      "archiveFileName": "RBD_SerialManager-1.0.0-alpha.3.zip",
      "size": 4741,
      "checksum": "SHA-256:c6c92cd2084f28b12400db6ffb32b7eea0fb486dfb135f2675b5aa73a90510ec"
    },
    {
      "name": "FreeRTOS",
      "version": "8.2.3-1",
      "author": "Richard Berry \u003cinfo@freertos.org\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "Real Time Operating System implemented for AVR (Uno, Leonardo, Mega).",
      "paragraph": "The primary design goals are: Easy to use, Small footprint, Robust. Uses Watchdog Timer for 30ms resolution. Slow blink = stack overflow. Fast blink = heap malloc() failure.",
      "website": "https://github.com/feilipu/Arduino_FreeRTOS_Library",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/feilipu/FreeRTOS-8.2.3-1.zip",
      "archiveFileName": "FreeRTOS-8.2.3-1.zip",
      "size": 223235,
      "checksum": "SHA-256:1124fd35b761524c3ead6bc1269f340ee41da605a4934f2e56ae75950b87a748"
    },
    {
      "name": "FreeRTOS",
      "version": "8.2.3-2",
      "author": "Richard Berry \u003cinfo@freertos.org\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "Real Time Operating System implemented for AVR (Uno, Leonardo, Mega).",
      "paragraph": "The primary design goals are: Easy to use, Small footprint, Robust. Uses Watchdog Timer for 30ms resolution. Slow blink = stack overflow. Fast blink = heap malloc() failure.",
      "website": "https://github.com/feilipu/Arduino_FreeRTOS_Library",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/feilipu/FreeRTOS-8.2.3-2.zip",
      "archiveFileName": "FreeRTOS-8.2.3-2.zip",
      "size": 229873,
      "checksum": "SHA-256:5f1e3caaaeeee7adfd1dc275e4d89bc0180b79940e975df57d09b2a1924d04f2"
    },
    {
      "name": "FreeRTOS",
      "version": "8.2.3-4",
      "author": "Richard Berry \u003cinfo@freertos.org\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "Real Time Operating System implemented for AVR (Uno, Leonardo, Mega).",
      "paragraph": "The primary design goals are: Easy to use, Small footprint, Robust. Uses Watchdog Timer for 30ms resolution. Slow blink = stack overflow. Fast blink = heap malloc() failure.",
      "website": "https://github.com/feilipu/Arduino_FreeRTOS_Library",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/feilipu/FreeRTOS-8.2.3-4.zip",
      "archiveFileName": "FreeRTOS-8.2.3-4.zip",
      "size": 229843,
      "checksum": "SHA-256:5d0d3794bcc6b72f48ffdbc31e59ec8339c30765c80ecb72f413cf3450833179"
    },
    {
      "name": "FreeRTOS",
      "version": "8.2.3-5",
      "author": "Richard Berry \u003cinfo@freertos.org\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "Real Time Operating System implemented for AVR (Uno, Leonardo, Mega).",
      "paragraph": "The primary design goals are: Easy to use, Small footprint, Robust. Uses Watchdog Timer for 30ms resolution. Slow blink = stack overflow. Fast blink = heap malloc() failure.",
      "website": "https://github.com/feilipu/Arduino_FreeRTOS_Library",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/feilipu/FreeRTOS-8.2.3-5.zip",
      "archiveFileName": "FreeRTOS-8.2.3-5.zip",
      "size": 230665,
      "checksum": "SHA-256:011ca927a314637c6d64bb374e47c718193bc510602a1ffcfa5c11219e1f6cdd"
    },
    {
      "name": "FreeRTOS",
      "version": "8.2.3-6",
      "author": "Richard Berry \u003cinfo@freertos.org\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "Real Time Operating System implemented for AVR (Uno, Leonardo, Mega).",
      "paragraph": "The primary design goals are: Easy to use, Small footprint, Robust. Uses Watchdog Timer for 30ms resolution. Slow blink = stack overflow. Fast blink = heap malloc() failure.",
      "website": "https://github.com/feilipu/Arduino_FreeRTOS_Library",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/feilipu/FreeRTOS-8.2.3-6.zip",
      "archiveFileName": "FreeRTOS-8.2.3-6.zip",
      "size": 230669,
      "checksum": "SHA-256:310e3c36580f9d09c75f42cae8229fe375d363ce5368fc3a08a33d37d9093e2b"
    },
    {
      "name": "FreeRTOS",
      "version": "8.2.3-7",
      "author": "Richard Berry \u003cinfo@freertos.org\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "Real Time Operating System implemented for AVR (Uno, Leonardo, Mega).",
      "paragraph": "The primary design goals are: Easy to use, Small footprint, Robust. Uses Watchdog Timer for 30ms resolution. Slow blink = stack overflow. Fast blink = heap malloc() failure.",
      "website": "https://github.com/feilipu/Arduino_FreeRTOS_Library",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/feilipu/FreeRTOS-8.2.3-7.zip",
      "archiveFileName": "FreeRTOS-8.2.3-7.zip",
      "size": 230663,
      "checksum": "SHA-256:302fee7003415d3501e42fb248450ddd834b98d55f3135eed9cc0e01a3c9d6a4"
    },
    {
      "name": "FreeRTOS",
      "version": "8.2.3-8",
      "author": "Richard Berry \u003cinfo@freertos.org\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "Real Time Operating System implemented for AVR (Uno, Leonardo, Mega).",
      "paragraph": "The primary design goals are: Easy to use, Small footprint, Robust. Uses Watchdog Timer for 30ms resolution. Slow blink = stack overflow. Fast blink = heap malloc() failure.",
      "website": "https://github.com/feilipu/Arduino_FreeRTOS_Library",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/feilipu/FreeRTOS-8.2.3-8.zip",
      "archiveFileName": "FreeRTOS-8.2.3-8.zip",
      "size": 230714,
      "checksum": "SHA-256:ff7af16149fb69e6b09ce0a3cfd1bc351463bc4771698082b8439d670872ca5b"
    },
    {
      "name": "FreeRTOS",
      "version": "8.2.3-9",
      "author": "Richard Berry \u003cinfo@freertos.org\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "Real Time Operating System implemented for AVR (Uno, Leonardo, Mega).",
      "paragraph": "The primary design goals are: Easy to use, Small footprint, Robust. Uses Watchdog Timer for 30ms resolution. Slow blink = stack overflow. Fast blink = heap malloc() failure.",
      "website": "https://github.com/feilipu/Arduino_FreeRTOS_Library",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/feilipu/FreeRTOS-8.2.3-9.zip",
      "archiveFileName": "FreeRTOS-8.2.3-9.zip",
      "size": 231790,
      "checksum": "SHA-256:5668ca54c30fd7fe52bd237f3084b806864a38466b4f7bb780da531a506d09c3"
    },
    {
      "name": "FreeRTOS",
      "version": "8.2.3",
      "author": "Richard Berry \u003cinfo@freertos.org\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "Real Time Operating System implemented for AVR (Uno, Leonardo, Mega).",
      "paragraph": "The primary design goals are: Easy to use, Small footprint, Robust. Uses Watchdog Timer for 30ms resolution. Slow blink = stack overflow. Fast blink = heap malloc() failure.",
      "website": "https://github.com/feilipu/Arduino_FreeRTOS_Library",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/feilipu/FreeRTOS-8.2.3.zip",
      "archiveFileName": "FreeRTOS-8.2.3.zip",
      "size": 222998,
      "checksum": "SHA-256:21526f1d26ff30a1ca4527dcc964f0444167fbacb0083d58c4f9c7fccc0ff1e8"
    },
    {
      "name": "RF24Ethernet",
      "version": "1.6.0",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "Open TCP/IP wireless/radio IoT mesh networks for Arduino",
      "paragraph": "Self-sustaining wireless sensor networks that seamlessly link together using standard protocols \u0026 networking, based on low-power nrf24l01+ radio modules. An experiment in networking, protocols and devices. See http://github.io/RF24Ethernet",
      "website": "http://tmrh20.github.io/RF24Ethernet/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TMRh20/RF24Ethernet-1.6.0.zip",
      "archiveFileName": "RF24Ethernet-1.6.0.zip",
      "size": 189941,
      "checksum": "SHA-256:d3d5e237824cd901bd407f58ebc3d9a0d952f8468291812350441a8720f49216"
    },
    {
      "name": "RF24Ethernet",
      "version": "1.6.1",
      "author": "TMRh20",
      "maintainer": "TMRh20",
      "sentence": "Open TCP/IP wireless/radio IoT mesh networks for Arduino",
      "paragraph": "Self-sustaining wireless sensor networks that seamlessly link together using standard protocols \u0026 networking, based on low-power nrf24l01+ radio modules. An experiment in networking, protocols and devices. See http://github.io/RF24Ethernet",
      "website": "http://tmrh20.github.io/RF24Ethernet/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TMRh20/RF24Ethernet-1.6.1.zip",
      "archiveFileName": "RF24Ethernet-1.6.1.zip",
      "size": 190898,
      "checksum": "SHA-256:d3068d75931b17f603c29898b24befcb26a190b23a92dd390089ee05051fb12a"
    },
    {
      "name": "ConfigurableFirmata",
      "version": "2.8.0",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/ConfigurableFirmata",
      "sentence": "This library implements the Firmata protocol as a set of plugins that can be used to create applications to remotely interface with an Arduino board.",
      "paragraph": "ConfigurableFirmata is an implementation of the Firmata protocol that breaks features such as Digital Input, Digital Output, Analog Input, Analog Output, I2C, etc into individual classes making it easier to mix and match standard features with custom features.",
      "website": "https://github.com/firmata/ConfigurableFirmata",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/firmata/ConfigurableFirmata-2.8.0.zip",
      "archiveFileName": "ConfigurableFirmata-2.8.0.zip",
      "size": 84812,
      "checksum": "SHA-256:66c87ec81e68b9cace1d9a16c77dbcaad5004c16724b8c5258ea5eef6f55e4db"
    },
    {
      "name": "ConfigurableFirmata",
      "version": "2.8.1",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/ConfigurableFirmata",
      "sentence": "This library implements the Firmata protocol as a set of plugins that can be used to create applications to remotely interface with an Arduino board.",
      "paragraph": "ConfigurableFirmata is an implementation of the Firmata protocol that breaks features such as Digital Input, Digital Output, Analog Input, Analog Output, I2C, etc into individual classes making it easier to mix and match standard features with custom features.",
      "website": "https://github.com/firmata/ConfigurableFirmata",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/firmata/ConfigurableFirmata-2.8.1.zip",
      "archiveFileName": "ConfigurableFirmata-2.8.1.zip",
      "size": 99703,
      "checksum": "SHA-256:7c3d05b6c6b3476dd21b051afe964dfce3a536f4cbe2290345a956b4b560d67a"
    },
    {
      "name": "ConfigurableFirmata",
      "version": "2.8.2",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/ConfigurableFirmata",
      "sentence": "This library implements the Firmata protocol as a set of plugins that can be used to create applications to remotely interface with an Arduino board.",
      "paragraph": "ConfigurableFirmata is an implementation of the Firmata protocol that breaks features such as Digital Input, Digital Output, Analog Input, Analog Output, I2C, etc into individual classes making it easier to mix and match standard features with custom features.",
      "website": "https://github.com/firmata/ConfigurableFirmata",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/firmata/ConfigurableFirmata-2.8.2.zip",
      "archiveFileName": "ConfigurableFirmata-2.8.2.zip",
      "size": 99682,
      "checksum": "SHA-256:67ddde75724bcdeda0feb3d7affff3b6bb29e4d04b479359870c60c83b827a84"
    },
    {
      "name": "RapifireMqttClient",
      "version": "1.0.0",
      "author": "Rapifire",
      "maintainer": "Rapifire \u003csupport@rapifire.com\u003e",
      "sentence": "Rapifire MQTT Library.",
      "paragraph": "The library is a mqtt client of the rapifire.com platform.",
      "website": "https://github.com/rapifireio/rapifire-arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/rapifireio/RapifireMqttClient-1.0.0.zip",
      "archiveFileName": "RapifireMqttClient-1.0.0.zip",
      "size": 5872,
      "checksum": "SHA-256:62d985825a4fbfcfa0d58d0db9045ccc7b09febfc8012080b992326acc71c7ff"
    },
    {
      "name": "RapifireMqttClient",
      "version": "1.1.0",
      "author": "Rapifire",
      "maintainer": "Rapifire \u003csupport@rapifire.com\u003e",
      "sentence": "Rapifire MQTT Library.",
      "paragraph": "The library is a mqtt client of the rapifire.com platform.",
      "website": "https://github.com/rapifireio/rapifire-arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/rapifireio/RapifireMqttClient-1.1.0.zip",
      "archiveFileName": "RapifireMqttClient-1.1.0.zip",
      "size": 6297,
      "checksum": "SHA-256:3148deccbb65a0af6d4eb9f341de6598dc7a721cca576e79d5922a6b10b0744b"
    },
    {
      "name": "RapifireMqttClient",
      "version": "1.2.0",
      "author": "Rapifire",
      "maintainer": "Rapifire \u003csupport@rapifire.com\u003e",
      "sentence": "Enables the communication between Arduino and RAPIFIRE platform.",
      "paragraph": "The library is a mqtt client that allows you to easily integrate your Arduino projects with RAPIFIRE platform.",
      "website": "https://github.com/rapifireio/rapifire-arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/rapifireio/RapifireMqttClient-1.2.0.zip",
      "archiveFileName": "RapifireMqttClient-1.2.0.zip",
      "size": 6538,
      "checksum": "SHA-256:76a4738aa7206e1a1357fbb70483eac580908fad1aa3da4002cb5f09191add24"
    },
    {
      "name": "RapifireMqttClient",
      "version": "1.3.0",
      "author": "RAPIFIRE",
      "maintainer": "Rapifire \u003csupport@rapifire.com\u003e",
      "sentence": "Enables the communication between Arduino and RAPIFIRE platform.",
      "paragraph": "The library is a mqtt client that allows you to easily integrate your Arduino projects with RAPIFIRE platform.",
      "website": "https://github.com/rapifireio/rapifire-arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/rapifireio/RapifireMqttClient-1.3.0.zip",
      "archiveFileName": "RapifireMqttClient-1.3.0.zip",
      "size": 12762,
      "checksum": "SHA-256:1e6aa9ee1a8ab57157af5c243b7d09f02fd8a3c28590e28555def90a0ac49341"
    },
    {
      "name": "RapifireMqttClient",
      "version": "1.3.1",
      "author": "RAPIFIRE",
      "maintainer": "Rapifire \u003csupport@rapifire.com\u003e",
      "sentence": "Enables the communication between Arduino and RAPIFIRE platform.",
      "paragraph": "The library is a mqtt client that allows you to easily integrate your Arduino projects with RAPIFIRE platform.",
      "website": "https://github.com/rapifireio/rapifire-arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/rapifireio/RapifireMqttClient-1.3.1.zip",
      "archiveFileName": "RapifireMqttClient-1.3.1.zip",
      "size": 12754,
      "checksum": "SHA-256:50e4f5a49f6ecde44734e5f5b84be17d8545ba430385f731e99909770daeb3a9"
    },
    {
      "name": "asip",
      "version": "0.1.0",
      "author": "Michael Margolis \u003cm.margolis@mdx.ac.uk\u003e, Franco Raimondi\u003cf.raimondi@mdx.ac.uk\u003e",
      "maintainer": "Michael Margolis \u003cm.margolis@mdx.ac.uk\u003e, Franco Raimondi\u003cf.raimondi@mdx.ac.uk\u003e",
      "sentence": "A library to control a board using a stream (e.g., serial)",
      "paragraph": "This library implements the core ASIP protocol for I/O pins and some additional simple services",
      "website": "https://bitbucket.org/mdxmase/asip",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mdxmase/asip-0.1.0.zip",
      "archiveFileName": "asip-0.1.0.zip",
      "size": 23780,
      "checksum": "SHA-256:2ace17f56317b5add492b7fdb5b4e918ad78ee30f40f2eb7e1f9440b9506d07f"
    },
    {
      "name": "asip-services",
      "version": "0.1.0",
      "author": "Michael Margolis \u003cm.margolis@mdx.ac.uk\u003e, Franco Raimondi\u003cf.raimondi@mdx.ac.uk\u003e",
      "maintainer": "Michael Margolis \u003cm.margolis@mdx.ac.uk\u003e, Franco Raimondi\u003cf.raimondi@mdx.ac.uk\u003e",
      "sentence": "A library to extend the core Asip library with additional services",
      "paragraph": "This library includes additional services for Asip that do not require external libraries: servo motors, sonar distance sensors and tones.",
      "website": "https://bitbucket.org/mdxmase/asip-services",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mdxmase/asip_services-0.1.0.zip",
      "archiveFileName": "asip_services-0.1.0.zip",
      "size": 11769,
      "checksum": "SHA-256:912ab744156cf530c484dc4c0614b692eb8c0b45ae130ba1ead237b0a6cb24a9"
    },
    {
      "name": "ClosedCube OPT3001",
      "version": "1.0.1",
      "author": "ClosedCube",
      "maintainer": "ClosedCube \u003cgithub@closedcube.com\u003e",
      "sentence": "Arduino library for Texas Instruments OPT3001 Digital Ambient Light Sensor",
      "paragraph": "Arduino library for Texas Instruments OPT3001 Digital Ambient Light Sensor",
      "website": "https://github.com/closedcube/B060_OPT3001_PRO",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/closedcube/ClosedCube_OPT3001-1.0.1.zip",
      "archiveFileName": "ClosedCube_OPT3001-1.0.1.zip",
      "size": 6248,
      "checksum": "SHA-256:aa891d38bfb3267f959fcaccc84ef0a2c624395a7cdd103100a9b5ad6863a827"
    },
    {
      "name": "Smartcar shield",
      "version": "1.0.0",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "Arduino library for controlling the Smartcar platform",
      "website": "https://github.com/platisd/smartcar-shield",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/platisd/Smartcar_shield-1.0.0.zip",
      "archiveFileName": "Smartcar_shield-1.0.0.zip",
      "size": 104656,
      "checksum": "SHA-256:c975cda5e2e476b9709512f34264842b84acdcef250a38675352b46b52d473f4"
    },
    {
      "name": "Smartcar shield",
      "version": "1.1.0",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "Arduino library for controlling the Smartcar platform",
      "website": "https://github.com/platisd/smartcar_shield",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/platisd/Smartcar_shield-1.1.0.zip",
      "archiveFileName": "Smartcar_shield-1.1.0.zip",
      "size": 105128,
      "checksum": "SHA-256:a8185575a98f002d67035e9c4b673cebc47e8de368d76bd6fa684b5bbe40fad7"
    },
    {
      "name": "Smartcar shield",
      "version": "1.1.1",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "Arduino library for controlling the Smartcar platform",
      "website": "https://github.com/platisd/smartcar_shield",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/platisd/Smartcar_shield-1.1.1.zip",
      "archiveFileName": "Smartcar_shield-1.1.1.zip",
      "size": 105132,
      "checksum": "SHA-256:cea56d6b0814282d92358661dca58cfc77320a8c15301664fbbbc87fa227cfa7"
    },
    {
      "name": "Smartcar shield",
      "version": "1.1.2",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for the Smartcar Arduino shield, that includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/platisd/Smartcar_shield-1.1.2.zip",
      "archiveFileName": "Smartcar_shield-1.1.2.zip",
      "size": 108904,
      "checksum": "SHA-256:090afca724ca07f517beade4947f77bc4df4e6a2f4662a233b2b1d103221f9db"
    },
    {
      "name": "Smartcar shield",
      "version": "2.0.0",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for the Smartcar Arduino shield, that includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/platisd/Smartcar_shield-2.0.0.zip",
      "archiveFileName": "Smartcar_shield-2.0.0.zip",
      "size": 109220,
      "checksum": "SHA-256:cc251294abf223f7765670b7296f18a90e35c635ec23edbc5bb5113a7ab85882"
    },
    {
      "name": "Smartcar shield",
      "version": "2.0.1",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for the Smartcar Arduino shield, that includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/platisd/Smartcar_shield-2.0.1.zip",
      "archiveFileName": "Smartcar_shield-2.0.1.zip",
      "size": 109217,
      "checksum": "SHA-256:9bd94ac3f1301d75b8edde80e0b227e44a25e72e395eed378f21b56da1614c72"
    },
    {
      "name": "Smartcar shield",
      "version": "3.0.0",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for the Smartcar Arduino shield, that includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/platisd/Smartcar_shield-3.0.0.zip",
      "archiveFileName": "Smartcar_shield-3.0.0.zip",
      "size": 114890,
      "checksum": "SHA-256:5620094eb522c47bf887f9e24fd380390553281574d794accb07f2dd49188f2d"
    },
    {
      "name": "Smartcar shield",
      "version": "3.0.1",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for the Smartcar Arduino shield, that includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/platisd/Smartcar_shield-3.0.1.zip",
      "archiveFileName": "Smartcar_shield-3.0.1.zip",
      "size": 160619,
      "checksum": "SHA-256:d58ea605fc2683d3f099609214ab107b2da14e78e1353753c94a86306a7db715"
    },
    {
      "name": "Smartcar shield",
      "version": "3.0.2",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for the Smartcar Arduino shield, that includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/platisd/Smartcar_shield-3.0.2.zip",
      "archiveFileName": "Smartcar_shield-3.0.2.zip",
      "size": 161126,
      "checksum": "SHA-256:1a5ee6cff30db60456c428e7aa1dc397fbd05e6286d9559210c5774b9554a301"
    },
    {
      "name": "Smartcar shield",
      "version": "3.0.4",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for the Smartcar Arduino shield, that includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/platisd/Smartcar_shield-3.0.4.zip",
      "archiveFileName": "Smartcar_shield-3.0.4.zip",
      "size": 159875,
      "checksum": "SHA-256:494747ec025d2437782fc035d09c1bee7ccaf2a5336e6a3192416c280480a577"
    },
    {
      "name": "Smartcar shield",
      "version": "3.1.0",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for the Smartcar Arduino shield, that includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/platisd/Smartcar_shield-3.1.0.zip",
      "archiveFileName": "Smartcar_shield-3.1.0.zip",
      "size": 160835,
      "checksum": "SHA-256:e77d91e6c59eb0c5da068cb6c4c790412853b4293d1f552bd0e79c7efda32534"
    },
    {
      "name": "Smartcar shield",
      "version": "3.1.3",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for, but not limited to, the Smartcar Arduino shield, which includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/platisd/Smartcar_shield-3.1.3.zip",
      "archiveFileName": "Smartcar_shield-3.1.3.zip",
      "size": 161825,
      "checksum": "SHA-256:463958e686e53339938fa212956c8460be1e16b59c8d9485b0c4a1e8a8ef8fd2"
    },
    {
      "name": "Smartcar shield",
      "version": "3.1.4",
      "author": "Dimitris Platis",
      "maintainer": "Dimitris Platis \u003cdimitris@plat.is\u003e",
      "sentence": "Arduino library for controlling the Smartcar platform",
      "paragraph": "The Smartcar shield library allows the user to control a small robotic vehicular platform, the Smartcar, in an easy and cost effective way. It is intended for, but not limited to, the Smartcar Arduino shield, which includes an L293D h-bridge for controlling two DC motors and a GY-50 gyroscope module (based on the L3G4200D sensor).",
      "website": "http://plat.is/smartcar",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/platisd/Smartcar_shield-3.1.4.zip",
      "archiveFileName": "Smartcar_shield-3.1.4.zip",
      "size": 166479,
      "checksum": "SHA-256:72e9ed27a77859af6913d930dd84cdb677375f3191eff432e378681d052180a8"
    },
    {
      "name": "NTPClient",
      "version": "1.0.0",
      "author": "Fabrice Weinberg",
      "maintainer": "Fabrice Weinberg \u003cfabrice@weinberg.me\u003e",
      "sentence": "An NTPClient to connect to a time server",
      "paragraph": "Get time from a NTP server and keep it in sync.",
      "website": "https://github.com/FWeinb/NTPClient",
      "category": "Timing",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/FWeinb/NTPClient-1.0.0.zip",
      "archiveFileName": "NTPClient-1.0.0.zip",
      "size": 5347,
      "checksum": "SHA-256:a1dbe41ea0d15530010524b7ce3abc7186b0e412ce1dab7cc4ac6b6e35350972"
    },
    {
      "name": "NTPClient",
      "version": "2.0.0",
      "author": "Fabrice Weinberg",
      "maintainer": "Fabrice Weinberg \u003cfabrice@weinberg.me\u003e",
      "sentence": "An NTPClient to connect to a time server",
      "paragraph": "Get time from a NTP server and keep it in sync.",
      "website": "https://github.com/FWeinb/NTPClient",
      "category": "Timing",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/FWeinb/NTPClient-2.0.0.zip",
      "archiveFileName": "NTPClient-2.0.0.zip",
      "size": 5124,
      "checksum": "SHA-256:96fba4b651c45d09bea765d9b61a7988d4492b2063a541f3df51c78b8d2e76b3"
    },
    {
      "name": "HDC1000",
      "version": "1.0.0",
      "author": "Yuichi Tateno",
      "maintainer": "Yuichi Tateno",
      "sentence": "A temperature and humidity sensor library for HDC1000",
      "paragraph": "A temperature and humidity sensor library for HDC1000",
      "website": "https://github.com/hotchpotch/Arduino-HDC1000.git",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/hotchpotch/HDC1000-1.0.0.zip",
      "archiveFileName": "HDC1000-1.0.0.zip",
      "size": 4092,
      "checksum": "SHA-256:dad0753fe2db201ed60e96c68888407999b0ed492f2a0cb90b124c681698638d"
    },
    {
      "name": "RESTClient",
      "version": "1.0.0",
      "author": "Robert Cuthbertson",
      "maintainer": "Robbie \u003crobbie@robbie-remote.com\u003e",
      "sentence": "Enables sending REST messages using Arduino Ethernet. For all boards.",
      "paragraph": "With this library you can use Arduino Ethernet (shield or board) to send your sensor data via HTTP query args as Internet Of Things (IOT) messages. The library provides 'REST' Client functionality. This library uses the Ethernet library to connect to local networks and/or the Internet with DHCP and DNS.",
      "website": "https://www.github.com/robbie-remote/RESTClient",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/robbie-remote/RESTClient-1.0.0.zip",
      "archiveFileName": "RESTClient-1.0.0.zip",
      "size": 6144,
      "checksum": "SHA-256:1bf9e5c4789278051b96e442e12cd0befbf64eeb904efd03087fa80d7bc28656"
    },
    {
      "name": "WiFiEsp",
      "version": "0.1.0",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino WiFi library for ESP8266",
      "paragraph": "Arduino WiFi library for ESP8266",
      "website": "https://github.com/bportaluri/WiFiEsp",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bportaluri/WiFiEsp-0.1.0.zip",
      "archiveFileName": "WiFiEsp-0.1.0.zip",
      "size": 36649,
      "checksum": "SHA-256:233be1aebb59559bdd8988ef16de8dffca6a88c9865939e155b8cf5e1818fd10"
    },
    {
      "name": "WiFiEsp",
      "version": "1.0.0",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino WiFi library for ESP8266",
      "paragraph": "Arduino WiFi library for ESP8266. Works only with SDK version 1.1.1 and above (AT version 0.25 and above).",
      "website": "https://github.com/bportaluri/WiFiEsp",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bportaluri/WiFiEsp-1.0.0.zip",
      "archiveFileName": "WiFiEsp-1.0.0.zip",
      "size": 41211,
      "checksum": "SHA-256:5cb2df82f9a847634d5c1e1d2c542622d72b4e7ba961a0ed4385fc9b47818d5d"
    },
    {
      "name": "WiFiEsp",
      "version": "1.1.0",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino WiFi library for ESP8266",
      "paragraph": "Arduino WiFi library for ESP8266. Works only with SDK version 1.1.1 and above (AT version 0.25 and above).",
      "website": "https://github.com/bportaluri/WiFiEsp",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bportaluri/WiFiEsp-1.1.0.zip",
      "archiveFileName": "WiFiEsp-1.1.0.zip",
      "size": 42099,
      "checksum": "SHA-256:a6fe516ea65eea54c73be906e17f6befa8087ac6f340a7963d1c8bf551728cc0"
    },
    {
      "name": "WiFiEsp",
      "version": "1.2.0",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino WiFi library for ESP8266",
      "paragraph": "Arduino WiFi library for ESP8266. Works only with SDK version 1.1.1 and above (AT version 0.25 and above).",
      "website": "https://github.com/bportaluri/WiFiEsp",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bportaluri/WiFiEsp-1.2.0.zip",
      "archiveFileName": "WiFiEsp-1.2.0.zip",
      "size": 41879,
      "checksum": "SHA-256:0a84b7fdb985b680c815c6b85e83edb433cc36390834899ade8d26ced96e6bcc"
    },
    {
      "name": "WiFiEsp",
      "version": "1.3.0",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino WiFi library for ESP8266",
      "paragraph": "Arduino WiFi library for ESP8266. Works only with SDK version 1.1.1 and above (AT version 0.25 and above).",
      "website": "https://github.com/bportaluri/WiFiEsp",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bportaluri/WiFiEsp-1.3.0.zip",
      "archiveFileName": "WiFiEsp-1.3.0.zip",
      "size": 46655,
      "checksum": "SHA-256:166b5801169da4fc24a52b7b9dacee967d4e44b72f209c7379eb0434dc46881c"
    },
    {
      "name": "WiFiEsp",
      "version": "1.4.0",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino WiFi library for ESP8266",
      "paragraph": "Arduino WiFi library for ESP8266. Works only with SDK version 1.1.1 and above (AT version 0.25 and above).",
      "website": "https://github.com/bportaluri/WiFiEsp",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bportaluri/WiFiEsp-1.4.0.zip",
      "archiveFileName": "WiFiEsp-1.4.0.zip",
      "size": 47031,
      "checksum": "SHA-256:a6c5e8f07f4f06edfd3b9bd69f1196e998e44ba19c392e6c89f4130bff9d97df"
    },
    {
      "name": "WiFiEsp",
      "version": "1.4.1",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino WiFi library for ESP8266",
      "paragraph": "Arduino WiFi library for ESP8266. Works only with SDK version 1.1.1 and above (AT version 0.25 and above).",
      "website": "https://github.com/bportaluri/WiFiEsp",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bportaluri/WiFiEsp-1.4.1.zip",
      "archiveFileName": "WiFiEsp-1.4.1.zip",
      "size": 51606,
      "checksum": "SHA-256:6544a5f7220f944da769eace62ad49e815919e8a13abe1dac7e1d44270777409"
    },
    {
      "name": "WiFiEsp",
      "version": "1.4.2",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino WiFi library for ESP8266",
      "paragraph": "Arduino WiFi library for ESP8266. Works only with SDK version 1.1.1 and above (AT version 0.25 and above).",
      "website": "https://github.com/bportaluri/WiFiEsp",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bportaluri/WiFiEsp-1.4.2.zip",
      "archiveFileName": "WiFiEsp-1.4.2.zip",
      "size": 51640,
      "checksum": "SHA-256:4719075e668cb1662319793f160d5acfe1c109f74612c0dc03ab48eaa2e23c27"
    },
    {
      "name": "WiFiEsp",
      "version": "1.5.0",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino WiFi library for ESP8266",
      "paragraph": "Arduino WiFi library for ESP8266. Works only with SDK version 1.1.1 and above (AT version 0.25 and above).",
      "website": "https://github.com/bportaluri/WiFiEsp",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bportaluri/WiFiEsp-1.5.0.zip",
      "archiveFileName": "WiFiEsp-1.5.0.zip",
      "size": 53896,
      "checksum": "SHA-256:e7913141c80bbfc4698ca0db6406aae99a06ce664bbb026f3c66999d54ef733a"
    },
    {
      "name": "WiFiEsp",
      "version": "1.5.1",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino WiFi library for ESP8266",
      "paragraph": "Arduino WiFi library for ESP8266. Works only with SDK version 1.1.1 and above (AT version 0.25 and above).",
      "website": "https://github.com/bportaluri/WiFiEsp",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bportaluri/WiFiEsp-1.5.1.zip",
      "archiveFileName": "WiFiEsp-1.5.1.zip",
      "size": 53936,
      "checksum": "SHA-256:059ffb1bdd9315a3cd17672f0f402b851ab760fec9069a88e7facf368b7cfcbe"
    },
    {
      "name": "WiFiEsp",
      "version": "1.6.0",
      "author": "bportaluri",
      "maintainer": "Bruno Portaluri \u003cbportaluri@gmail.com\u003e",
      "sentence": "Arduino WiFi library for ESP8266",
      "paragraph": "Arduino WiFi library for ESP8266. Works only with SDK version 1.1.1 and above (AT version 0.25 and above).",
      "website": "https://github.com/bportaluri/WiFiEsp",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bportaluri/WiFiEsp-1.6.0.zip",
      "archiveFileName": "WiFiEsp-1.6.0.zip",
      "size": 56127,
      "checksum": "SHA-256:9caf3db3d08b296062d3382a268f643807c74c9e663117c028459621aba9e94e"
    },
    {
      "name": "WebServer",
      "version": "1.0.0",
      "author": "Robot Club KMITL Thailand",
      "maintainer": "Phanuphong Thanatkha \u003cmonoblos_gconsole@hotmail.com\u003e, Somsin Thongkrairat \u003csomsin.to@hotmail.com\u003e",
      "sentence": "Arduino library for I-Bot camp.",
      "paragraph": "Sensor library was removed.",
      "website": "http://robot.kmitl.net/",
      "category": "Robotic",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/somsinchai/WebServer-1.0.0.zip",
      "archiveFileName": "WebServer-1.0.0.zip",
      "size": 4536,
      "checksum": "SHA-256:f92ca8249223e989a96f4f6398c2326764c7ee3e22caf5859b3564164174cb9d"
    },
    {
      "name": "IBot",
      "version": "1.2.0",
      "author": "Robot Club KMITL Thailand",
      "maintainer": "Phanuphong Thanatkha \u003cmonoblos_gconsole@hotmail.com\u003e, Somsin Thongkrairat \u003csomsin.to@hotmail.com\u003e",
      "sentence": "Arduino library for I-Bot camp.",
      "paragraph": "Sensor library was removed.",
      "website": "http://robot.kmitl.net/",
      "category": "Robotic",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/somsinchai/IBot-1.2.0.zip",
      "archiveFileName": "IBot-1.2.0.zip",
      "size": 4414,
      "checksum": "SHA-256:e44eb16ae75056275c9d594e85beae6d1fca3ad5e9d60cf82d19d4c449992817"
    },
    {
      "name": "IBot",
      "version": "1.3.0",
      "author": "Robot Club KMITL Thailand",
      "maintainer": "Phanuphong Thanatkha \u003cmonoblos_gconsole@hotmail.com\u003e, Somsin Thongkrairat \u003csomsin.to@hotmail.com\u003e",
      "sentence": "Arduino library for I-Bot camp.",
      "paragraph": "Sensor library was removed.",
      "website": "http://robot.kmitl.net/",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/somsinchai/IBot-1.3.0.zip",
      "archiveFileName": "IBot-1.3.0.zip",
      "size": 8262,
      "checksum": "SHA-256:2b08c99df8ae1a8f93cd70a08ba3f6b22c65265d8fac3771777485955f0933bc"
    },
    {
      "name": "SwissHandmade MiniPirate",
      "version": "1.0.0",
      "author": "SwissHandmade",
      "maintainer": "Oli \u003colivier.chatelain@gmail.com\u003e",
      "sentence": "Commandline for GPIO, I2C and CPU manipulations",
      "paragraph": "To scan I2C, read/write GPIO, read/write EEPROM and read CPU informations from any Serial terminal. Ideal for exploring new devices without any code writing.",
      "website": "https://github.com/chatelao/MiniPirate",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/chatelao/SwissHandmade_MiniPirate-1.0.0.zip",
      "archiveFileName": "SwissHandmade_MiniPirate-1.0.0.zip",
      "size": 36922,
      "checksum": "SHA-256:98d279651ed4848815b366d96e2fe92f67c867ba42a5389635d364f4ef8962e2"
    },
    {
      "name": "SwissHandmade MiniPirate",
      "version": "1.1.0",
      "author": "SwissHandmade",
      "maintainer": "Oli \u003colivier.chatelain@gmail.com\u003e",
      "sentence": "Commandline for GPIO, I2C and CPU manipulations",
      "paragraph": "To scan I2C, read/write GPIO, read/write EEPROM and read CPU informations from any Serial terminal. Ideal for exploring new devices without any code writing.",
      "website": "https://github.com/chatelao/MiniPirate",
      "category": "Device Control",
      "architectures": [
        "avr",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/chatelao/SwissHandmade_MiniPirate-1.1.0.zip",
      "archiveFileName": "SwissHandmade_MiniPirate-1.1.0.zip",
      "size": 36833,
      "checksum": "SHA-256:701bea712943041d3f5c40a7cbeef30121ba7d3d3bcbea1f9a9926159e6314ae"
    },
    {
      "name": "BLESerial",
      "version": "1.0.0",
      "author": "Shrikant Patnaik \u003cme@shrikantpatnaik.com\u003e",
      "maintainer": "Shrikant Patnaik \u003cme@shrikantpatnaik.com\u003e",
      "sentence": "A library to communicate with BLE Serial Modules",
      "paragraph": "Supports most Serial BLE modules, customizable.",
      "website": "http://github.com/5pIO/BLESerial",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/5pIO/BLESerial-1.0.0.zip",
      "archiveFileName": "BLESerial-1.0.0.zip",
      "size": 2929,
      "checksum": "SHA-256:c768d8a52122208b8c089765f5906ecceab3743ce5a00c6fc48dcf36637fa062"
    },
    {
      "name": "BLESerial",
      "version": "1.1.0",
      "author": "Shrikant Patnaik \u003cme@shrikantpatnaik.com\u003e",
      "maintainer": "Shrikant Patnaik \u003cme@shrikantpatnaik.com\u003e",
      "sentence": "A library to communicate with BLE Serial Modules",
      "paragraph": "Supports most Serial BLE modules, customizable.",
      "website": "http://github.com/5pIO/BLESerial",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/5pIO/BLESerial-1.1.0.zip",
      "archiveFileName": "BLESerial-1.1.0.zip",
      "size": 3710,
      "checksum": "SHA-256:ad9295466f7d4ba97734bc87046fc67492730963bb0c269ebc6bd1f2998f7b61"
    },
    {
      "name": "ESP8266 Weather Station",
      "version": "0.0.9",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "ESP8266 based internet connected Weather Station",
      "paragraph": "ESP8266 based internet connected Weather Station",
      "website": "https://github.com/squix78/esp8266-weather-station",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/squix78/ESP8266_Weather_Station-0.0.9.zip",
      "archiveFileName": "ESP8266_Weather_Station-0.0.9.zip",
      "size": 25000,
      "checksum": "SHA-256:8d2475646dfda5ba6a775ad13856e027a0960a0b0b6206623d1edf03ebfcc38a"
    },
    {
      "name": "ESP8266 Weather Station",
      "version": "1.0.1",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "ESP8266 based internet connected Weather Station",
      "paragraph": "ESP8266 based internet connected Weather Station",
      "website": "https://github.com/squix78/esp8266-weather-station",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/squix78/ESP8266_Weather_Station-1.0.1.zip",
      "archiveFileName": "ESP8266_Weather_Station-1.0.1.zip",
      "size": 29127,
      "checksum": "SHA-256:2ac4264194ef55e742a8d92de8f7c22e3a06f04d6641061a46df05a6c137ecdb"
    },
    {
      "name": "ESP8266 Weather Station",
      "version": "1.0.2",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "ESP8266 based internet connected Weather Station",
      "paragraph": "ESP8266 based internet connected Weather Station",
      "website": "https://github.com/squix78/esp8266-weather-station",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/squix78/ESP8266_Weather_Station-1.0.2.zip",
      "archiveFileName": "ESP8266_Weather_Station-1.0.2.zip",
      "size": 29162,
      "checksum": "SHA-256:99aa0c3f63623ed4f6b2fd81e664fef82b0e69719194dad997028df6b496b49a"
    },
    {
      "name": "ESP8266 Weather Station",
      "version": "1.0.3",
      "author": "Daniel Eichhorn",
      "maintainer": "Daniel Eichhorn \u003csquix78@gmail.com\u003e",
      "sentence": "ESP8266 based internet connected Weather Station",
      "paragraph": "ESP8266 based internet connected Weather Station",
      "website": "https://github.com/squix78/esp8266-weather-station",
      "category": "Display",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/squix78/ESP8266_Weather_Station-1.0.3.zip",
      "archiveFileName": "ESP8266_Weather_Station-1.0.3.zip",
      "size": 50123,
      "checksum": "SHA-256:4e4ee0b3d6cf7543ee3c0c728d7e4dd3a693e588a3ea2d58fd44d8e9d7fe79fb"
    },
    {
      "name": "WebSockets",
      "version": "1.0.0",
      "author": "Markus Sattler",
      "maintainer": "Markus Sattler",
      "sentence": "WebSockets for Arduino (Server + Client)",
      "website": "https://github.com/Links2004/arduinoWebSockets",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Links2004/WebSockets-1.0.0.zip",
      "archiveFileName": "WebSockets-1.0.0.zip",
      "size": 33460,
      "checksum": "SHA-256:5dc3423a61abbf9675d693a28cd0504d9df1abfb548a453d98e2cb77983664c1"
    },
    {
      "name": "WebSockets",
      "version": "1.1.0",
      "author": "Markus Sattler",
      "maintainer": "Markus Sattler",
      "sentence": "WebSockets for Arduino (Server + Client)",
      "website": "https://github.com/Links2004/arduinoWebSockets",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Links2004/WebSockets-1.1.0.zip",
      "archiveFileName": "WebSockets-1.1.0.zip",
      "size": 33403,
      "checksum": "SHA-256:6c9267792eba92c18fd33f39e225f38ad8631426a31f43d2e37ed7f11c2f6faf"
    },
    {
      "name": "WebSockets",
      "version": "1.2.0",
      "author": "Markus Sattler",
      "maintainer": "Markus Sattler",
      "sentence": "WebSockets for Arduino (Server + Client)",
      "website": "https://github.com/Links2004/arduinoWebSockets",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Links2004/WebSockets-1.2.0.zip",
      "archiveFileName": "WebSockets-1.2.0.zip",
      "size": 35556,
      "checksum": "SHA-256:d12a9b9c316f7a935085c4e64c4012113e9566f808e408b01c9cfb8d6f08fd44"
    },
    {
      "name": "WebSockets",
      "version": "1.3.0",
      "author": "Markus Sattler",
      "maintainer": "Markus Sattler",
      "sentence": "WebSockets for Arduino (Server + Client)",
      "website": "https://github.com/Links2004/arduinoWebSockets",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Links2004/WebSockets-1.3.0.zip",
      "archiveFileName": "WebSockets-1.3.0.zip",
      "size": 41944,
      "checksum": "SHA-256:dfc2d818143b6b1e5360ec20d80e91c1aac6a346fd3b6fcfdb14d4590cf9d897"
    },
    {
      "name": "WebSockets",
      "version": "2.0.0",
      "author": "Markus Sattler",
      "maintainer": "Markus Sattler",
      "sentence": "WebSockets for Arduino (Server + Client)",
      "paragraph": "use 2.0 for ESP and 1.3 for AVR",
      "website": "https://github.com/Links2004/arduinoWebSockets",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Links2004/WebSockets-2.0.0.zip",
      "archiveFileName": "WebSockets-2.0.0.zip",
      "size": 45660,
      "checksum": "SHA-256:d5efd668a361043d069b4b1f630844dbbfd0d2f2027f290b40474ad7caa33646"
    },
    {
      "name": "Queuetue HX711 Library",
      "version": "1.0.1",
      "author": "Scott Russell \u003cscott@queuetue.com\u003e",
      "maintainer": "Scott Russell \u003cscott@queuetue.com\u003e",
      "sentence": "Simple driver for the HX711 ADC.",
      "paragraph": "Allows you to use the inexpensive HX711 strain gauge amplifier and 24-bit ADC to build scales, force gauges and other sensors.",
      "website": "https://github.com/queuetue/Q2-HX711-Arduino-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/queuetue/Queuetue_HX711_Library-1.0.1.zip",
      "archiveFileName": "Queuetue_HX711_Library-1.0.1.zip",
      "size": 3987,
      "checksum": "SHA-256:23edb768453d566927b2fbf245f9b2389d84c92498bf4c660daa5c6ad7c228ef"
    },
    {
      "name": "Queuetue Digital Balance Library",
      "version": "1.0.2",
      "author": "Queuetue",
      "maintainer": "queuetue \u003cinfo@queuetue.com\u003e",
      "sentence": "A library of functions to build a digital balance",
      "paragraph": "Includes taring, calibration",
      "website": "https://github.com/queuetue/Q2-Balance-Arduino-Library",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/queuetue/Queuetue_Digital_Balance_Library-1.0.2.zip",
      "archiveFileName": "Queuetue_Digital_Balance_Library-1.0.2.zip",
      "size": 6173,
      "checksum": "SHA-256:d6df8e7867790b5b34e2c4a9a5f214950decb5616add17328e6498e74d36a6dd"
    },
    {
      "name": "Queuetue Digital Balance Library",
      "version": "1.0.3",
      "author": "Scott Russell \u003cscott@queuetue.com\u003e",
      "maintainer": "Scott Russell \u003cscott@queuetue.com\u003e",
      "sentence": "A library of functions to build a digital balance",
      "paragraph": "Includes smoothing, taring and calibration.",
      "website": "https://github.com/queuetue/Q2-Balance-Arduino-Library",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/queuetue/Queuetue_Digital_Balance_Library-1.0.3.zip",
      "archiveFileName": "Queuetue_Digital_Balance_Library-1.0.3.zip",
      "size": 6273,
      "checksum": "SHA-256:f891a6c85cbba913a0b6c7c401be6b924bb718be5ef0cd15bb19da20eed4b1ff"
    },
    {
      "name": "Queuetue Digital Balance Library",
      "version": "1.0.4",
      "author": "Scott Russell \u003cscott@queuetue.com\u003e",
      "maintainer": "Scott Russell \u003cscott@queuetue.com\u003e",
      "sentence": "A library of functions to build a digital balance",
      "paragraph": "Includes smoothing, taring and calibration.",
      "website": "https://github.com/queuetue/Q2-Balance-Arduino-Library",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/queuetue/Queuetue_Digital_Balance_Library-1.0.4.zip",
      "archiveFileName": "Queuetue_Digital_Balance_Library-1.0.4.zip",
      "size": 7019,
      "checksum": "SHA-256:c212ae3418f04b0258759783bd77f52ce737c40eb467684014970a03629ced2a"
    },
    {
      "name": "Queuetue Digital Balance Library",
      "version": "1.0.5",
      "author": "Scott Russell \u003cscott@queuetue.com\u003e",
      "maintainer": "Scott Russell \u003cscott@queuetue.com\u003e",
      "sentence": "A library of functions to build a digital balance",
      "paragraph": "Includes smoothing, taring and calibration.",
      "website": "https://github.com/queuetue/Q2-Balance-Arduino-Library",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/queuetue/Queuetue_Digital_Balance_Library-1.0.5.zip",
      "archiveFileName": "Queuetue_Digital_Balance_Library-1.0.5.zip",
      "size": 7447,
      "checksum": "SHA-256:9132c6919336da3e2b805fbb76d221589aaaea7a6038a886a38c0a0eefc48680"
    },
    {
      "name": "Queuetue Digital Balance Library",
      "version": "1.0.6",
      "author": "Scott Russell \u003cscott@queuetue.com\u003e",
      "maintainer": "Scott Russell \u003cscott@queuetue.com\u003e",
      "sentence": "A library of functions to build a digital balance",
      "paragraph": "Includes smoothing, taring and calibration.",
      "website": "https://github.com/queuetue/Q2-Balance-Arduino-Library",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/queuetue/Queuetue_Digital_Balance_Library-1.0.6.zip",
      "archiveFileName": "Queuetue_Digital_Balance_Library-1.0.6.zip",
      "size": 7317,
      "checksum": "SHA-256:bbb701d2899f564d743c0ddbcab160256521f688686e93c8e4d4736c4df6fe8f"
    },
    {
      "name": "BME280",
      "version": "1.0.0",
      "author": "Tyler Glenn \u003cprotglenn@gmail.com\u003e",
      "maintainer": "Tyler Glenn \u003cprotglenn@gmail.com\u003e",
      "sentence": "Provides a library for reading and interpreting Bosch BME280 environmental sensor data.",
      "paragraph": "Reads temperature, humidity, and pressure. Calculates altitude and dew point. Provides functions for english and metric. Also reads pressure in Pa, hPa, inHg, atm, bar, torr, N/m^2 and psi.",
      "website": "github.com/finitespace/BME280",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/finitespace/BME280-1.0.0.zip",
      "archiveFileName": "BME280-1.0.0.zip",
      "size": 24089,
      "checksum": "SHA-256:7ebc61662b7a25e8d322995af4f267e7fd4c5e3ecf17be4406acfd0885cb260f"
    },
    {
      "name": "Oregon",
      "version": "1.0.0",
      "author": "Mickael Hubert, Dominique Pierre, Olivier Lebrun",
      "maintainer": "Mickael Hubert \u003cgithub@winlux.fr\u003e",
      "sentence": "Decode data from Oregon sensors.",
      "paragraph": "This sketch provides an example how to implement a humidity/temperature from Oregon sensor. \u003cbr /\u003e Ex: Arduino UNO \\\u003c--(PIN 2) --\u003e 433Mhz receiver \\\u003c=============\u003e Oregon sensors \u003cbr /\u003e",
      "website": "https://github.com/Mickaelh51/Arduino-Oregon-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Mickaelh51/Oregon-1.0.0.zip",
      "archiveFileName": "Oregon-1.0.0.zip",
      "size": 8679,
      "checksum": "SHA-256:aec820b99e5d05cbd44dfe3aa0759da5c7fdb80bbfe71310e0f613edb367bfe4"
    },
    {
      "name": "Oregon",
      "version": "1.0.1",
      "author": "Mickael Hubert, Dominique Pierre, Olivier Lebrun",
      "maintainer": "Mickael Hubert \u003cgithub@winlux.fr\u003e",
      "sentence": "Decode data from Oregon sensors.",
      "paragraph": "This sketch provides an example how to implement a humidity/temperature from Oregon sensor (433Mhz). \u003cbr /\u003e Ex: Arduino UNO -- (PIN 2) --\u003e 433Mhz receiver ====\u003e Oregon sensors \u003cbr /\u003e",
      "website": "https://github.com/Mickaelh51/Arduino-Oregon-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Mickaelh51/Oregon-1.0.1.zip",
      "archiveFileName": "Oregon-1.0.1.zip",
      "size": 8707,
      "checksum": "SHA-256:272e9cecb37fe56b4279facc72d9a825a02c4c734f3f7402ed54335fe583cfed"
    },
    {
      "name": "ESPert",
      "version": "1.1.1",
      "author": "Jimmy\u003cjimmy@espert.io\u003e",
      "maintainer": "ESPert Team\u003cjimmy@espert.io\u003e",
      "sentence": "ESPert library for Arduino IDE",
      "paragraph": "The library for ESPert's IoT boards for using with Arduino IDE.  Espert Pte. Ltd. is an Internet of Things (IoT) technology company that is headquartered in Singapore with subsidiary office in Thailand. We developed the ESPresso series, our own line of Arduino-compatible, Wi-Fi-enabled, development and solutions boards based on Espressif System's ESP8266 chipset.",
      "website": "http://github.com/JimmySoftware/ESPert",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/JimmySoftware/ESPert-1.1.1.zip",
      "archiveFileName": "ESPert-1.1.1.zip",
      "size": 1254968,
      "checksum": "SHA-256:aa4cfdf83d99178111018055d09831dff319e7c761b31179007dad84676114a6"
    },
    {
      "name": "ESPert",
      "version": "1.1.2",
      "author": "Jimmy\u003cjimmy@espert.io\u003e",
      "maintainer": "ESPert Team\u003cjimmy@espert.io\u003e",
      "sentence": "ESPert library for Arduino IDE",
      "paragraph": "The library for ESPert's IoT boards for using with Arduino IDE.  Espert Pte. Ltd. is an Internet of Things (IoT) technology company that is headquartered in Singapore with subsidiary office in Thailand. We developed the ESPresso series, our own line of Arduino-compatible, Wi-Fi-enabled, development and solutions boards based on Espressif System's ESP8266 chipset.",
      "website": "http://github.com/JimmySoftware/ESPert",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/JimmySoftware/ESPert-1.1.2.zip",
      "archiveFileName": "ESPert-1.1.2.zip",
      "size": 1255074,
      "checksum": "SHA-256:bf4391478b31bbabb31990de1a0cc08118e250018833b97cd78b4a5d070a7e4d"
    },
    {
      "name": "ESPert",
      "version": "1.1.3",
      "author": "Jimmy\u003cjimmy@espert.io\u003e",
      "maintainer": "ESPert Team\u003cjimmy@espert.io\u003e",
      "sentence": "ESPert library for Arduino IDE",
      "paragraph": "The library for ESPert's IoT boards for using with Arduino IDE.  Espert Pte. Ltd. is an Internet of Things (IoT) technology company that is headquartered in Singapore with subsidiary office in Thailand. We developed the ESPresso series, our own line of Arduino-compatible, Wi-Fi-enabled, development and solutions boards based on Espressif System's ESP8266 chipset.",
      "website": "http://github.com/JimmySoftware/ESPert",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/JimmySoftware/ESPert-1.1.3.zip",
      "archiveFileName": "ESPert-1.1.3.zip",
      "size": 1255412,
      "checksum": "SHA-256:d21c5e7ed45ef55c7ee28b74394365d9e2970cd49e90197c3f423929b6cb9e48"
    },
    {
      "name": "Etherkit JTEncode",
      "version": "1.0.0",
      "author": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "maintainer": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "sentence": "Generate JT65, JT9, JT4, and WSPR symbols on your Arduino.",
      "paragraph": "This library very simply generates a set of channel symbols for JT65, JT9, JT4, or WSPR based on the user providing a properly formatted Type 6 message for JT65, JT9, or JT4 (which is 13 valid characters) or a callsign, Maidenhead grid locator, and power output for WSPR. When paired with a synthesizer that can output frequencies in fine, phase-continuous tuning steps (such as the Si5351), then a beacon or telemetry transmitter can be created which can change the transmitted characters as needed from the Arduino.",
      "website": "https://github.com/etherkit/JTEncode",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/etherkit/Etherkit_JTEncode-1.0.0.zip",
      "archiveFileName": "Etherkit_JTEncode-1.0.0.zip",
      "size": 30700,
      "checksum": "SHA-256:635c0ad279a567426d71ab8beb3d19c06af82f32da0816371dfcd93cc40f25dc"
    },
    {
      "name": "Etherkit JTEncode",
      "version": "1.0.1",
      "author": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "maintainer": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "sentence": "Generate JT65, JT9, JT4, and WSPR symbols on your Arduino.",
      "paragraph": "This library very simply generates a set of channel symbols for JT65, JT9, JT4, or WSPR based on the user providing a properly formatted Type 6 message for JT65, JT9, or JT4 (which is 13 valid characters) or a callsign, Maidenhead grid locator, and power output for WSPR. When paired with a synthesizer that can output frequencies in fine, phase-continuous tuning steps (such as the Si5351), then a beacon or telemetry transmitter can be created which can change the transmitted characters as needed from the Arduino.",
      "website": "https://github.com/etherkit/JTEncode",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/etherkit/Etherkit_JTEncode-1.0.1.zip",
      "archiveFileName": "Etherkit_JTEncode-1.0.1.zip",
      "size": 30747,
      "checksum": "SHA-256:bc6865d957772456a1ad01f74cdb2173d37f998095fa595e1db78dad52bf8ab5"
    },
    {
      "name": "virtmem",
      "version": "1.0.0",
      "author": "Rick Helmus",
      "maintainer": "Rick Helmus",
      "sentence": "Virtual memory library to easily extend RAM.",
      "paragraph": "This library makes it easy to use external sources such as SPI RAM or a computer to extend the available memory.",
      "website": "https://github.com/rhelmus/virtmem",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/rhelmus/virtmem-1.0.0.zip",
      "archiveFileName": "virtmem-1.0.0.zip",
      "size": 58224,
      "checksum": "SHA-256:9e92208736335e10efc6451184ff2ebe62cb187e2bab4415942dd51835f90434"
    },
    {
      "name": "WiFiManager",
      "version": "0.10.0",
      "author": "tzapu",
      "maintainer": "tzapu",
      "sentence": "ESP8266 WiFi Connection manager with fallback web configuration portal",
      "paragraph": "Library for configuring ESP8266 modules WiFi credentials at runtime.",
      "website": "https://github.com/tzapu/WiFiManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/tzapu/WiFiManager-0.10.0.zip",
      "archiveFileName": "WiFiManager-0.10.0.zip",
      "size": 29297,
      "checksum": "SHA-256:25d6d5ca9a1e3ef236fa054fde2ae377bafaa0f863f78c707e69338a527a415e"
    },
    {
      "name": "WiFiManager",
      "version": "0.5.0",
      "author": "tzapu",
      "maintainer": "tzapu",
      "sentence": "ESP8266 WiFi Connection manager with fallback web configuration portal",
      "paragraph": "Library for configuring ESP8266 modules WiFi credentials at runtime.",
      "website": "https://github.com/tzapu/WiFiManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/tzapu/WiFiManager-0.5.0.zip",
      "archiveFileName": "WiFiManager-0.5.0.zip",
      "size": 13773,
      "checksum": "SHA-256:4b9c43d1ddce03d1741b88d8975dc84cd24a06b66fd694592d4abbd9fd1f52b3"
    },
    {
      "name": "WiFiManager",
      "version": "0.6.0",
      "author": "tzapu",
      "maintainer": "tzapu",
      "sentence": "ESP8266 WiFi Connection manager with fallback web configuration portal",
      "paragraph": "Library for configuring ESP8266 modules WiFi credentials at runtime.",
      "website": "https://github.com/tzapu/WiFiManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/tzapu/WiFiManager-0.6.0.zip",
      "archiveFileName": "WiFiManager-0.6.0.zip",
      "size": 21094,
      "checksum": "SHA-256:a8b16bc515444097c7bf80e1bdb419e695233696c9236875590e707b33cdb3ca"
    },
    {
      "name": "WiFiManager",
      "version": "0.7.0",
      "author": "tzapu",
      "maintainer": "tzapu",
      "sentence": "ESP8266 WiFi Connection manager with fallback web configuration portal",
      "paragraph": "Library for configuring ESP8266 modules WiFi credentials at runtime. **USE version 0.6 together with stable 2.0.0 ESP8266 core for Arduino and use 0.7 for core 2.1.0.rc2 or newer**",
      "website": "https://github.com/tzapu/WiFiManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/tzapu/WiFiManager-0.7.0.zip",
      "archiveFileName": "WiFiManager-0.7.0.zip",
      "size": 27244,
      "checksum": "SHA-256:d739cce2bc5686649f23a10c4c1fffe0977d13a12fe2434096c2be5fe0426734"
    },
    {
      "name": "WiFiManager",
      "version": "0.8.0",
      "author": "tzapu",
      "maintainer": "tzapu",
      "sentence": "ESP8266 WiFi Connection manager with fallback web configuration portal",
      "paragraph": "Library for configuring ESP8266 modules WiFi credentials at runtime. **USE version 0.6 together with stable 2.0.0 ESP8266 core for Arduino and use 0.7 for core 2.1.0.rc2 or newer**",
      "website": "https://github.com/tzapu/WiFiManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/tzapu/WiFiManager-0.8.0.zip",
      "archiveFileName": "WiFiManager-0.8.0.zip",
      "size": 28836,
      "checksum": "SHA-256:6c5adc3876321a71bbedb4fca56ff01041ba7a012ffaa6f4923eb1609a7575f1"
    },
    {
      "name": "WiFiManager",
      "version": "0.9.0",
      "author": "tzapu",
      "maintainer": "tzapu",
      "sentence": "ESP8266 WiFi Connection manager with fallback web configuration portal",
      "paragraph": "Library for configuring ESP8266 modules WiFi credentials at runtime. **USE version 0.6 together with stable 2.0.0 ESP8266 core for Arduino and use 0.7 for core 2.1.0.rc2 or newer**",
      "website": "https://github.com/tzapu/WiFiManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/tzapu/WiFiManager-0.9.0.zip",
      "archiveFileName": "WiFiManager-0.9.0.zip",
      "size": 28768,
      "checksum": "SHA-256:0c207617301c4cca88c5b6bd0f80600fa7125a2dd0cc81cc7f301d2d0e39c68e"
    },
    {
      "name": "Chronos",
      "version": "1.0.0",
      "author": "Pat Deegan",
      "maintainer": "Pat Deegan \u003carduino-lib@flyingcarsandstuff.com\u003e",
      "sentence": "Easily manipulate date-times to perform scheduling, setup calendars and find points in time that are of interest.",
      "paragraph": "Chronos is comprised of three major components: DateTimes and Spans (OO date-time objects that can be manipulated in many ways), Marks (sets of calendar point events like \"every Sunday at 15h00\") and Calendar Events (actual events with fixed or repeating datetimes of specific duration, and the scheduling functions needed to find/manipulate events of interest).",
      "website": "http://flyingcarsandstuff.com/projects/chronos/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/psychogenic/Chronos-1.0.0.zip",
      "archiveFileName": "Chronos-1.0.0.zip",
      "size": 68103,
      "checksum": "SHA-256:e6e6fd9c52254041786988c7113fd8ae8afe41072d238e92d788ec31406bf09e"
    },
    {
      "name": "Lewis",
      "version": "0.1.0",
      "author": "Patrick Fenner \u003ccontact@defproc.co.uk\u003e",
      "maintainer": "Patrick Fenner \u003ccontact@defproc.co.uk\u003e",
      "sentence": "A morse code stream/print interpreter",
      "paragraph": "Lewis helps with receiving and sending morse code from a microcontroller",
      "website": "https://git.defproc.co.uk/DefProc/Lewis/",
      "category": "Communiction",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/DefProc/Lewis-0.1.0.zip",
      "archiveFileName": "Lewis-0.1.0.zip",
      "size": 13859,
      "checksum": "SHA-256:b86a28b9988e7749742556810123b496af10ff63ff520e02695e36d2edc0b03c"
    },
    {
      "name": "Goldilocks Analogue DAC Library",
      "version": "1.0.0",
      "author": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "DAC (MCP4822) functions for Goldilocks Analogue",
      "paragraph": "Firmware to control a MCP4822 (12 bit, dual channel, SPI) DAC using the AVR UART MSPI Mode, as implemented on the Goldilocks Analogue. Also provides IIR High, Band, and Low Pass filtering functions.",
      "website": "https://github.com/feilipu/Goldilocks_Analogue_DAC_Library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/feilipu/Goldilocks_Analogue_DAC_Library-1.0.0.zip",
      "archiveFileName": "Goldilocks_Analogue_DAC_Library-1.0.0.zip",
      "size": 13169,
      "checksum": "SHA-256:05379eff09ced8a30247e135c237d533dde2d3a2590763252e4d0e09ca70149d"
    },
    {
      "name": "Goldilocks Analogue DAC Library",
      "version": "1.0.3",
      "author": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "DAC (MCP4822) functions for Goldilocks Analogue",
      "paragraph": "Firmware to control a MCP4822 (12 bit, dual channel, SPI) DAC using the AVR UART MSPI Mode, as implemented on the Goldilocks Analogue. Also provides IIR High, Band, and Low Pass filtering functions.",
      "website": "https://github.com/feilipu/Goldilocks_Analogue_DAC_Library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/feilipu/Goldilocks_Analogue_DAC_Library-1.0.3.zip",
      "archiveFileName": "Goldilocks_Analogue_DAC_Library-1.0.3.zip",
      "size": 13271,
      "checksum": "SHA-256:30bee25fbf0c69573ebceab16559c822e5a81b8eb31836b04becfba76e77a241"
    },
    {
      "name": "AVR Standard C (C90) Time Library",
      "version": "1.8.0",
      "author": "Michael Duane Rice \u003cmike@mikerice.name\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "Time functions for AVR (Uno, Leonardo, Mega).",
      "paragraph": "The implementation aspires to conform with ISO/IEC 9899 (C90). However, due to limitations of the target processor and the nature of its development environment, a practical AVR implementation must of necessity deviate from the C90 standard time.h.",
      "website": "https://github.com/feilipu/Arduino_RTC_Library",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/feilipu/AVR_Standard_C__C90__Time_Library-1.8.0.zip",
      "archiveFileName": "AVR_Standard_C__C90__Time_Library-1.8.0.zip",
      "size": 70372,
      "checksum": "SHA-256:09a0fbc723cf83a62a628579b6bc323d4cacaf8322356189d6cc8ae8ae7e20f5"
    },
    {
      "name": "AVR Standard C Time Library",
      "version": "1.8.0-1",
      "author": "Michael Duane Rice \u003cmike@mikerice.name\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "Time functions for AVR (Goldilocks, Uno, Leonardo, Mega).",
      "paragraph": "The implementation aspires to conform with ISO/IEC 9899 (C90). However, due to limitations of the target processor and the nature of its development environment, a practical AVR implementation must of necessity deviate from the C90 standard time.h. Will work with AVR ATmega with a clock crystal on Timer 2.",
      "website": "https://github.com/feilipu/Arduino_RTC_Library",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/feilipu/AVR_Standard_C_Time_Library-1.8.0-1.zip",
      "archiveFileName": "AVR_Standard_C_Time_Library-1.8.0-1.zip",
      "size": 70023,
      "checksum": "SHA-256:0446d2ed1e17df6a7ec13d0732cd8a0141fcf76a606cc1bebcaba4bd6003b4d8"
    },
    {
      "name": "AVR Standard C Time Library",
      "version": "1.8.0-4",
      "author": "Michael Duane Rice \u003cmike@mikerice.name\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "Time functions for AVR (Goldilocks, Uno, Leonardo, Mega).",
      "paragraph": "The implementation aspires to conform with ISO/IEC 9899 (C90). However, due to limitations of the target processor and the nature of its development environment, a practical AVR implementation must of necessity deviate from the C90 standard time.h. Will work with AVR ATmega with a clock crystal on Timer 2.",
      "website": "https://github.com/feilipu/Arduino_RTC_Library",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/feilipu/AVR_Standard_C_Time_Library-1.8.0-4.zip",
      "archiveFileName": "AVR_Standard_C_Time_Library-1.8.0-4.zip",
      "size": 70042,
      "checksum": "SHA-256:2cda6c5f06f61c9dd0fc9d19850817a1cb71940788499d2958c9be9388c9f217"
    },
    {
      "name": "AVR Standard C Time Library",
      "version": "1.8.1",
      "author": "Michael Duane Rice \u003cmike@mikerice.name\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "Time functions for AVR (Uno, Leonardo, Mega).",
      "paragraph": "The implementation aspires to conform with ISO/IEC 9899 (C90). However, due to limitations of the target processor and the nature of its development environment, a practical AVR implementation must of necessity deviate from the C90 standard time.h.",
      "website": "https://github.com/feilipu/Arduino_RTC_Library",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/feilipu/AVR_Standard_C_Time_Library-1.8.1.zip",
      "archiveFileName": "AVR_Standard_C_Time_Library-1.8.1.zip",
      "size": 69783,
      "checksum": "SHA-256:d2a8c30e96bef435374ccc4b583597a3bc582676c4b8796398a90ce34ed85c5d"
    },
    {
      "name": "Low-Power",
      "version": "1.4.0",
      "author": "Rocket Scream Electronics",
      "maintainer": "Rocket Scream Electronics",
      "sentence": "Lightweight power management library",
      "paragraph": "Lightweight power management library",
      "website": "https://github.com/rocketscream/Low-Power",
      "category": "Other",
      "architectures": [
        "avr",
        "samd"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/rocketscream/Low_Power-1.4.0.zip",
      "archiveFileName": "Low_Power-1.4.0.zip",
      "size": 9319,
      "checksum": "SHA-256:2e351d48420f73e69990b3bc6ac953f1140b1440d5789566ffde5e3b975f5f72"
    },
    {
      "name": "Goldilocks Analogue SPI RAM Library",
      "version": "1.0.0",
      "author": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "Firmware for SPI solid state memory (including SRAM, FRAM, EEPROM) devices for Goldilocks Analogue",
      "paragraph": "Firmware to control SPI SRAM, FRAM, and EEPROM as implemented on the Goldilocks Analogue. Also provides Ring Buffer support for all memory types.",
      "website": "https://github.com/feilipu/Goldilocks_Analogue_SPIRAM_Library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/feilipu/Goldilocks_Analogue_SPI_RAM_Library-1.0.0.zip",
      "archiveFileName": "Goldilocks_Analogue_SPI_RAM_Library-1.0.0.zip",
      "size": 17171,
      "checksum": "SHA-256:986fe4473cfd594918d513423b4211f250bee27ee68ef25f31ba59ee2966be24"
    },
    {
      "name": "Goldilocks Analogue SPI RAM Library",
      "version": "1.0.2",
      "author": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "maintainer": "Phillip Stevens \u003cphillip.stevens@gmail.com\u003e",
      "sentence": "Firmware for SPI solid state memory (including SRAM, FRAM, EEPROM) devices for Goldilocks Analogue",
      "paragraph": "Firmware to control SPI SRAM, FRAM, and EEPROM as implemented on the Goldilocks Analogue. Also provides Ring Buffer support for all memory types.",
      "website": "https://github.com/feilipu/Goldilocks_Analogue_SPIRAM_Library",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/feilipu/Goldilocks_Analogue_SPI_RAM_Library-1.0.2.zip",
      "archiveFileName": "Goldilocks_Analogue_SPI_RAM_Library-1.0.2.zip",
      "size": 17197,
      "checksum": "SHA-256:00068adbe2b902dc82e61996e9dce77e8f2e3625292cbc083647a82ae8f8c65f"
    },
    {
      "name": "FCWRobot_Model2",
      "version": "1.0.1",
      "author": "foothillscommunityworkshop",
      "maintainer": "Dan B \u003cdanzargm@yahoo.com\u003e",
      "sentence": "The library array that is needed for the FCW Robot Model2.",
      "paragraph": "The Model-2 Educational Robot and trainer is a learning robot for all ages.",
      "website": "https://github.com/foothillscommunityworkshop/Robot-Model-2",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/foothillscommunityworkshop/FCWRobot_Model2-1.0.1.zip",
      "archiveFileName": "FCWRobot_Model2-1.0.1.zip",
      "size": 112341,
      "checksum": "SHA-256:7491f8696109cb8bb06a2a81e63be92d5b669801d321981bb387a4c6cae1bcb7"
    },
    {
      "name": "MFRC522",
      "version": "1.1.2",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/miguelbalboa/MFRC522-1.1.2.zip",
      "archiveFileName": "MFRC522-1.1.2.zip",
      "size": 1085964,
      "checksum": "SHA-256:750ac5ab3285d0faf9bbcc73c5322e16ae4124b577886dc3ae0e59452b8414d6"
    },
    {
      "name": "MFRC522",
      "version": "1.1.3",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1",
        "teensy"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/miguelbalboa/MFRC522-1.1.3.zip",
      "archiveFileName": "MFRC522-1.1.3.zip",
      "size": 1086353,
      "checksum": "SHA-256:bed10ad8f81ef045c112cce52bf6f1bd8b103f0ca6c95596bfff1c3c3faaa32f"
    },
    {
      "name": "MFRC522",
      "version": "1.1.4",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1",
        "teensy"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/miguelbalboa/MFRC522-1.1.4.zip",
      "archiveFileName": "MFRC522-1.1.4.zip",
      "size": 1085634,
      "checksum": "SHA-256:9087726a9c9f5a10d042600677f085a41d5669f20d923c21220f846177646ab1"
    },
    {
      "name": "MFRC522",
      "version": "1.1.5",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1",
        "teensy"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/miguelbalboa/MFRC522-1.1.5.zip",
      "archiveFileName": "MFRC522-1.1.5.zip",
      "size": 1087477,
      "checksum": "SHA-256:b918f4b8c0ddcbcbe78cb4c8ce039216e8db9e182830f990ccdc55654f63be0d"
    },
    {
      "name": "MFRC522",
      "version": "1.1.6",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1",
        "teensy"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/miguelbalboa/MFRC522-1.1.6.zip",
      "archiveFileName": "MFRC522-1.1.6.zip",
      "size": 1087494,
      "checksum": "SHA-256:5c82e58ac41ae749cda5801409bf4c2d49b31195042f78c0b0daf788eda57c5e"
    },
    {
      "name": "MFRC522",
      "version": "1.1.7",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1",
        "teensy"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/miguelbalboa/MFRC522-1.1.7.zip",
      "archiveFileName": "MFRC522-1.1.7.zip",
      "size": 1096427,
      "checksum": "SHA-256:ccdc8d331f4e4c639338682f63e4d2b1b1fb3aafa3c9ef48aae35463e7095add"
    },
    {
      "name": "MFRC522",
      "version": "1.1.8",
      "author": "GithubCommunity",
      "maintainer": "miguelbalboa",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "STM32F1",
        "teensy"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/miguelbalboa/MFRC522-1.1.8.zip",
      "archiveFileName": "MFRC522-1.1.8.zip",
      "size": 1098563,
      "checksum": "SHA-256:d9385e733455ae58cb4508b68fa9271370042e79f4ac7689076eb94ef877f103"
    },
    {
      "name": "RingBuf",
      "version": "1.1.0",
      "author": "D. Aaron Wisner (daw268@cornell.edu)",
      "maintainer": "D. Aaron Wisner (daw268@cornell.edu)",
      "sentence": "A library for buffering items into a ring (circular) buffer",
      "paragraph": "This library is perfect for capturing pin states, timestamps, etc.. during an ISR. Then in void loop(), the buffer can be asynchronously processed whenever your program has free time.",
      "website": "https://github.com/wizard97/ArduinoRingBuffer",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/wizard97/RingBuf-1.1.0.zip",
      "archiveFileName": "RingBuf-1.1.0.zip",
      "size": 7628,
      "checksum": "SHA-256:d79e65ed38e2375f5cb6ec5df7b1cda2e8040eb358c60c6c11176ab709eece6c"
    },
    {
      "name": "RingBuf",
      "version": "1.2.0",
      "author": "D. Aaron Wisner (daw268@cornell.edu)",
      "maintainer": "D. Aaron Wisner (daw268@cornell.edu)",
      "sentence": "A library for buffering items into a ring (circular) buffer",
      "paragraph": "This library is perfect for capturing pin states, timestamps, etc.. during an ISR. Then in void loop(), the buffer can be asynchronously processed whenever your program has free time.",
      "website": "https://github.com/wizard97/ArduinoRingBuffer",
      "category": "Data Storage",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/wizard97/RingBuf-1.2.0.zip",
      "archiveFileName": "RingBuf-1.2.0.zip",
      "size": 7829,
      "checksum": "SHA-256:bf5350eef3eb3082274bb40556166df2edd0b7692229fd160fb704a7e890bf0d"
    },
    {
      "name": "Syncano Arduino Library",
      "version": "0.1.0",
      "author": "EYEDEA-IO \u003csupport@syncano.com\u003e",
      "maintainer": "Syncano \u003csupport@syncano.com\u003e",
      "sentence": "A library that provides access to Syncano",
      "paragraph": "Provides methods to access the REST API of Syncano.io from Arduino.",
      "website": "https://github.com/Syncano/syncano-arduino",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Syncano/Syncano_Arduino_Library-0.1.0.zip",
      "archiveFileName": "Syncano_Arduino_Library-0.1.0.zip",
      "size": 83567,
      "checksum": "SHA-256:a828d13dcc5d991b52674f1168f4d4ee43f36f80f8b74db1588adcd298bed196"
    },
    {
      "name": "MySQL Connector Arduino",
      "version": "1.1.1",
      "author": "Dr. Charles Bell",
      "maintainer": "Dr. Charles Bell \u003cchuck.bell@oracle.com\u003e",
      "sentence": "Connects Arduino using Arduino Ethernet-compatible shields including the Ethernet Shield and WiFi Shield.",
      "paragraph": "You can use this library to connect your Arduino project directly to a MySQL server without using an intermediate computer or a web- or cloud-based service. Having direct access to a database server means you can store data acquired from your project as well as check values stored in tables on the server. This also means you can setup your own, local MySQL server to store your data further removing the need for Internet connectivity. If that is not an issue, you can still connect to and store data on a MySQL server via your network, Internet, or even in the cloud!",
      "website": "https://github.com/ChuckBell/MySQL_Connector_Arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ChuckBell/MySQL_Connector_Arduino-1.1.1.zip",
      "archiveFileName": "MySQL_Connector_Arduino-1.1.1.zip",
      "size": 416387,
      "checksum": "SHA-256:a74453608e154d1ea1a6a8af3dffcb63cd5916fa51a7cfb430223654a54c9228"
    },
    {
      "name": "LSM6",
      "version": "1.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "LSM6 accelerometer and gyro library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with ST's LSM6DS33 accelerometer and gyro.",
      "website": "https://github.com/pololu/lsm6-arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/pololu/LSM6-1.0.0.zip",
      "archiveFileName": "LSM6-1.0.0.zip",
      "size": 8352,
      "checksum": "SHA-256:2be255e22408ab87d3d9f232c7cb8a5a8dc5f69bcf421cb2b9744da1223bc2a0"
    },
    {
      "name": "LIS3MDL",
      "version": "1.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "LIS3MDL magnetometer library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with ST's LIS3MDL magnetometer.",
      "website": "https://github.com/pololu/lis3mdl-arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/pololu/LIS3MDL-1.0.0.zip",
      "archiveFileName": "LIS3MDL-1.0.0.zip",
      "size": 8093,
      "checksum": "SHA-256:4d17337e168592664ea8a9965edb07d970f27c3966a7387593dea851b9571b31"
    },
    {
      "name": "ArduinoINA219",
      "version": "1.0.0",
      "author": "DeCristofaro John \u003cjohngineer@yahoo.com\u003e, Jukka-Pekka Sarjanen \u003cjukka-Pekka.sarjanen@kone.com\u003e, gandy92 \u003cgandy92@googlemail.com\u003e, Flavius Bindea \u003cflav@flav.com\u003e",
      "maintainer": "Flavius Bindea \u003cflav@flav.com\u003e",
      "sentence": "INA219 hi-side i2c current/power sensor Library",
      "paragraph": "INA219 hi-side i2c current/power sensor Library",
      "website": "https://github.com/flav1972/ArduinoINA219",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/flav1972/ArduinoINA219-1.0.0.zip",
      "archiveFileName": "ArduinoINA219-1.0.0.zip",
      "size": 225487,
      "checksum": "SHA-256:561474614461b86a27e1e51b5ddbefc20b9cb57456ef2213c3b653457454c86a"
    },
    {
      "name": "ArduinoINA219",
      "version": "1.0.1",
      "author": "DeCristofaro John \u003cjohngineer@yahoo.com\u003e, Jukka-Pekka Sarjanen \u003cjukka-Pekka.sarjanen@kone.com\u003e, gandy92 \u003cgandy92@googlemail.com\u003e, Flavius Bindea \u003cflav@flav.com\u003e",
      "maintainer": "Flavius Bindea \u003cflav@flav.com\u003e",
      "sentence": "INA219 hi-side i2c current/power sensor Library",
      "paragraph": "INA219 hi-side i2c current/power sensor Library",
      "website": "https://github.com/flav1972/ArduinoINA219",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/flav1972/ArduinoINA219-1.0.1.zip",
      "archiveFileName": "ArduinoINA219-1.0.1.zip",
      "size": 227486,
      "checksum": "SHA-256:0adabd5b6273320d973750932a770e67456d91f41b057c8ab8663f96ca9c5fcd"
    },
    {
      "name": "Simple DHT sensor library",
      "version": "1.0.0",
      "author": "Winlin \u003cwinlin@vip.126.com\u003e",
      "maintainer": "Winlin \u003cwinlin@vip.126.com\u003e",
      "sentence": "Arduino Temp \u0026 Humidity Sensors for DHT11 etc.",
      "paragraph": "Simple pure C code with lots of comments, strictly follow the standard DHT protocol, supports 0.5HZ or 1HZ sampling rate.",
      "website": "https://github.com/winlinvip/simple-dht",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/winlinvip/Simple_DHT_sensor_library-1.0.0.zip",
      "archiveFileName": "Simple_DHT_sensor_library-1.0.0.zip",
      "size": 7005,
      "checksum": "SHA-256:12f3b6a769eafb101d9455c4997fc577ce43819d1fdc20a67c9b0741890790b3"
    },
    {
      "name": "SimpleDHT",
      "version": "1.0.1",
      "author": "Winlin \u003cwinlin@vip.126.com\u003e",
      "maintainer": "Winlin \u003cwinlin@vip.126.com\u003e",
      "sentence": "Arduino Temp \u0026 Humidity Sensors for DHT11 etc.",
      "paragraph": "Simple C++ code with lots of comments, strictly follow the standard DHT protocol, supports 0.5HZ or 1HZ sampling rate.",
      "website": "https://github.com/winlinvip/simple-dht",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/winlinvip/SimpleDHT-1.0.1.zip",
      "archiveFileName": "SimpleDHT-1.0.1.zip",
      "size": 6726,
      "checksum": "SHA-256:32abe25d38db16b4ce39c4f5795a8f4e2a53ae70bc210c39e3dfbfdf6ddd1061"
    },
    {
      "name": "SimpleDHT",
      "version": "1.0.2",
      "author": "Winlin \u003cwinlin@vip.126.com\u003e",
      "maintainer": "Winlin \u003cwinlin@vip.126.com\u003e",
      "sentence": "Arduino Temp \u0026 Humidity Sensors for DHT11 etc.",
      "paragraph": "Simple C++ code with lots of comments, strictly follow the standard DHT protocol, supports 0.5HZ or 1HZ sampling rate.",
      "website": "https://github.com/winlinvip/simple-dht",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/winlinvip/SimpleDHT-1.0.2.zip",
      "archiveFileName": "SimpleDHT-1.0.2.zip",
      "size": 6729,
      "checksum": "SHA-256:7fe4a69bb411981120f38a2b8cb8c5a24c97536b50fd900b2e127619e18bca0d"
    },
    {
      "name": "Cytron G15 Shield",
      "version": "2.0.0",
      "author": "Cytron Technologies Sdn Bhd \u003csupport@cytron.com.my\u003e",
      "maintainer": "Cytron Technologies Sdn Bhd \u003cwww.cytron.com.my\u003e",
      "sentence": "Library for controlling G15 Cube Servo",
      "paragraph": "This library works with Cytron G15 Shield",
      "website": "https://github.com/CytronTechnologies/Cytron-G15Shield",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/CytronTechnologies/Cytron_G15_Shield-2.0.0.zip",
      "archiveFileName": "Cytron_G15_Shield-2.0.0.zip",
      "size": 32159,
      "checksum": "SHA-256:ffff311f81f3fefa5c111ba5bbf4c334fdf3c7f194c3e66006bea84427460416"
    },
    {
      "name": "statsdclient",
      "version": "0.0.1",
      "author": "Jan Szumiec",
      "maintainer": "Jan Szumiec \u003cjan.szumiec@gmail.com\u003e",
      "sentence": "Report metrics using statsd",
      "paragraph": "This is a universal library that will let you use either TCP or UDP to put together packets to be sent to a statsd listener. Depends on nothing, so you can get it to work with any networking shield using a bit of glue code.",
      "website": "https://github.com/jasiek/arduino-statsdclient",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/jasiek/statsdclient-0.0.1.zip",
      "archiveFileName": "statsdclient-0.0.1.zip",
      "size": 2117,
      "checksum": "SHA-256:85e4e5e508a887af86b7f4b4416c8a6801757760ee34b5a6419dfb8639217b75"
    },
    {
      "name": "Plotter",
      "version": "1.0.0",
      "author": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "maintainer": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "sentence": "an Arduino library for easy plotting using Processing via serial communication.",
      "paragraph": "Supports multi-variable plots against time as well as 2D plotting of an X vs Y variable. Multiple graphs can be displayed at once, with all formatting and scaling handled automatically. Various listener options are provided, including stand-alone options so that the Processing software does NOT need to be downloaded. The listener requires no modification, just start the program on the host computer.",
      "website": "https://github.com/devinconley/ArduinoPlotter",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/devinconley/Plotter-1.0.0.zip",
      "archiveFileName": "Plotter-1.0.0.zip",
      "size": 6587,
      "checksum": "SHA-256:f3c22680c12a9a3c87b97a4ce9dfd752806a61f6e392267636b99ae152f2fa25"
    },
    {
      "name": "Plotter",
      "version": "1.0.1",
      "author": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "maintainer": "Devin Conley \u003cdevinconley@jhu.edu\u003e",
      "sentence": "An Arduino library for easy plotting on host computer via serial communication.",
      "paragraph": "Supports multi-variable plots against time as well as 2D plotting of an X vs Y variable. Multiple graphs can be displayed at once, with all formatting and scaling handled automatically. A stand-alone listener application, written with Processing, is provided.",
      "website": "https://github.com/devinconley/ArduinoPlotter",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/devinconley/Plotter-1.0.1.zip",
      "archiveFileName": "Plotter-1.0.1.zip",
      "size": 6511,
      "checksum": "SHA-256:0b49e4184899310832df9a89531a63a603974180739823ed2b465ca9ee9cff6f"
    },
    {
      "name": "Ubidots FONA Library",
      "version": "1.1.0",
      "author": "Ubidots",
      "maintainer": "Ubidots \u003cdevel@ubidots.com\u003e",
      "sentence": "Ubidots library for the Adafruit FONA",
      "paragraph": "Ubidots library for the Adafruit FONA",
      "website": "https://github.com/ubidots/ubidots-fona",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ubidots/Ubidots_FONA_Library-1.1.0.zip",
      "archiveFileName": "Ubidots_FONA_Library-1.1.0.zip",
      "size": 5780,
      "checksum": "SHA-256:cd7822d14d6d0b19e166267d75668ccd416f93a363e2c1ee50183914210715f9"
    },
    {
      "name": "Rtc by Makuna",
      "version": "1.0.0",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes interfacing DS1307 and DS3231 Real Time Clock modules easy.",
      "paragraph": "Includes deep support of module features, including temperature, alarms and memory storage if present.  Tested on esp8266.",
      "website": "https://github.com/Makuna/Rtc",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Makuna/Rtc_by_Makuna-1.0.0.zip",
      "archiveFileName": "Rtc_by_Makuna-1.0.0.zip",
      "size": 21726,
      "checksum": "SHA-256:819cd5794de67305939c744597d5a37f363da229c64ed756bdd93b011e00c4a9"
    },
    {
      "name": "Rtc by Makuna",
      "version": "1.0.1",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes interfacing DS1307 and DS3231 Real Time Clock modules easy.",
      "paragraph": "Includes deep support of module features, including temperature, alarms and memory storage if present.  Tested on esp8266.",
      "website": "https://github.com/Makuna/Rtc",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Makuna/Rtc_by_Makuna-1.0.1.zip",
      "archiveFileName": "Rtc_by_Makuna-1.0.1.zip",
      "size": 22140,
      "checksum": "SHA-256:11411d8157564cdeecf89d40d0166e935f7f09f52ca7ea0f47c7cc90bdf123f7"
    },
    {
      "name": "Embedis",
      "version": "1.0.0",
      "author": "David Turnbull, Tom Moxon",
      "maintainer": "The PatternAgents, LLC \u003cpatternagents@gmail.com\u003e",
      "sentence": "An Embedded Dictionary Server.",
      "paragraph": "Provides a command line interface and persistent key-value store.",
      "website": "https://github.com/thingSoC/embedis",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/thingSoC/Embedis-1.0.0.zip",
      "archiveFileName": "Embedis-1.0.0.zip",
      "size": 66436,
      "checksum": "SHA-256:b7d504fd000bf6cdaddf56631892b5912acfef5eb779ddfc70a34bcc0461f113"
    },
    {
      "name": "Sodaq_dataflash",
      "version": "1.0.1",
      "author": "keestux,SODAQ",
      "maintainer": "Kees Bakker \u003ckees@sodaq.com\u003e",
      "sentence": "An Arduino library for the AT45DB dataflash as used on SODAQ boards.",
      "website": "https://github.com/SodaqMoja/Sodaq_dataflash",
      "category": "Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/SodaqMoja/Sodaq_dataflash-1.0.1.zip",
      "archiveFileName": "Sodaq_dataflash-1.0.1.zip",
      "size": 22772,
      "checksum": "SHA-256:1d7f88ec4126f341e4680256570f2ab24d9967191986b40eeb20490fcdd7fa03"
    },
    {
      "name": "IoT_Board",
      "version": "0.0.0",
      "author": "Gunce Akkoyun \u003cgunce.akkoyun@lvx.com.tr\u003e",
      "maintainer": "LVX \u003cinfo@lvx.com.tr\u003e",
      "sentence": "Cloud and GPRS based \"LVX IoT module\" for developers.",
      "paragraph": "IoT board is an Internet communication module for developers. It is designed for uni-directional real-time communication with \"Cloud Database\". Connects to all GSM network with rooming aveliable SIM-IC and not required the SIM card. You can easly send \u0026 recieve data from Database.",
      "website": "http://www.lvx.com.tr",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/LVXElektronik/IoT_Board-0.0.0.zip",
      "archiveFileName": "IoT_Board-0.0.0.zip",
      "size": 193059,
      "checksum": "SHA-256:c3f781fb67f709ae41fa30b773b7619a3cf06271576c719eaaa5225560bae263"
    },
    {
      "name": "IoT_Board",
      "version": "0.0.24",
      "author": "Gunce Akkoyun \u003cgunce.akkoyun@lvx.com.tr\u003e",
      "maintainer": "LVX \u003cinfo@lvx.com.tr\u003e",
      "sentence": "Cloud and GPRS based \"LVX IoT module\" for developers.",
      "paragraph": "IoT board is an Internet communication module for developers. It is designed for uni-directional real-time communication with \"Cloud Database\". Connects to all GSM network with rooming aveliable SIM-IC and not required the SIM card. You can easly send \u0026 recieve data from Database.",
      "website": "http://www.lvx.com.tr",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/LVXElektronik/IoT_Board-0.0.24.zip",
      "archiveFileName": "IoT_Board-0.0.24.zip",
      "size": 193076,
      "checksum": "SHA-256:b1ed49138400917593940abc3eeb6e61b62e7c1ce6bb35ebb7da0c99e7528365"
    },
    {
      "name": "Task by Makuna",
      "version": "1.0.0",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes creating complex mulitple task projects easy.",
      "paragraph": "This implements a Nonpreemptive multitasking library which is effecient in speed and memory, which is good for small Arduino hardware.  While multitasking is an advanced topic, our friends at AdaFruit have a great article on it here (https://learn.adafruit.com/multi-tasking-the-arduino-part-1?view=all),  Samples include blinking an LED without using delay(), monitoring and reacting to a button press, and cross task messaging. Tested on esp8266.",
      "website": "https://github.com/Makuna/Task",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Makuna/Task_by_Makuna-1.0.0.zip",
      "archiveFileName": "Task_by_Makuna-1.0.0.zip",
      "size": 24022,
      "checksum": "SHA-256:52ab181ce0ba0e87f6a353da69322439e2c8dcb86bcd1e572c8cc30578b248e6"
    },
    {
      "name": "Task by Makuna",
      "version": "1.1.0",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes creating complex mulitple task projects easy.",
      "paragraph": "This implements a Nonpreemptive multitasking library which is effecient in speed and memory, which is good for small Arduino hardware.  While multitasking is an advanced topic, our friends at AdaFruit have a great article on it here (https://learn.adafruit.com/multi-tasking-the-arduino-part-1?view=all),  Samples include blinking an LED without using delay(), monitoring and reacting to a button press, cross task messaging, and rotary encoder. Tested on AVR and esp8266.",
      "website": "https://github.com/Makuna/Task",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Makuna/Task_by_Makuna-1.1.0.zip",
      "archiveFileName": "Task_by_Makuna-1.1.0.zip",
      "size": 27266,
      "checksum": "SHA-256:3298b9de20aa841a7c71386a77b12a6055c1834ec69a5dca0261db572100e8be"
    },
    {
      "name": "Ubidots GPRS Library",
      "version": "1.0.0",
      "author": "Ubidots",
      "maintainer": "Ubidots \u003cdevel@ubidots.com\u003e",
      "sentence": "Ubidots library for the Arduino GPRS sim 900",
      "paragraph": "Ubidots library for the GPRS sim 900",
      "website": "https://github.com/ubidots/ubidots-arduino-gprs",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ubidots/Ubidots_GPRS_Library-1.0.0.zip",
      "archiveFileName": "Ubidots_GPRS_Library-1.0.0.zip",
      "size": 8416,
      "checksum": "SHA-256:6f2167baca07888ff50ef79f6ad7d26ebb1dc5ef9cd8cd22643dcb8f212c5406"
    },
    {
      "name": "PS2KeyRaw",
      "version": "1.0.2",
      "author": "Paul Carpenter \u003cpaul@pcserviceselectronics.co.uk\u003e",
      "maintainer": "Paul Carpenter \u003cpaul@pcserviceselectronics.co.uk\u003e",
      "sentence": "PS2 keyboard control and raw data receiving",
      "paragraph": "Controls and decodes the communication from the keyboard for testing purposes.",
      "website": "https://github.com/techpaul/PS2KeyRaw.git",
      "category": "Other",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/techpaul/PS2KeyRaw-1.0.2.zip",
      "archiveFileName": "PS2KeyRaw-1.0.2.zip",
      "size": 27388,
      "checksum": "SHA-256:1e9700cb7b2658e3aecbd213602205c4bab5b4dfb5a75670f0368c45bf698b0a"
    },
    {
      "name": "PS2KeyAdvanced",
      "version": "1.0.2",
      "author": "Paul Carpenter \u003cpaul@pcserviceselectronics.co.uk\u003e",
      "maintainer": "Paul Carpenter \u003cpaul@pcserviceselectronics.co.uk\u003e",
      "sentence": "PS2 keyboard FULL control and ALL keys processing, as well as LED control.",
      "paragraph": "Provides ability to convert long key stroke code sequences to a single integer, for all keys ANY Latin keyboard, even multimedia and 24 Function key keyboards.",
      "website": "https://github.com/techpaul/PS2KeyAdvanced.git",
      "category": "Other",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/techpaul/PS2KeyAdvanced-1.0.2.zip",
      "archiveFileName": "PS2KeyAdvanced-1.0.2.zip",
      "size": 80523,
      "checksum": "SHA-256:54efa0a3c78ab63715ea85e7383e133090d4e5065c4b1ed1d09a68a9123d501f"
    },
    {
      "name": "PS2KeyMap",
      "version": "1.0.2",
      "author": "Paul Carpenter \u003cpaul@pcserviceselectronics.co.uk\u003e",
      "maintainer": "Paul Carpenter \u003cpaul@pcserviceselectronics.co.uk\u003e",
      "sentence": "PS2 keyboard codes from PS2KeyAdvanced to UTF-8 for any Latin language keyboard.",
      "paragraph": "Takes integer values from PS2KeyAdvanced to convert using selectable country mapping and you can add your own country mapping.",
      "website": "https://github.com/techpaul/PS2KeyMap.git",
      "category": "Other",
      "architectures": [
        "avr",
        "sam"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/techpaul/PS2KeyMap-1.0.2.zip",
      "archiveFileName": "PS2KeyMap-1.0.2.zip",
      "size": 34429,
      "checksum": "SHA-256:bd4bbfe64598748ddbc49c0ee9cf65f671f2c511e5a70ee6b2239ef4f1375e6f"
    },
    {
      "name": "ArduinoHttpServer",
      "version": "0.1.0",
      "author": "Sander van Woensel \u003csander@vanwoensel.me\u003e",
      "maintainer": "Sander van Woensel \u003csander@vanwoensel.me\u003e",
      "sentence": "Server side minimalistic HTTP protocol implementation.",
      "paragraph": "Just the raw HTTP server protocol for the Arduino platform, the rest is left to your imagination.",
      "website": "https://github.com/QuickSander/ArduinoHttpServer",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/QuickSander/ArduinoHttpServer-0.1.0.zip",
      "archiveFileName": "ArduinoHttpServer-0.1.0.zip",
      "size": 24483,
      "checksum": "SHA-256:5eeab512dea3c12bb9a0a54ce346fed08e841cf539aa1e1d2342d6c380751f53"
    },
    {
      "name": "ArduinoHttpServer",
      "version": "0.1.1",
      "author": "Sander van Woensel \u003csander@vanwoensel.me\u003e",
      "maintainer": "Sander van Woensel \u003csander@vanwoensel.me\u003e",
      "sentence": "Server side minimalistic HTTP protocol implementation.",
      "paragraph": "Just the raw HTTP server protocol for the Arduino platform, the rest is left to your imagination.",
      "website": "https://github.com/QuickSander/ArduinoHttpServer",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/QuickSander/ArduinoHttpServer-0.1.1.zip",
      "archiveFileName": "ArduinoHttpServer-0.1.1.zip",
      "size": 26063,
      "checksum": "SHA-256:21953e82faaa3fe33a21418c53014c90f337c5ce3ac8b2cd781dc093299a2754"
    },
    {
      "name": "DimSwitch",
      "version": "1.0.0",
      "author": "Krzysztof Budzynski \u003ckrzychb@gazeta.pl\u003e",
      "maintainer": "Krzysztof Budzynski \u003ckrzychb@gazeta.pl\u003e",
      "sentence": "A library to control dimmable ballasts for fluorescent light tubes.",
      "paragraph": "Tested on ESP8266 as well as Arduino Uno, Mega, Due and Micro boards. It will likely work on other similar Arduino compatible boards. For documentation please check https://github.com/krzychb/DimSwitch.",
      "website": "https://github.com/krzychb/DimSwitch",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/krzychb/DimSwitch-1.0.0.zip",
      "archiveFileName": "DimSwitch-1.0.0.zip",
      "size": 400176,
      "checksum": "SHA-256:8e754256c60a275016c6a4cde108fca6a283f8b32c4afafc952629e35ba0a007"
    },
    {
      "name": "Sensors",
      "version": "1.0.0",
      "author": "James Smith",
      "maintainer": "James Smith \u003cjames@loopj.com\u003e",
      "sentence": "Use I2C-connected sensors like accelerometers, gyroscopes, and barometers in your projects, without knowing the intimate details about the actual device connected.",
      "paragraph": "Use I2C-connected sensors like accelerometers, gyroscopes, and barometers in your projects, without knowing the intimate details about the actual device connected.",
      "website": "https://github.com/loopj/i2c-sensor-hal",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/loopj/Sensors-1.0.0.zip",
      "archiveFileName": "Sensors-1.0.0.zip",
      "size": 23880,
      "checksum": "SHA-256:4830c92d18a9c5a43b048cf8004f815a6f3abc53e92e48e74d83e01a7f36ceb1"
    },
    {
      "name": "HeatpumpIR",
      "version": "1.0.0",
      "author": "Toni Arte\u003ctoni.arte@iki.fi\u003e",
      "maintainer": "Toni Arte\u003ctoni.arte@iki.fi\u003e",
      "sentence": "Heatpump / Air Conditioner infrared control",
      "paragraph": "Control split-unit heatpumps and air conditioners through infrared",
      "website": "https://github.com/ToniA/arduino-heatpumpir",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ToniA/HeatpumpIR-1.0.0.zip",
      "archiveFileName": "HeatpumpIR-1.0.0.zip",
      "size": 128021,
      "checksum": "SHA-256:fd425bed625bee86b68d00d89e0e49e4ffe5be14786d350430dc1ee6a973fdbe"
    },
    {
      "name": "HeatpumpIR",
      "version": "1.0.1",
      "author": "Toni Arte\u003ctoni.arte@iki.fi\u003e",
      "maintainer": "Toni Arte\u003ctoni.arte@iki.fi\u003e",
      "sentence": "Heatpump / Air Conditioner infrared control",
      "paragraph": "Control split-unit heatpumps and air conditioners through infrared",
      "website": "https://github.com/ToniA/arduino-heatpumpir",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ToniA/HeatpumpIR-1.0.1.zip",
      "archiveFileName": "HeatpumpIR-1.0.1.zip",
      "size": 128038,
      "checksum": "SHA-256:d578a2049bf3d751e3cebccd6096ea90bfebaeefe27fef16d5f0a3fd5a6c6a43"
    },
    {
      "name": "NetEEPROM",
      "version": "1.0.0",
      "author": "Greg Tan \u003cgreg@gregtan.com\u003e",
      "maintainer": "Greg Tan \u003cgreg@gregtan.com\u003e",
      "sentence": "A library that stores and retrieves network configuration from EEPROM.",
      "paragraph": "This allows the a network configuration to be stored once, efectively tying network information to the hardware. Once set up, multiple sketches running on the same hardware will retrieve the same network information and the same sketch running on multiple boards will receive a different network configuration for each board.",
      "website": "https://github.com/gregington/NetEEPROM",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/gregington/NetEEPROM-1.0.0.zip",
      "archiveFileName": "NetEEPROM-1.0.0.zip",
      "size": 6479,
      "checksum": "SHA-256:d92662472cb9b1dc79eea4b0d5982379f636df2e620571f862b36d80e1190212"
    },
    {
      "name": "NetEEPROM",
      "version": "1.1.0",
      "author": "Greg Tan \u003cgreg@gregtan.com\u003e",
      "maintainer": "Greg Tan \u003cgreg@gregtan.com\u003e",
      "sentence": "A library that stores and retrieves network configuration from EEPROM.",
      "paragraph": "This allows the a network configuration to be stored once, efectively tying network information to the hardware. Once set up, multiple sketches running on the same hardware will retrieve the same network information and the same sketch running on multiple boards will receive a different network configuration for each board.",
      "website": "https://github.com/gregington/NetEEPROM",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/gregington/NetEEPROM-1.1.0.zip",
      "archiveFileName": "NetEEPROM-1.1.0.zip",
      "size": 6810,
      "checksum": "SHA-256:94ce67702818e171ff2c08075e779ddb2a4db30b3049eaee08ab68e2a9b34c2b"
    },
    {
      "name": "RfidDb",
      "version": "1.0.0",
      "author": "Greg Tan \u003cgreg@gregtan.com\u003e",
      "maintainer": "Greg Tan \u003cgreg@gregtan.com\u003e",
      "sentence": "A library that stores 32 bit identifiers and associated names to EEPROM which can be used to as a basis for RFID access control applications.",
      "paragraph": "Entries can be added, edited and removed from the database and identifiers can be checked for existence in the database. Checks can be performed using the full identifier (for Wiegand 36 readers) or the low 24 bits (for Wiegand 24 readers).",
      "website": "https://github.com/gregington/RfidDb",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/gregington/RfidDb-1.0.0.zip",
      "archiveFileName": "RfidDb-1.0.0.zip",
      "size": 7086,
      "checksum": "SHA-256:f60dd20331596f04d6d3932bdbe64f7bb322288ebdb396ed0b786cb858ea3ca3"
    },
    {
      "name": "BigCrystal",
      "version": "2.0.0",
      "author": "Greg Tan \u003cgreg@gregtan.com\u003e",
      "maintainer": "Greg Tan \u003cgreg@gregtan.com\u003e",
      "sentence": "A library that displays double height characters on LCD displays.",
      "paragraph": "The library works with LCD displays connected via 4 bit parallel, 8 bit parallel, I2C (using the PFC8573) and shift registers. For displays using I2C using the MCP2008 chipset (e.g. Adafruit backpack), use the BigCrystalTWI library.",
      "website": "https://github.com/gregington/BigCrystal",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/gregington/BigCrystal-2.0.0.zip",
      "archiveFileName": "BigCrystal-2.0.0.zip",
      "size": 13153,
      "checksum": "SHA-256:b0c16b03cb05e183b46f8fc9891e7c1c9071d9ce6924c44222236674014a81ee"
    },
    {
      "name": "BigCrystal",
      "version": "2.0.1",
      "author": "Greg Tan \u003cgreg@gregtan.com\u003e",
      "maintainer": "Greg Tan \u003cgreg@gregtan.com\u003e",
      "sentence": "A library that displays double height characters on LCD displays.",
      "paragraph": "The library works with LCD displays connected via 4 bit parallel, 8 bit parallel, I2C (using the PFC8573) and shift registers.",
      "website": "https://github.com/gregington/BigCrystal",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/gregington/BigCrystal-2.0.1.zip",
      "archiveFileName": "BigCrystal-2.0.1.zip",
      "size": 13100,
      "checksum": "SHA-256:f39eade82e1230ea4f9c29e8c1e2e48c664f27f8098136b2bc09163d8d9067e1"
    },
    {
      "name": "TinyScreen",
      "version": "1.1.0",
      "author": "TinyCircuits \u003cinfo@tiny-circuits.com\u003e",
      "maintainer": "TinyCircuits \u003cinfo@tiny-circuits.com\u003e",
      "sentence": "Arduino compatible software support for TinyScreen and TinyScreen+.",
      "paragraph": "Allows easy use of text and graphics on a tiny display as well as reading built-in button inputs.",
      "website": "https://github.com/TinyCircuits/TinyCircuits-TinyScreen_Lib",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/TinyCircuits/TinyScreen-1.1.0.zip",
      "archiveFileName": "TinyScreen-1.1.0.zip",
      "size": 69486,
      "checksum": "SHA-256:307c26ca5b179634a01c6f0cb73dbb78228e00175d8b35a5030631f91a9518d2"
    },
    {
      "name": "base64",
      "version": "1.0.0",
      "author": "Densaugeo \u003cuse@git.hub\u003e",
      "maintainer": "Densaugeo \u003cuse@git.hub\u003e",
      "sentence": "Base64 encoder/decoder for arduino repo",
      "paragraph": "Uses common web conventions - '+' for 62, '/' for 63, '=' for padding. Not that invalid base64 characters are interpreted as padding.",
      "website": "https://github.com/Densaugeo/base64_arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Densaugeo/base64-1.0.0.zip",
      "archiveFileName": "base64-1.0.0.zip",
      "size": 76885,
      "checksum": "SHA-256:f55bcaa430b2597b043dea9054d3f00ebec5058adfa91d0c8acc5b6ce0754924"
    },
    {
      "name": "base64",
      "version": "1.0.1",
      "author": "Densaugeo \u003cuse@git.hub\u003e",
      "maintainer": "Densaugeo \u003cuse@git.hub\u003e",
      "sentence": "Base64 encoder/decoder for arduino repo",
      "paragraph": "Uses common web conventions - '+' for 62, '/' for 63, '=' for padding. Note that invalid base64 characters are interpreted as padding.",
      "website": "https://github.com/Densaugeo/base64_arduino",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Densaugeo/base64-1.0.1.zip",
      "archiveFileName": "base64-1.0.1.zip",
      "size": 76885,
      "checksum": "SHA-256:70be040052ee70f6eae9e1faa2d5e544d2b3a8cc9dc3da6146dab7dd9c108217"
    },
    {
      "name": "CoAP simple library",
      "version": "1.3.5",
      "author": "Hirotaka Niisato \u003chirotakaster@gmail.com\u003e",
      "maintainer": "Hirotaka Niisato \u003chirotakaster@gmail.com\u003e",
      "sentence": "Simple CoAP client/server library for generic Arduino Client hardware.",
      "paragraph": "This CoAP library support simple request/response message.",
      "website": "https://github.com/hirotakaster/CoAP-simple-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/hirotakaster/CoAP_simple_library-1.3.5.zip",
      "archiveFileName": "CoAP_simple_library-1.3.5.zip",
      "size": 9318,
      "checksum": "SHA-256:37428bbd8f496295d9b3576faebd9101a7ee5fddf7a7b7dda386ff1582d32ecb"
    },
    {
      "name": "SmartEverything CC2541",
      "version": "1.0.0",
      "author": "development",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for the TDK-SP13808 module.",
      "paragraph": "\u003cbr\u003eThe TDK-SP13808 module incapsulates the Texas Instruments CC2541, a BLE devicecommunicating with the SmartEverything though standard UART.",
      "website": "https://github.com/ameltech/sme-cc2541-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ameltech/SmartEverything_CC2541-1.0.0.zip",
      "archiveFileName": "SmartEverything_CC2541-1.0.0.zip",
      "size": 7407,
      "checksum": "SHA-256:3816668e6cc17b45577786c03860e089ed2a69f3de49483f09cdf38ed991d681"
    },
    {
      "name": "SmartEverything CC2541",
      "version": "1.0.1",
      "author": "development",
      "maintainer": "axelelettronica \u003cdevelopment@axelelettronica.it\u003e",
      "sentence": "Library code for the TDK-SP13808 module.",
      "paragraph": "\u003cbr\u003eThe TDK-SP13808 module incapsulates the Texas Instruments CC2541, a BLE devicecommunicating with the SmartEverything though standard UART.",
      "website": "https://github.com/ameltech/sme-cc2541-library",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ameltech/SmartEverything_CC2541-1.0.1.zip",
      "archiveFileName": "SmartEverything_CC2541-1.0.1.zip",
      "size": 7407,
      "checksum": "SHA-256:1665d79659a978012d2a99c79b10388ee8f3b8d528200d0f2009d620c82460d4"
    },
    {
      "name": "BlueRobotics MS5837-30BA Library",
      "version": "1.0.0",
      "author": "BlueRobotics",
      "maintainer": "BlueRobotics \u003cinfo@bluerobotics.com\u003e",
      "sentence": "A simple and easy library for the MS5837 pressure/depth sensor",
      "paragraph": "A simple and easy library for the MS5837 pressure/depth sensor",
      "website": "https://github.com/bluerobotics/BlueRobotics_MS5837_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bluerobotics/BlueRobotics_MS5837_30BA_Library-1.0.0.zip",
      "archiveFileName": "BlueRobotics_MS5837_30BA_Library-1.0.0.zip",
      "size": 8195,
      "checksum": "SHA-256:7ff1f5de49ef928ef690ec0e75f546114f2d9503781e879912a4a43cdcba806f"
    },
    {
      "name": "BlueRobotics Arduino_I2C_ESC Library",
      "version": "1.0.0",
      "author": "BlueRobotics",
      "maintainer": "BlueRobotics \u003cinfo@bluerobotics.com\u003e",
      "sentence": "A library for I2C based control of BlueRobotics ESCs",
      "paragraph": "A library for I2C bsaed control of BlueRobotics ESCs including the BlueESC. Can be used on any SimonK ESC as well.",
      "website": "https://github.com/bluerobotics/Arduino_I2C_ESC",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bluerobotics/BlueRobotics_Arduino_I2C_ESC_Library-1.0.0.zip",
      "archiveFileName": "BlueRobotics_Arduino_I2C_ESC_Library-1.0.0.zip",
      "size": 7450,
      "checksum": "SHA-256:27e5af4fdfcc97fcf93c2a41f9cb872905b74af0353f5aa76334a9f8ab0aafd8"
    },
    {
      "name": "BlueRobotics TSYS01 Library",
      "version": "1.0.0",
      "author": "BlueRobotics",
      "maintainer": "BlueRobotics \u003cinfo@bluerobotics.com\u003e",
      "sentence": "A simple and easy library for the TSYS01 temperature sensor",
      "paragraph": "A simple and easy library for the TSYS01 temperature sensor",
      "website": "https://github.com/bluerobotics/BlueRobotics_TSYS01_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/bluerobotics/BlueRobotics_TSYS01_Library-1.0.0.zip",
      "archiveFileName": "BlueRobotics_TSYS01_Library-1.0.0.zip",
      "size": 6643,
      "checksum": "SHA-256:8be3bd7c54aa2c48963be54cca00271447ac3302e521a37a5ce356b27b918073"
    },
    {
      "name": "PololuRPiSlave",
      "version": "1.0.0",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Pololu Raspberry Pi I2C Slave Arduino library",
      "paragraph": "This library helps set up a Pololu A-Star 32U4 controller as an I2C slave for use with the Raspberry Pi.",
      "website": "https://github.com/pololu/pololu-rpi-slave-arduino-library",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/pololu/PololuRPiSlave-1.0.0.zip",
      "archiveFileName": "PololuRPiSlave-1.0.0.zip",
      "size": 15872,
      "checksum": "SHA-256:e606d186f1eb5d405c3eb5ba8cc21990758244f42f915b00bcbe6fc0cc04a044"
    },
    {
      "name": "iLib",
      "version": "0.8.0",
      "author": "Ingmar Splitt",
      "maintainer": "Ingmar Splitt",
      "sentence": "Library for sensors and some atmel-specific functions.",
      "paragraph": "The following sensors can be used with an uniform interface: Austria Microsystems TCS3772 light sensor - RGB and clear, Silicon Labs SI7021 humidity sensor, Invensense MPU9250 9DOF - 3 axis acceleration and gyro PLUS AK8963-IC with magnetic-field sensor, Freescale MPL3115A2 pressure, Maxim MAX44009 ambient and lux with incredible wide dynamic, NXP PCF2127 Realtime-Clock with 2ppm, Bosch BMP280 pressure, ST L3G-Series 3 axis gyro / angular rate, Freescale MAG3110 3 axis Compass / Magnetic field, Freescale MMA8451 3 axis acceleration, Fairchild FAN5421 Single-Cell Li-Ion Switching Charger, STM LPS331 Pressure Sensor, Maxim MAX17047 Fuel Gauge for various Cells",
      "website": "https://github.com/orgua/iLib",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/orgua/iLib-0.8.0.zip",
      "archiveFileName": "iLib-0.8.0.zip",
      "size": 74132,
      "checksum": "SHA-256:0a580c76c0cfc77ee5d1d5d8211a603abc2ee0c068fd4832d09422d84674c5f0"
    },
    {
      "name": "I2C-Sensor-Lib (iLib)",
      "version": "0.8.1",
      "author": "Ingmar Splitt",
      "maintainer": "Ingmar Splitt",
      "sentence": "Library for i2c-sensors and some other specific functions (fast eFn, HDLC, SpektrumSerial).",
      "paragraph": "The following sensors can be used with an uniform interface: Austria Microsystems TCS3772 light sensor - RGB and clear, Silicon Labs SI7021 humidity sensor, Invensense MPU9250 9DOF - 3 axis acceleration and gyro PLUS AK8963-IC with magnetic-field sensor, Freescale MPL3115A2 pressure, Maxim MAX44009 ambient and lux with incredible wide dynamic, NXP PCF2127 Realtime-Clock with 2ppm, Bosch BMP280 pressure, ST L3G-Series 3 axis gyro / angular rate, Freescale MAG3110 3 axis Compass / Magnetic field, Freescale MMA8451 3 axis acceleration, Fairchild FAN5421 Single-Cell Li-Ion Switching Charger, STM LPS331 Pressure Sensor, Maxim MAX17047 Fuel Gauge for various Cells",
      "website": "https://github.com/orgua/iLib",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/orgua/I2C_Sensor_Lib__iLib_-0.8.1.zip",
      "archiveFileName": "I2C_Sensor_Lib__iLib_-0.8.1.zip",
      "size": 77672,
      "checksum": "SHA-256:348606eeb195a839b49afa5fb9e3c8f552aa30e6a4848025f97e27eeb944913c"
    },
    {
      "name": "I2C-Sensor-Lib iLib",
      "version": "0.8.2",
      "author": "Ingmar Splitt",
      "maintainer": "Ingmar Splitt",
      "sentence": "Library for i2c-sensors and some other specific functions (fast eFn, HDLC, SpektrumSerial).",
      "paragraph": "The following sensors can be used with an uniform interface: Austria Microsystems TCS3772 light sensor - RGB and clear, Silicon Labs SI7021 humidity sensor, Invensense MPU9250 9DOF - 3 axis acceleration and gyro PLUS AK8963-IC with magnetic-field sensor, Freescale MPL3115A2 pressure, Maxim MAX44009 ambient and lux with incredible wide dynamic, NXP PCF2127 Realtime-Clock with 2ppm, Bosch BMP280 pressure, ST L3G-Series 3 axis gyro / angular rate, Freescale MAG3110 3 axis Compass / Magnetic field, Freescale MMA8451 3 axis acceleration, Fairchild FAN5421 Single-Cell Li-Ion Switching Charger, STM LPS331 Pressure Sensor, Maxim MAX17047 Fuel Gauge for various Cells",
      "website": "https://github.com/orgua/iLib",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/orgua/I2C_Sensor_Lib_iLib-0.8.2.zip",
      "archiveFileName": "I2C_Sensor_Lib_iLib-0.8.2.zip",
      "size": 77490,
      "checksum": "SHA-256:f3db4ccde3db183a90dbd3f37856ae944e8bab6bf1f173750234d2c8681a5ab6"
    },
    {
      "name": "Arduboy",
      "version": "0.1.0",
      "author": "Arduboy Team",
      "maintainer": "Chris Martinez, Josh Goebel \u003cdreamer3@gmail.com\u003e",
      "sentence": "Arduboy core library",
      "paragraph": "Core library for working with the portable Arduboy gaming platform.",
      "website": "https://github.com/arduboy/arduboy",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Arduboy/Arduboy-0.1.0.zip",
      "archiveFileName": "Arduboy-0.1.0.zip",
      "size": 64037,
      "checksum": "SHA-256:1d348203854d13821bd6c1b6a43849b3ce31241ea794f7574a1e684cb2582afd"
    },
    {
      "name": "Arduboy",
      "version": "1.0.0",
      "author": "Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen, Ross O. Shoger",
      "maintainer": "Ross O. Shoger ros@arduboy.com",
      "sentence": "The Arduboy core library.",
      "paragraph": "This library is for content creation on the Arduboy, a portable gaming platform. The library provides access to the sound, display, and input of the Arduboy.",
      "website": "https://github.com/arduboy/arduboy",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Arduboy/Arduboy-1.0.0.zip",
      "archiveFileName": "Arduboy-1.0.0.zip",
      "size": 37469,
      "checksum": "SHA-256:fe23b6083510724a3601731b783613b68dafd410f921ddf9ab80d8551205039e"
    },
    {
      "name": "Arduboy",
      "version": "1.1.0",
      "author": "Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen, Ross O. Shoger",
      "maintainer": "Ross O. Shoger ros@arduboy.com",
      "sentence": "The Arduboy core library.",
      "paragraph": "This library is for content creation on the Arduboy, a portable gaming platform. The library provides access to the sound, display, and input of the Arduboy.",
      "website": "https://github.com/arduboy/arduboy",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Arduboy/Arduboy-1.1.0.zip",
      "archiveFileName": "Arduboy-1.1.0.zip",
      "size": 37668,
      "checksum": "SHA-256:91054c3a076db9ccb05ff5816c1c929ce12bc5ae8f056456cb7f87fc6f27a343"
    },
    {
      "name": "IBM LMIC framework",
      "version": "1.5.0+arduino-0",
      "author": "IBM",
      "maintainer": "Matthijs Kooijman \u003cmatthijs@stdin.nl\u003e",
      "sentence": "Arduino port of the LMIC (LoraWAN-in-C, formerly LoraMAC-in-C) framework provided by IBM.",
      "paragraph": "Supports SX1272/SX1276 and HopeRF RFM92/RFM95 tranceivers",
      "website": "http://www.research.ibm.com/labs/zurich/ics/lrsc/lmic.html",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/matthijskooijman/IBM_LMIC_framework-1.5.0+arduino-0.zip",
      "archiveFileName": "IBM_LMIC_framework-1.5.0+arduino-0.zip",
      "size": 831866,
      "checksum": "SHA-256:07a3d869d88755b4e7f0e835be3b626b190fe06632d439fd2c67ed338321693c"
    },
    {
      "name": "IBM LMIC framework",
      "version": "1.5.0+arduino-1",
      "author": "IBM",
      "maintainer": "Matthijs Kooijman \u003cmatthijs@stdin.nl\u003e",
      "sentence": "Arduino port of the LMIC (LoraWAN-in-C, formerly LoraMAC-in-C) framework provided by IBM.",
      "paragraph": "Supports SX1272/SX1276 and HopeRF RFM92/RFM95 tranceivers",
      "website": "http://www.research.ibm.com/labs/zurich/ics/lrsc/lmic.html",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/matthijskooijman/IBM_LMIC_framework-1.5.0+arduino-1.zip",
      "archiveFileName": "IBM_LMIC_framework-1.5.0+arduino-1.zip",
      "size": 832124,
      "checksum": "SHA-256:9b007d2b019cb6866256096cbc623f84f0413d0003c8d773d89370fbab33a328"
    },
    {
      "name": "swRTC",
      "version": "1.2.3",
      "author": "Leonardo Miliani, lesto",
      "maintainer": "Leonardo Miliani",
      "sentence": "Software implementation of a Real-Time Clock for Arduino boards and Atmel microcontrollers.",
      "website": "http://www.leonardomiliani.com",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/leomil72/swRTC-1.2.3.zip",
      "archiveFileName": "swRTC-1.2.3.zip",
      "size": 28551,
      "checksum": "SHA-256:0d97b4135d91b8c37fc761e8ce7ab22e4b6a3b091264548241fb0fb1e6d9d6a2"
    },
    {
      "name": "swRTC",
      "version": "1.2.5",
      "author": "Leonardo Miliani, lesto",
      "maintainer": "Leonardo Miliani",
      "sentence": "Software implementation of a Real-Time Clock for Arduino boards and Atmel microcontrollers.",
      "website": "http://www.leonardomiliani.com",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/leomil72/swRTC-1.2.5.zip",
      "archiveFileName": "swRTC-1.2.5.zip",
      "size": 28595,
      "checksum": "SHA-256:5c442efe92227851f2a5c8887ecaddcb5b52365067bc1d1ea044ae8a0e8986a9"
    },
    {
      "name": "leOS",
      "version": "1.2.1",
      "author": "Leonardo Miliani",
      "maintainer": "Leonardo Miliani",
      "sentence": "Simple scheduler that run little tasks within IRSs",
      "website": "http://www.leonardomiliani.com",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/leomil72/leOS-1.2.1.zip",
      "archiveFileName": "leOS-1.2.1.zip",
      "size": 321742,
      "checksum": "SHA-256:aa96c06e50fb4d76615ca0d75d2608e07d206ac92d487912a7821e789ef1815a"
    },
    {
      "name": "leOS2",
      "version": "2.3.1",
      "author": "Leonardo Miliani",
      "maintainer": "Leonardo Miliani",
      "sentence": "Simple scheduler based on watchdog that runs little tasks within IRS",
      "website": "http://www.leonardomiliani.com",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/leomil72/leOS2-2.3.1.zip",
      "archiveFileName": "leOS2-2.3.1.zip",
      "size": 319738,
      "checksum": "SHA-256:732c377452df81c7a4a0bd5049b8eb29e8b7f76c666c65788181ad112a1aef0b"
    },
    {
      "name": "looper",
      "version": "1.1.1",
      "author": "Leonardo Miliani",
      "maintainer": "Leonardo Miliani",
      "sentence": "Proto-scheduler based on the use of millis()",
      "website": "http://www.leonardomiliani.com",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/leomil72/looper-1.1.1.zip",
      "archiveFileName": "looper-1.1.1.zip",
      "size": 25448,
      "checksum": "SHA-256:9aa229eff7c84faf524c97286c8c7e18f153f600bf122e13a2cfb91a4a5d961a"
    },
    {
      "name": "pRNG",
      "version": "1.2.1",
      "author": "Leonardo Miliani",
      "maintainer": "Leonardo Miliani",
      "sentence": "Pseudo-random number generator",
      "website": "http://www.leonardomiliani.com",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/leomil72/pRNG-1.2.1.zip",
      "archiveFileName": "pRNG-1.2.1.zip",
      "size": 20198,
      "checksum": "SHA-256:1d954d0e937ed925aa4d871edd57adfb9e9edb3fd1e28cf358864bb47bc764a0"
    },
    {
      "name": "secTimer",
      "version": "1.0.0",
      "author": "Leonardo Miliani",
      "maintainer": "Leonardo Miliani",
      "sentence": "Simple seconds counter",
      "website": "http://www.leonardomiliani.com",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/leomil72/secTimer-1.0.0.zip",
      "archiveFileName": "secTimer-1.0.0.zip",
      "size": 21266,
      "checksum": "SHA-256:77a95755d96bc41e683335e55a44fa2998abcfe9f7220c3290e6567bbb66cfbd"
    },
    {
      "name": "analogComp",
      "version": "1.2.2",
      "author": "Leonardo Miliani",
      "maintainer": "Leonardo Miliani",
      "sentence": "Simple scheduler based on watchdog that runs little tasks within IRS",
      "website": "http://www.leonardomiliani.com",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/leomil72/analogComp-1.2.2.zip",
      "archiveFileName": "analogComp-1.2.2.zip",
      "size": 21050,
      "checksum": "SHA-256:586345e1d7ede15b06747272ee48b6a7d5b6652a56723166d1c84a334536c64f"
    },
    {
      "name": "OneWireHub",
      "version": "0.2.0",
      "author": "Shagrat2, orgua",
      "maintainer": "Shagrat2",
      "sentence": "OneWire slave device emulator with support for various simultaneously devices",
      "website": "https://github.com/orgua/OneWireHub",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/orgua/OneWireHub-0.2.0.zip",
      "archiveFileName": "OneWireHub-0.2.0.zip",
      "size": 2573405,
      "checksum": "SHA-256:11aa0228c98b88da0c420d1edf682f576ad98f440c9c328413084651180e6d68"
    },
    {
      "name": "OneWireHub",
      "version": "0.3.0",
      "author": "Shagrat2,orgua",
      "maintainer": "Shagrat2",
      "sentence": "OneWire slave device emulator with support for various simultaneously devices",
      "paragraph": "supported sensors: DS2401, DS18B20, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/orgua/OneWireHub-0.3.0.zip",
      "archiveFileName": "OneWireHub-0.3.0.zip",
      "size": 3632283,
      "checksum": "SHA-256:3f29943c6c6bb40016b4869526c0abf4f7b0bf4fcddc0ce9e23f2a839292ce24"
    },
    {
      "name": "OneWireHub",
      "version": "0.4.0",
      "author": "orgua,Shagrat2,MarkusLange",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for various simultaneously devices",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/orgua/OneWireHub-0.4.0.zip",
      "archiveFileName": "OneWireHub-0.4.0.zip",
      "size": 4940077,
      "checksum": "SHA-256:2422a0a90b5488f3f48b4dceb73859af69c1806ddfa7cc688e0f9b84756e3a9b"
    },
    {
      "name": "OneWireHub",
      "version": "0.5.0",
      "author": "orgua,Shagrat2,MarkusLange",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for various simultaneously devices",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/orgua/OneWireHub-0.5.0.zip",
      "archiveFileName": "OneWireHub-0.5.0.zip",
      "size": 7522284,
      "checksum": "SHA-256:7cb4fb21c11adb01cdd1c474a66eacac5af553508b2f6815474714150e3396f5"
    },
    {
      "name": "OneWireHub",
      "version": "0.6.5",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for various simultaneously 1wire devices.",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/orgua/OneWireHub-0.6.5.zip",
      "archiveFileName": "OneWireHub-0.6.5.zip",
      "size": 7531210,
      "checksum": "SHA-256:0e80f3e6a2947aa42f709b349fda2a46d07c4ca96bc942d2c517228586e9a83c"
    },
    {
      "name": "OneWireHub",
      "version": "0.7.0",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for various simultaneously 1wire devices.",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/orgua/OneWireHub-0.7.0.zip",
      "archiveFileName": "OneWireHub-0.7.0.zip",
      "size": 7531458,
      "checksum": "SHA-256:069e8acc1a00c9c7799ded84ff32137af96b31400038d01fd19d3d57d3f80cf7"
    },
    {
      "name": "OneWireHub",
      "version": "0.7.5",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for various simultaneously 1wire devices.",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/orgua/OneWireHub-0.7.5.zip",
      "archiveFileName": "OneWireHub-0.7.5.zip",
      "size": 7545085,
      "checksum": "SHA-256:237f613f7f6e38f1e52956a9f445b52131a8f55163e646cb090d354c293f1f25"
    },
    {
      "name": "OneWireHub",
      "version": "0.8.0",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for up to 32 simultaneous 1wire devices.",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/orgua/OneWireHub-0.8.0.zip",
      "archiveFileName": "OneWireHub-0.8.0.zip",
      "size": 7546071,
      "checksum": "SHA-256:e72175eee998c5468b5ae804e313dc1ffce703c39e3db69a121b470b54feb554"
    },
    {
      "name": "OneWireHub",
      "version": "0.8.5",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for up to 32 simultaneous 1wire devices.",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/orgua/OneWireHub-0.8.5.zip",
      "archiveFileName": "OneWireHub-0.8.5.zip",
      "size": 7546351,
      "checksum": "SHA-256:79c59d9d8cb6a026b809e42283705babc2ec42171b94d360dc893a0ea2b35a05"
    },
    {
      "name": "OneWire-Slave-Hub",
      "version": "0.6.0",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for various simultaneously devices",
      "paragraph": "supported sensors: DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2413, DS2423, DS2433, DS2438, DS2450, DS2890",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/orgua/OneWire_Slave_Hub-0.6.0.zip",
      "archiveFileName": "OneWire_Slave_Hub-0.6.0.zip",
      "size": 7528574,
      "checksum": "SHA-256:38392e9d48a012764f89fba4c1f2d2a61a858f2b7e3d10f0976f233700ed3615"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.0.0",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  For Esp8266 it has three methods of sending data, DMA, UART, and Bit Bang.",
      "website": "https://github.com/Makuna/NeoPixelBus",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Makuna/NeoPixelBus_by_Makuna-2.0.0.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.0.0.zip",
      "size": 64584,
      "checksum": "SHA-256:ea85bbb0b7635d73b6555cfc7556de2ca11f2e89899014c2034e26521edd318f"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.0.1",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  For Esp8266 it has three methods of sending data, DMA, UART, and Bit Bang.",
      "website": "https://github.com/Makuna/NeoPixelBus",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Makuna/NeoPixelBus_by_Makuna-2.0.1.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.0.1.zip",
      "size": 64591,
      "checksum": "SHA-256:15ec6009f258f443b54d283aadbbbe6235e5da7f4a71ccac5fec80f26fc73d49"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.0.2",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  For Esp8266 it has three methods of sending data, DMA, UART, and Bit Bang.",
      "website": "https://github.com/Makuna/NeoPixelBus",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Makuna/NeoPixelBus_by_Makuna-2.0.2.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.0.2.zip",
      "size": 64926,
      "checksum": "SHA-256:88b5b057d31066ed34ef08189fa14fc7c4d54511454051bf90d7ceebbe635511"
    },
    {
      "name": "NeoPixelBus by Makuna",
      "version": "2.0.3",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812 \u0026 SK6812) easy.",
      "paragraph": "Supports most Arduino platforms, and especially Esp8266.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  For Esp8266 it has three methods of sending data, DMA, UART, and Bit Bang.",
      "website": "https://github.com/Makuna/NeoPixelBus",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Makuna/NeoPixelBus_by_Makuna-2.0.3.zip",
      "archiveFileName": "NeoPixelBus_by_Makuna-2.0.3.zip",
      "size": 66223,
      "checksum": "SHA-256:9b5c5c87506b4d46d0a41dff34f7a0ff4f519974b58e3489cbd5ca1dd279aa01"
    },
    {
      "name": "ArduinoFacil",
      "version": "1.0.2",
      "author": "Jorge Gómez \u003cjorge@sindormir.net\u003e",
      "maintainer": "Jorge Gómez \u003cjorge@sindormir.net\u003e, kwendenarmo \u003ckwendenarmo@akornsys-rdi.net\u003e",
      "sentence": "Librería (más bien conjunto de macros) para facilitar el uso de Arduino en castellano para principiantes.",
      "website": "https://github.com/SindormirNet/ArduinoFacil",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/SindormirNet/ArduinoFacil-1.0.2.zip",
      "archiveFileName": "ArduinoFacil-1.0.2.zip",
      "size": 19757,
      "checksum": "SHA-256:8ce0658a7ecff75b079a46a124a91b8a79b966a37376bb16bbba9409b352ad6c"
    },
    {
      "name": "Sindormir SevenSegments",
      "version": "1.0.0",
      "author": "Jorge Gómez \u003cjorge@sindormir.net\u003e",
      "maintainer": "Jorge Gómez \u003cjorge@sindormir.net\u003e",
      "sentence": "Simple Seven Segments library for Arduino.",
      "paragraph": "Easy way to display 0 to F digits.",
      "website": "https://github.com/SindormirNet/ArduinoSevenSegments",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/SindormirNet/Sindormir_SevenSegments-1.0.0.zip",
      "archiveFileName": "Sindormir_SevenSegments-1.0.0.zip",
      "size": 15028,
      "checksum": "SHA-256:35be5323a8db3789ac5ad96ed10960a2a1270c19bf83e2702414ee36724da7c8"
    },
    {
      "name": "esp8266_mdns",
      "version": "1.0.0",
      "author": "mrdunk",
      "maintainer": "mrdunk",
      "sentence": "mDNS queries and responses on esp8266.",
      "paragraph": "Or to describe it another way: An mDNS Client or Bonjour Client library for the esp8266.",
      "website": "https://github.com/mrdunk/esp8266_mdns",
      "category": "Communication",
      "architectures": [
        "esp8266"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mrdunk/esp8266_mdns-1.0.0.zip",
      "archiveFileName": "esp8266_mdns-1.0.0.zip",
      "size": 12696,
      "checksum": "SHA-256:6ea185c09621b1efa6dd8fc6f8f4fc4aa10f7e3f9322b82adb9c287726d86f6d"
    },
    {
      "name": "XLR8Servo",
      "version": "1.0.0",
      "author": "MattWeber \u003clinkedin.com/in/mattweberdesign\u003e",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Allows Arduino boards to control a variety of servo motors. For Alorium Technology's XLR8 board.",
      "paragraph": "It uses a set of dedicated custom hardware timers instead of the microcontroller's timer. The library can control up to 20 servos accurately without relying on microcontroller interrupt handling.\u003cbr /\u003e",
      "website": "https://github.com/AloriumTechnology/XLR8Servo",
      "category": "Device Control",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/AloriumTechnology/XLR8Servo-1.0.0.zip",
      "archiveFileName": "XLR8Servo-1.0.0.zip",
      "size": 13708,
      "checksum": "SHA-256:9188d36eec128833515c466e27fd45dd7e9f058d45e594ad6725b443009d220a"
    },
    {
      "name": "XLR8Float",
      "version": "1.0.0",
      "author": "MattWeber \u003cmatthew.d.weber@ieee.org\u003e",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Arduino library for hardware accelerated floating point math.",
      "paragraph": "Takes advantage of hardware acceleration available in Alorium Technology's XLR8 product.",
      "website": "https://github.com/AloriumTechnology/XLR8Float",
      "category": "Data Processing",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/AloriumTechnology/XLR8Float-1.0.0.zip",
      "archiveFileName": "XLR8Float-1.0.0.zip",
      "size": 21765,
      "checksum": "SHA-256:05d04e1ee6bab1e4f11afb47a941bccda133279a3daebf2f075a604f06bc6d92"
    },
    {
      "name": "XLR8Info",
      "version": "1.0.0",
      "author": "MattWeber \u003clinkedin.com/in/mattweberdesign\u003e",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Arduino library for identifying features of XLR8 product",
      "paragraph": "Determines version number of XLR8 design and which XBs are included.",
      "website": "https://github.com/AloriumTechnology/XLR8Info",
      "category": "Uncategorized",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/AloriumTechnology/XLR8Info-1.0.0.zip",
      "archiveFileName": "XLR8Info-1.0.0.zip",
      "size": 14178,
      "checksum": "SHA-256:182b7d22d6d4f25f8931956968977827053c10bd774e49d4dc7b1274e8232875"
    },
    {
      "name": "XLR8ADC",
      "version": "1.0.0",
      "author": "MattWeber \u003clinkedin.com/in/mattweberdesign\u003e",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Arduino library to take advantage of XLR8 ADC performance.",
      "paragraph": "XLR8 has a 12 bit ADC and can perform at higher sample rates than the ADC in an ordinary ATmega-based Arduino.",
      "website": "https://github.com/AloriumTechnology/XLR8ADC",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/AloriumTechnology/XLR8ADC-1.0.0.zip",
      "archiveFileName": "XLR8ADC-1.0.0.zip",
      "size": 7812,
      "checksum": "SHA-256:6ac5e88377b5f9730b787429f6198807c9afb57fbf0800ffea563fca2c25b3bb"
    },
    {
      "name": "XLR8NeoPixel",
      "version": "1.0.0",
      "author": "MattWeber \u003cmatthew.d.weber@ieee.org\u003e",
      "maintainer": "Alorium Technology \u003cinfo@aloriumtech.com\u003e",
      "sentence": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "paragraph": "Takes advantage of hardware acceleration available in Alorium Technology's XLR8 product. Doesn't use AVR memory, doesn't require disabling interrupts during show() routine, doesn't lose resolution on RGB values when setting brightness low then high. Does provide an awesome drop-in replacement for the standard NeoPixel library.",
      "website": "https://github.com/AloriumTechnology/XLR8NeoPixel",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/AloriumTechnology/XLR8NeoPixel-1.0.0.zip",
      "archiveFileName": "XLR8NeoPixel-1.0.0.zip",
      "size": 33311,
      "checksum": "SHA-256:42f77086d130edbdd0bf4313e3489a5a2fa606c0610afa297413fe71b763bd9d"
    },
    {
      "name": "DIGI-DOT-BOOSTER Library",
      "version": "1.0.0",
      "author": "Gamadril",
      "maintainer": "Gamadril \u003cgamadril.dev@gmail.com\u003e",
      "sentence": "An easy to use library to control the DD-Booster.",
      "paragraph": "Encapsulates all protocol logic and SPI control in simple functions.",
      "website": "https://github.com/Gamadril/DD-Booster-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Gamadril/DIGI_DOT_BOOSTER_Library-1.0.0.zip",
      "archiveFileName": "DIGI_DOT_BOOSTER_Library-1.0.0.zip",
      "size": 183530,
      "checksum": "SHA-256:bdd172f82d8bc3938fe27a30d132731d926cf2c5a216832f3d646f1e623f5f4f"
    },
    {
      "name": "SparkFun RedBot Library",
      "version": "2.0.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Provides control to the SparkFun RedBot.",
      "paragraph": "Includes examples for accelerometer, whisker bumpers, line followers, wheel encoders, and driving control.",
      "website": "https://github.com/sparkfun/SparkFun_Redbot_Arduino_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_RedBot_Library-2.0.0.zip",
      "archiveFileName": "SparkFun_RedBot_Library-2.0.0.zip",
      "size": 44624,
      "checksum": "SHA-256:c3eda297b4c2092e464c8ccb4a6aab660df9502d6dffb9cbd1cb865808936ef0"
    },
    {
      "name": "SparkFun RedBot Library",
      "version": "2.1.0",
      "author": "SparkFun Electronics \u003ctechsupport@sparkfun.com\u003e",
      "maintainer": "SparkFun Electronics \u003csparkfun.com\u003e",
      "sentence": "Provides control to the SparkFun RedBot.",
      "paragraph": "Includes examples for accelerometer, whisker bumpers, line followers, wheel encoders, and driving control.",
      "website": "https://github.com/sparkfun/SparkFun_Redbot_Arduino_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/sparkfun/SparkFun_RedBot_Library-2.1.0.zip",
      "archiveFileName": "SparkFun_RedBot_Library-2.1.0.zip",
      "size": 48428,
      "checksum": "SHA-256:6ece78f6cae892add39f9bd8d83be1364d22513c1309e3c79105835dfc7b35d6"
    },
    {
      "name": "i2cdetect",
      "version": "1.0.0",
      "author": "Mike Causer",
      "maintainer": "Mike Causer \u003cmcauser@gmail.com\u003e",
      "sentence": "Arduino library for scanning I2C bus for devices",
      "paragraph": "Output a table with the list of detected devices, similar to the linux program of the same name",
      "website": "https://github.com/mcauser/i2cdetect",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/mcauser/i2cdetect-1.0.0.zip",
      "archiveFileName": "i2cdetect-1.0.0.zip",
      "size": 3959,
      "checksum": "SHA-256:cefe95c6d5de0ca623e1dfc7266eb49d01de0642745b028c5a7986ccf6875aca"
    },
    {
      "name": "Embedded Template Library",
      "version": "8.0.0",
      "author": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "maintainer": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "sentence": "A C++ template library tailored for embedded systems.",
      "paragraph": "Requires some support from STL. See http://andybrown.me.uk/2011/01/15/the-standard-template-library-stl-for-avr-with-c-streams/",
      "website": "http://www.etlcpp.com/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ETLCPP/Embedded_Template_Library-8.0.0.zip",
      "archiveFileName": "Embedded_Template_Library-8.0.0.zip",
      "size": 1445077,
      "checksum": "SHA-256:ae06f5f7565e6016b478455bc4eeadd955c0d7e9e57999fbcbf4ef0778adf42c"
    },
    {
      "name": "Embedded Template Library",
      "version": "8.0.1",
      "author": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "maintainer": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "sentence": "A C++ template library tailored for embedded systems.",
      "paragraph": "Requires some support from STL. See http://andybrown.me.uk/2011/01/15/the-standard-template-library-stl-for-avr-with-c-streams/",
      "website": "http://www.etlcpp.com/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ETLCPP/Embedded_Template_Library-8.0.1.zip",
      "archiveFileName": "Embedded_Template_Library-8.0.1.zip",
      "size": 1445871,
      "checksum": "SHA-256:90626615de09784b1ae40e847963e42a355d6725a7cd648a7cf3a50ec969b1f0"
    },
    {
      "name": "Embedded Template Library",
      "version": "8.0.2",
      "author": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "maintainer": "John Wellbelove \u003cjohn.wellbelove@etlcpp.com\u003e",
      "sentence": "A C++ template library tailored for embedded systems.",
      "paragraph": "Requires some support from STL. See http://andybrown.me.uk/2011/01/15/the-standard-template-library-stl-for-avr-with-c-streams/",
      "website": "http://www.etlcpp.com/",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/ETLCPP/Embedded_Template_Library-8.0.2.zip",
      "archiveFileName": "Embedded_Template_Library-8.0.2.zip",
      "size": 1446009,
      "checksum": "SHA-256:2084c3c6038481ca74c83913dc907ab00784c471d45e04f53685d52428e28e23"
    },
    {
      "name": "MS5xxx",
      "version": "1.0.1",
      "author": "Roman Schmitz \u003croman@schmitzi.net\u003e",
      "maintainer": "Roman Schmitz \u003croman@schmitzi.net\u003e",
      "sentence": "Library for digital pressure sensors MS5xxx by Measurement Specialties (MEAS).",
      "paragraph": "Tested with Arduino Uno/Nano/Mico and ESP8266. Long-term tests with MS5607, working implementation for MS5611 chipset.",
      "website": "https://github.com/Schm1tz1/arduino-ms5xxx",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Schm1tz1/MS5xxx-1.0.1.zip",
      "archiveFileName": "MS5xxx-1.0.1.zip",
      "size": 35418,
      "checksum": "SHA-256:5e8f60f08421a649e6e4a9f7063b048cab47b100814da98d7f81be2c51f9b17d"
    },
    {
      "name": "MS5xxx",
      "version": "1.0.2",
      "author": "Roman Schmitz \u003croman@schmitzi.net\u003e",
      "maintainer": "Roman Schmitz \u003croman@schmitzi.net\u003e",
      "sentence": "Library for digital pressure sensors MS5xxx by Measurement Specialties (MEAS).",
      "paragraph": "Tested with Arduino Uno/Nano/Mico and ESP8266. Long-term tests with MS5607, working implementation for MS5611 chipset.",
      "website": "https://github.com/Schm1tz1/arduino-ms5xxx",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Schm1tz1/MS5xxx-1.0.2.zip",
      "archiveFileName": "MS5xxx-1.0.2.zip",
      "size": 35419,
      "checksum": "SHA-256:bb14c3a613ff63aa4d5b586a0e182c759d8c63bc0a269ae791e2f2da58030f54"
    },
    {
      "name": "TSIC",
      "version": "0.9.0",
      "author": "Roman Schmitz \u003croman@schmitzi.net\u003e",
      "maintainer": "Roman Schmitz \u003croman@schmitzi.net\u003e",
      "sentence": "Library for TSIC digital temperature sensors (type 206/306/506 and similar).",
      "paragraph": "This project is a library for TSIC digital temperature sensors (type 206/306/506 and similar). It is based on the version 2 from Rolf Wagner from 2014.03.09 which can be found on Arduino Playground. The TSIC sensors feature a very hich accuracy and can be read out roughly every 100ms using the ZACwire-rotocol, more informations can be found in the datasheet. The code is optimized for high speed and low memory consumption.",
      "website": "https://github.com/Schm1tz1/arduino-tsic",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/Schm1tz1/TSIC-0.9.0.zip",
      "archiveFileName": "TSIC-0.9.0.zip",
      "size": 18393,
      "checksum": "SHA-256:590d925f159fe9125798e121465859dc588d57d99c5375c1b381b36950bbf87a"
    },
    {
      "name": "RCLSwitch",
      "version": "1.4.0",
      "author": "NicoHood",
      "maintainer": "NicoHood \u003cblog@nicohood.de\u003e",
      "sentence": "Compact version of RC Switch",
      "paragraph": "RCLSwitch is capable of sending TYPE A 10 Dip Switch signals only, but with a very compact implementation.",
      "website": "https://github.com/NicoHood/RCLSwitch",
      "category": "Signal Input/Output",
      "architectures": [
        "avr"
      ],
      "types": [
        "Contributed"
      ],
      "url": "http://downloads.arduino.cc/libraries/NicoHood/RCLSwitch-1.4.0.zip",
      "archiveFileName": "RCLSwitch-1.4.0.zip",
      "size": 4465,
      "checksum": "SHA-256:d052cbb83e8f1ac35068a29dfb30df80b09abedf71ce301694d478dbee1887d0"
    }
  ]
}